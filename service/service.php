<?php
date_default_timezone_set('Europe/Dublin');
require_once("Rest.inc.php");
require_once ("KLogger.php");

class API extends REST {

    public $jsonObj = array();

 // Dev details
     const DB_SERVER = "mysql1832int.cp.blacknight.com";
     const DB_USER = "u1263656_enurs";
     const DB_PASSWORD = "Adminnurse123@@";
     const DB = "db1263656_enursing";

    /*const DB_SERVER = "localhost";
    const DB_USER = "root";
    const DB_PASSWORD = "";
    const DB = "enursing";*/

    
    private $db = NULL;
    private $log;

//private $dbo = NULL;
// Do database work that throws an exception
//$log-&gt;LogError("An exception was thrown in ThisFunction()");
// Print out some information
//$log-&gt;LogInfo("Internal Query Time: $time_ms milliseconds");
// Print out the value of some variables
//$log-&gt;LogDebug("User Count: $User_Count");

    public function __construct() {
        parent::__construct();    // Init parent contructor
        $this->dbConnect();     // Initiate Database connection
    }

    private function dbConnect() {
        $this->db = mysql_connect(self::DB_SERVER, self::DB_USER, self::DB_PASSWORD);
        if ($this->db)
            mysql_select_db(self::DB, $this->db);
    }

    public function processApi() {

        $func = "";
        $this->log = new KLogger("log.txt", KLogger::DEBUG);
// $this->log-&gt;

        $input = file_get_contents('php://input');
        $ob = json_decode($input);
        if ($ob !== null) {
            $this->log->LogDebug("JsonRequest \n");

            $this->processJsonRequest();
            return false;
        }

        if ($this->get_request_method() == "GET") {
            $func = strtolower(filter_input(INPUT_GET, 'func', FILTER_SANITIZE_SPECIAL_CHARS, array('flags' => FILTER_FLAG_STRIP_LOW)));
        } else {
            $func = strtolower(filter_input(INPUT_POST, 'func', FILTER_SANITIZE_SPECIAL_CHARS, array('flags' => FILTER_FLAG_STRIP_LOW)));
        }

        if ((int) method_exists($this, $func) > 0) {
            if ($func == 'registerdevice') {            
                $this->registerdevice();                
            }
            if ($func == 'login') {            
                $this->login();                
            }
            if ($func == 'uploadsignature') {            
                $this->uploadsignature();                
            }
            if ($func == 'residentdetails') {            
                $this->residentdetails();                
            }
            if ($func == 'residentprofile') {            
                $this->residentprofile();                
            }
            if ($func == 'waterlowdetails') {            
                $this->waterlowdetails();                
            }
            if ($func == 'smmsedetails') {            
                $this->smmsedetails();                
            }
            if ($func == 'mustdetails') {            
                $this->mustdetails();                
            }
            if ($func == 'filterresidentdetails') {            
                $this->filterresidentdetails();                
            }
            if ($func == 'resnutritiondetails') {            
                $this->resnutritiondetails();                
            }
            if ($func == 'resbirthdaydetails') {            
                $this->resbirthdaydetails();                
            }
            if ($func == 'resappointments') {            
                $this->resappointments();                
            }
            if ($func == 'groupdetails') {            
                $this->groupdetails();                
            }
            if($func == 'mygroups') {
                $this->mygroups();
            }
            if($func == 'residentoptions') {
                $this->residentoptions();
            }
            if($func == 'dailymorningoptions') {
                $this->dailymorningoptions();
            }
            if($func == 'resdailymorning') {
                $this->resdailymorning();
            }
            if($func == 'addmultidailycare') {
                $this->addmultidailycare();
            }
            if($func == 'getresmorningcare') {
                $this->getresmorningcare();
            }
            if($func == 'getresmorningcarepage') {
                $this->getresmorningcarepage();
            }
            if($func == 'getresmedication') {
                $this->getresmedication();
            }
            if($func == 'getresmedicationother') {
                $this->getresmedicationother();
            }
            if($func == 'resmedicationhistory') {
                $this->resmedicationhistory();
            }
            if($func == 'updateresmedication') {
                $this->updateresmedication();
            }
            if($func == 'updateresmadicationall'){
                $this->updateresmadicationall();
            }
            if($func == 'getnutritionoptions') {
                $this->getnutritionoptions();
            }
            if($func == 'resnutritionhistory') {
                $this->resnutritionhistory();
            }
            if($func == 'resnutritionhistorypage') {
                $this->resnutritionhistorypage();
            }
            if($func == 'insertresnutritions') {
                $this->insertresnutritions();
            }
            if($func == 'insertmultiresnutritions') {
                $this->insertmultiresnutritions();
            }
            if($func == 'updateresnutritions') {
                $this->updateresnutritions();
            }
            if($func == 'getresnutritions') {
                $this->getresnutritions();
            }
            if($func == 'getpatchoptions') {
                $this->getpatchoptions();
            }
            if($func == 'getresidentpatch') {
                $this->getresidentpatch();
            }
            if($func == 'getresidentpatchpage') {
                $this->getresidentpatchpage();
            }
            if($func == 'addnewrespatch') {
                $this->addnewrespatch();
            }
            if($func == 'updaterespatch') {
                $this->updaterespatch();
            }
            if($func == 'bowelchart') {
                $this->bowelchart();
            }
            if($func == 'resbowelrecords') {
                $this->resbowelrecords();
            }
            if($func == 'addbowelrecord') {
                $this->addbowelrecord();
            }
            if($func == 'bowelrecordshistory') {
                $this->bowelrecordshistory();
            }
            if($func == 'bowelrecordshistorypage') {
                $this->bowelrecordshistorypage();
            }
            if($func == 'editbowelrecord') {
                $this->editbowelrecord();
            }
            if($func == 'addpositionchart') {
                $this->addpositionchart();
            }
            if($func == 'addpositionformultipleresidents'){
                $this->addpositionformultipleresidents();
            }
            if($func == 'positioncharthistory') {
                $this->positioncharthistory();
            }
            if($func == 'positioncharthistorypage') {
                $this->positioncharthistorypage();
            }
            if($func == 'addressafetychecklist') {
                $this->addressafetychecklist();
            }
            if($func == 'addresbedraildetails') {
                $this->addresbedraildetails();
            }
            if($func == 'safetychecklisthistory') {
                $this->safetychecklisthistory();
            }
            if($func == 'safetychecklisthistorypage') {
                $this->safetychecklisthistorypage();
            }
            if($func == 'resbedrailhistory') {
                $this->resbedrailhistory();
            }
            if($func == 'updateresidentimage'){
                $this->updateresidentimage();
            }
            if($func == 'updateuserimage'){
                $this->updateuserimage();
            }
            /*** Recipe section ****************************************/
            if($func == 'getresidentrecipedetails'){
                $this->getresidentrecipedetails();
            }
            if($func == 'categoryrecipedetails'){
                $this->categoryrecipedetails();
            }
            if($func == 'addresidentrecipe'){
                $this->addresidentrecipe();
            }
            if($func == 'getresidentfuddet'){
                $this->getresidentfuddet();
            }
            if($func == 'getresidentfuddetails'){
                $this->getresidentfuddetails();
            }
            if($func == 'deleteresrecipe'){
                $this->deleteresrecipe();
            }
            if($func == 'edirresidentfuddet'){
                $this->edirresidentfuddet();
            }
            if($func == 'residentselectedrecipe'){
                $this->residentselectedrecipe();
            }
            /******End recipe functions *********************************/
            if($func == 'getalluserlist'){
                $this->getalluserlist();
            }
            if($func == 'addcareintervention'){
                $this->addcareintervention();
            }
            if($func == 'viewcareintervention'){
                $this->viewcareintervention();
            }
            if($func == 'hoistlocations'){
                $this->hoistlocations();
            }
            if($func == 'addhoistsafetychecklist'){
                $this->addhoistsafetychecklist();
            }
            if($func == 'hoistsafetychecklisthistory'){
                $this->hoistsafetychecklisthistory();
            }
            if($func == 'hoistsafetychecklisthistorypage'){
                $this->hoistsafetychecklisthistorypage();
            }
            if($func == 'activitylocations'){
                $this->activitylocations();
            }
            if($func == 'socialactivities'){
                $this->socialactivities();
            }
            if($func == 'addressocialactivity'){
                $this->addressocialactivity();
            }
            if($func == 'ressocialactivityhistory'){
                $this->ressocialactivityhistory();
            }
            if($func == 'residentdailyreports'){
                $this->residentdailyreports();
            }
            if($func == 'recordwound'){
                $this->recordwound();
            }
            if($func == 'reswoundlist'){
                $this->reswoundlist();
            }
            if($func == 'reswoundtreatplans'){
                $this->reswoundtreatplans();
            }
            if($func == 'reviewtreatplans'){
                $this->reviewtreatplans();
            }
            if($func == 'treatplanhistory'){
                $this->treatplanhistory();
            }
            if($func == 'wounddailyupdate'){
                $this->wounddailyupdate();
            }
            if($func == 'wounddetailedreview'){
                $this->wounddetailedreview();
            }
            if($func == 'lastwoundreviewdetails'){
                $this->lastwoundreviewdetails();
            }
            if($func == 'wounddailyupdatelist'){
                $this->wounddailyupdatelist();
            }
            if($func == 'wounddetailedreviewlist'){
                $this->wounddetailedreviewlist();
            }
            if($func == 'rescatheterdetails'){
                $this->rescatheterdetails();
            }
            if($func == 'catheteroutputrecords'){
                $this->catheteroutputrecords();
            }
            if($func == 'catheteroutputrecordspage'){
                $this->catheteroutputrecordspage();
            }
            if($func == 'addcatheteroutputrecord'){
                $this->addcatheteroutputrecord();
            }
            if($func == 'catheterflushrecords'){
                $this->catheterflushrecords();
            }
            if($func == 'catheterflushrecordspage'){
                $this->catheterflushrecordspage();
            }
            if($func == 'addcatheterflushrecord'){
                $this->addcatheterflushrecord();
            }
            if($func == 'addnightpositionchart'){
                $this->addnightpositionchart();
            }
            if($func == 'addmultiplenightpositionchart'){
                $this->addmultiplenightpositionchart();
            }
            if($func == 'nightpositioncharthistory'){
                $this->nightpositioncharthistory();
            }
            if($func == 'nightpositioncharthistorypage'){
                $this->nightpositioncharthistorypage();
            }
            /********************** adl assessments ****************************/
            if($func == 'adlassessmentlists'){
                $this->adlassessmentlists();
            }
            if($func == 'adlsafeenvironment'){
                $this->adlsafeenvironment();
            }
            if($func == 'adlcommunication'){
                $this->adlcommunication();
            }
            if($func == 'adlmobility'){
                $this->adlmobility();
            }
            if($func == 'adlbreathing'){
                $this->adlbreathing();
            }
            if($func == 'adlbodytemperature'){
                $this->adlbodytemperature();
            }
            if($func == 'adlsocialinteraction'){
                $this->adlsocialinteraction();
            }
            if($func == 'adleatdrink'){
                $this->adleatdrink();
            }
            if($func == 'adlelmination'){
                $this->adlelmination();
            }
            if($func == 'adlskinassessment'){
                $this->adlskinassessment();
            }
            if($func == 'adlpersonalcare'){
                $this->adlpersonalcare();
            }
            if($func == 'adlsexuality'){
                $this->adlsexuality();
            }
            if($func == 'adlsleeping'){
                $this->adlsleeping();
            }
            if($func == 'adlspirituality'){
                $this->adlspirituality();
            }
            if($func == 'adldying'){
                $this->adldying();
            }
            if($func == 'adlpsychosocial'){
                $this->adlpsychosocial();
            }
            /********************** comprehensive assessments ****************************/
            if($func == 'compassessmentlists'){
                $this->compassessmentlists();
            }
            if($func == 'compsafeenvironment'){
                $this->compsafeenvironment();
            }
            if($func == 'compcommunication'){
                $this->compcommunication();
            }
            if($func == 'compmobility'){
                $this->compmobility();
            }
            if($func == 'compbreathing'){
                $this->compbreathing();
            }
            if($func == 'compbodytemperature'){
                $this->compbodytemperature();
            }
            if($func == 'compsocialinteraction'){
                $this->compsocialinteraction();
            }
            if($func == 'compeatdrink'){
                $this->compeatdrink();
            }
            if($func == 'compelmination'){
                $this->compelmination();
            }
            if($func == 'compskinassessment'){
                $this->compskinassessment();
            }
            if($func == 'comppersonalcare'){
                $this->comppersonalcare();
            }
            if($func == 'compsexuality'){
                $this->compsexuality();
            }
            if($func == 'compsleeping'){
                $this->compsleeping();
            }
            if($func == 'compspirituality'){
                $this->compspirituality();
            }
            if($func == 'compdying'){
                $this->compdying();
            }
            if($func == 'comppsychosocial'){
                $this->comppsychosocial();
            }
            /************ Observation functions *****************/
            if($func == 'residentothercareplans'){
                $this->residentothercareplans();
            }
            if($func == 'recordmultiobservation'){
                $this->recordmultiobservation();
            }
            if($func == 'addobservation'){
                $this->addobservation();
            }
            if($func == 'getobservation'){
                $this->getobservation();
            }
            if($func == 'getobservationpage'){
                $this->getobservationpage();
            }
            /********** Messages functions ***************************/
            if($func == 'getallmessageusers'){
                $this->getallmessageusers();
            }
            if($func == 'addmessagegroup'){
                $this->addmessagegroup();
            }
            if($func == 'sendmessagetostaff'){
                $this->sendmessagetostaff();
            }
            if($func == 'sendmessagetogroup'){
                $this->sendmessagetogroup();
            }
            if($func == 'staffmessagelist'){
                $this->staffmessagelist();
            }
            if($func == 'groupmessagelist'){
                $this->groupmessagelist();
            }
            if($func == 'getallusertypes'){
                $this->getallusertypes();
            }
            if($func == 'groupbadgecount'){
                $this->groupbadgecount();
            }
            if($func == 'singlebadgecount'){
                $this->singlebadgecount();
            }
            if($func == 'chatbadgecount'){
                $this->chatbadgecount();
            }
            if($func == 'recordfluidbalance'){
                $this->recordfluidbalance();
            }
            if($func == 'fluidbalancehistory'){
                $this->fluidbalancehistory();
            }
            if($func == 'fluidbalancehistorypage'){
                $this->fluidbalancehistorypage();
            }
            if($func == 'addresgroup'){
                $this->addresgroup();
            }
            if($func == 'getresgroup'){
                $this->getresgroup();
            }
            if($func == 'getpegtubedetails'){
                $this->getpegtubedetails();
            }
            if($func == 'rotatepegfeed'){
                $this->rotatepegfeed();
            }
            if($func == 'pegfeedrotationhistory'){
                $this->pegfeedrotationhistory();
            }
            if($func == 'pegfeedrotationhistorypage'){
                $this->pegfeedrotationhistorypage();
            }
            if($func == 'intakepegfeed'){
                $this->intakepegfeed();
            }
            if($func == 'pegfeedintakehistory'){
                $this->pegfeedintakehistory();
            }
            if($func == 'pegfeedintakehistorypage'){
                $this->pegfeedintakehistorypage();
            }
            if($func == 'dailyreportpriorities'){
                $this->dailyreportpriorities();
            }
            if($func == 'gpvoicereport'){
                $this->gpvoicereport();
            }
            if($func == 'allgpreports'){
                $this->allgpreports();
            }
            if($func == 'titles'){
                $this->titles();
            }
            if($func == 'countries'){
                $this->countries();
            }
            if($func == 'gplists'){
                $this->gplists();
            }
            if($func == 'medicationlist'){
                $this->medicationlist();
            }
            if($func == 'preadmissionlist'){
                $this->preadmissionlist();
            }
            if($func == 'preadmissionstatus'){
                $this->preadmissionstatus();
            }
            if($func == 'preadmissionbasicinfo'){
                $this->preadmissionbasicinfo();
            }
            if($func == 'getpreadmissionbasicinfo'){
                $this->getpreadmissionbasicinfo();
            }
            if($func == 'preadmissionnok'){
                $this->preadmissionnok();
            }
            if($func == 'getpreadmissionnok'){
                $this->getpreadmissionnok();
            }
            if($func == 'deletepreadmissionnok'){
                $this->deletepreadmissionnok();
            }
            if($func == 'preadmissionreference'){
                $this->preadmissionreference();
            }
            if($func == 'getpreadmissionreference'){
                $this->getpreadmissionreference();
            }
            if($func == 'preadmissionmedicaldetails'){
                $this->preadmissionmedicaldetails();
            }
            if($func == 'getpreadmissionmedicaldetails'){
                $this->getpreadmissionmedicaldetails();
            }
            if($func == 'preadmnursingdetails'){
                $this->preadmnursingdetails();
            }
            if($func == 'getpreadmnursingdetails'){
                $this->getpreadmnursingdetails();
            }
            if($func == 'preadmequipmentpreparation'){
                $this->preadmequipmentpreparation();
            }
            if($func == 'getpreadmequipmentpreparation'){
                $this->getpreadmequipmentpreparation();
            }
            if($func == 'approvepreadmission'){
                $this->approvepreadmission();
            }
            if($func == 'rejectpreadmission'){
                $this->rejectpreadmission();
            }
            if($func == 'removepreadmissionstatus'){
                $this->removepreadmissionstatus();
            }
            if($func == 'admissionenquirylist'){
                $this->admissionenquirylist();
            }
            if($func == 'addcareplanmeeting'){
                $this->addcareplanmeeting();
            }
            if($func == 'careplanmeetinghistory'){
                $this->careplanmeetinghistory();
            }
            if($func == 'careplanmeetinghistorypage'){
                $this->careplanmeetinghistorypage();
            }

            /*************** Medication section **************/
            if($func == 'administrationactions'){
                $this->administrationactions(); 
            }
            if($func == 'medicationtimeslots'){
                $this->medicationtimeslots();
            }
            if($func == 'timeslotresidentlist'){
                $this->timeslotresidentlist();
            }
            if($func == 'admdueslot'){
                $this->admdueslot();    
            }
            if($func == 'medicationdetails'){
                $this->medicationdetails(); 
            }
            if($func == 'addnote'){
                $this->addnote();       
            }
            if($func == 'getnote'){
                $this->getnote();   
            }
            if($func == 'administrationlisting'){
                $this->administrationlisting();
            }
            if($func == 'administrationroundsadd'){
                $this->administrationroundsadd();
            }
            if($func == 'administrationadd'){
                $this->administrationadd();
            }
            if($func == 'getadmhistorybymedidresidtimeslotid'){
                $this->getadmhistorybymedidresidtimeslotid();
            }
            if($func == 'getadmhistorybyresidtimeslotid'){
                $this->getadmhistorybyresidtimeslotid();
            }
            /****************************** Stocks functions ****************/
            if($func == 'getallstockcategories'){
                $this->getallstockcategories();
            }
            if($func == 'getcategoryproducts'){
                $this->getcategoryproducts();
            }
            if($func == 'productcheckout'){
                $this->productcheckout();
            }
            if($func == 'manualhandlingoption'){
                $this->manualhandlingoption();
            }
            if($func == 'manualhandlingchart1'){
                $this->manualhandlingchart1();
            }
            if($func == 'manualhandlingchart2'){
                $this->manualhandlingchart2();
            }
            if($func == 'userleaverequests'){
                $this->userleaverequests();
            }
            if($func == 'userpendingleaverequests'){
                $this->userpendingleaverequests();
            }
            if($func == 'applyleave'){
                $this->applyleave();
            }
            if($func == 'usertraininglist'){
                $this->usertraininglist();
            }
            if($func == 'trainingdetails'){
                $this->trainingdetails();
            }
            /***************** duty details *************/
            if($func == 'userdutydetails'){
                $this->userdutydetails();
            }
            else {
                $this->response('', 404);
            }
        }
    }

    /* function Defenition Start */

    private function registerdevice(){
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $deviceid = $this->_request['deviceid'];
        $curdate = date('Y-m-d H:i:s');
        if($deviceid != "")
        {
            $cnt = $slct1 = mysql_query("SELECT di_deviceid FROM en_deviceinfo WHERE di_deviceid='$deviceid'");
            $count = mysql_num_rows($cnt);
            if($count == 0)
            {
                $insrt = mysql_query("INSERT INTO en_deviceinfo(di_deviceid, di_addeddate) VALUES('$deviceid', '$curdate')");
                if($insrt)
                {
                    $success = array('status' => "success", "msg" => "Device id successfully registered.");
                    $this->response($this->json($success), 200);  
                    return true;
                }else{
                    $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }else{
                $success = array('status' => "failed", "msg" => "Device id already registered.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }else{
            $success = array('status' => "failed", "msg" => "Device id cannot empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function login() {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $touchpin = $this->_request['touchpin'];
        $deviceid = $this->_request['deviceid'];
        $dvceauth = mysql_query("SELECT * FROM en_deviceinfo WHERE di_deviceid='$deviceid'");
        $athrow = mysql_fetch_array($dvceauth);
        if($athrow['di_isapprove'] ==1)
        {
            if($touchpin != "")
            {
                $tpin = md5($this->_request['touchpin']);

                $cnt = $slct1 = mysql_query("SELECT * FROM en_tabluser a LEFT JOIN en_tbluertype b ON b.en_uertypeid=a.en_usertype WHERE a.touchpin='$tpin'");
                $count = mysql_num_rows($cnt);
                if($count == 0)
                {
                    $success = array('status' => "failed", "msg" => "Touch pin incorrect");
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else
                {

                    $row = mysql_fetch_array($cnt);
                    $userid = $row['en_userid'];
                    $usertype = $row['en_usertype'];
                    $usertypename = $row['en_usertypename'];
                    $username = $row['en_username'];
                    $status = $row['en_isactive'];

                    $name1 = htmlentities($row['en_firstname'] . " " . $row['en_lastname']);
                    $name = ucwords(strtolower($name1));

                    $firstname1 = htmlentities($row['en_firstname']);
                    $fname = ucwords(strtolower($firstname1));
                    $lastname1 = htmlentities($row['en_lastname']);
                    $lname = ucwords(strtolower($lastname1));

            //$name = preg_replace('/[^A-Za-z0-9\-\']/', '', $row['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '', $row['en_lastname']);
                    $curdate=date('Y-m-d H:i:s');

                    $usrimg = mysql_query("SELECT * FROM en_tblempphoto WHERE ep_userid='$userid'");
                    if(mysql_num_rows($usrimg)!=0)
                    {
                        $row2 = mysql_fetch_array($usrimg);
                        $image = "http://dev-enursing.demormc.com/public/upload/userimage/".$row2['ep_imageurl'];

                //$image = "http://52.17.237.23/public/upload/userimage/".$row2['ep_imageurl'];
                    }
                    else{
                        $image = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                //$image = "http://52.17.237.23/assets/img/profile-pic.jpg";
                    }

                    $usrsign = mysql_query("SELECT * FROM en_employeesignature WHERE esig_employeeid");
                    if(mysql_num_rows($usrsign)!=0)
                    {
                        $row16 = mysql_fetch_array($usrsign);
                        $firstsign = 'http://dev-enursing.demormc.com/public/upload/signature/' . $row16['esig_imagename'];
                        $lastsign = 'http://dev-enursing.demormc.com/public/upload/signature/' . $row16['esig_imageinitals'];
                        $signtype = $row16['esig_signaturetype'];
                        $signid = $row16['en_signatureid'];
                    }
                    else{
                        $firstsign = "";
                        $lastsign = "";
                        $signtype = "";
                        $signid = "";
                    }

                    $signdocs = array();
                    $documents = mysql_query("SELECT * FROM en_documentsignrequest WHERE documentsentto='$userid' ORDER BY docuemtnsignrequestid DESC");
                    if(mysql_num_rows($documents)!=0)
                    {
                        while($row12 = mysql_fetch_array($documents))
                        {
                            $sgnfrm = $row12['documentrequestedfrom'];
                            $attchid = $row12['documentid'];
                            $stts = $row12['docuemntsignedstatus'];
                            if($sgnfrm == '1')
                            {
                                $attdet = mysql_query("SELECT * FROM en_nursattachments WHERE nursattachmentid='$attchid'");
                                $row13 = mysql_fetch_array($attdet);
                                $attlnk = 'http://dev-enursing.demormc.com/public/upload/nursattachments/'.$row13['folder'].'/'.$row13['attachmentfile'];
                            }
                            else{
                                $attdet = mysql_query("SELECT * FROM en_usattachments WHERE usattachmentid='$attchid'");
                                $row13 = mysql_fetch_array($attdet);
                                $attlnk = 'http://dev-enursing.demormc.com/public/upload/usrattachments/' . $userid .'/'. $row13['folder'] . '/' . $row13['attachmentfile'];
                            }
                            $signdocs[] = array('requestid' => $row12['docuemtnsignrequestid'], 'documentsentto' => $row12['documentsentto'], 'attachmentid' => $attchid, 'document' => $attlnk, 'requestdate' => $row12['ds_createdon'], 'signstatus' => $stts);
                        }                        
                    }

                    $unreadmsg = mysql_query("SELECT * FROM en_sendprivatemessagestaff WHERE pm_sendto='$userid' AND pm_send_status='0'");
                    $unreadmsgcnt = mysql_num_rows($unreadmsg);

                    $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, logtime, device, deviceid) VALUES('$userid', 'Logged in', 'Tab home', '$curdate', 'Touch', '$deviceid')");

                    $timings = array();
                    $nutritime = mysql_query("SELECT * FROM en_nutritiontimings WHERE nt_isstatus='0'");
                    while($row4 = mysql_fetch_array($nutritime))
                    {
                        $timings[] = $row4['nt_nutritiontime'];
                    }

                    $optin = mysql_query("SELECT * FROM en_nutritionoption WHERE no_isactive='0'");
                    while($row5 = mysql_fetch_array($optin))
                    {
                        $supplimetary = $row5['no_supplimentaryoption'];
                        $startvalue = $row5['no_startvalue'];
                    }

                    $slctoptions = mysql_query("SELECT * FROM en_taboptions WHERE to_isactive='0'");
                    while($row3 = mysql_fetch_array($slctoptions))
                    {
                        $optionid = $row3['to_taboptionid'];
                        $optiname = $row3['to_optionname'];
                        $permsn = mysql_query("SELECT * FROM en_tabpermissions WHERE tp_usertypeid='$usertype' AND tp_taboptionid='$optionid' ORDER BY tp_tabpermissionid DESC");
                        if(mysql_num_rows($permsn) > 0)
                        {
                            $row4 = mysql_fetch_array($permsn);
                            $add = $row4['tp_optionadd'];
                            $histry = $row4['tp_optionhistory'];
                            $allres = $row4['tp_optionresidents'];
                            $nountr = $row4['tp_nointernetoptn'];
                        }else{
                            $add = "0";
                            $histry = "0";
                            $allres = "0";
                            $nountr = "0";
                        }
                        $adhist = array("add" => $add, "history" => $histry, "allresidents" => $allres, "nointernet" => $nountr);
                        $prmsn[] = array($optiname=>$adhist);
                    }

                    $adlvrsn = mysql_query("SELECT * FROM en_adlassessmentsettings");
                    if(mysql_num_rows($adlvrsn)>0)
                    {
                        $row11 = mysql_fetch_array($adlvrsn);
                        $assmntvrsn = $row11['as_assessmentversion'];
                    }
                    else{
                        $assmntvrsn = "0";
                    }

                    $msg = array("msg" => "Login successfull", "name" => $name, "firstname" => $fname, "lastname" => $lname, "img" => $image, "userid" => $userid, "usertype" => $usertype, "username" => $username, "status" => $status, "adlversion" => $assmntvrsn, "permissions" => $prmsn, "timings" => $timings, "supplimentaryoption" => $supplimetary, "startvalue" => $startvalue, 'usertypename' => $usertypename, 'signdocuments' => $signdocs, 'unreadmessagecount' => $unreadmsgcnt, 'firstsign' => $firstsign, 'lastsign' => $lastsign, 'signtype' => $signtype, 'signid' => $signid);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;

                }
            }
            else{
                $success = array('status' => "failed", "msg" => "Touch pin cannot empty");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "This device is not approved");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function uploadsignature()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $firstname = $this->_request['firstname'];
        $lastname = $this->_request['lastname'];
        $firstsign = $this->_request['firstsign'];
        $lastsign = $this->_request['lastsign'];
        $curdate = date('Y-m-d H:i:s');
        if($userid != "" && $firstsign != "" && $lastsign != "")
        {
            $target_dir = "../public/upload/signature/";

            $newfilename = round(microtime(true)) . 'first.png';
            $target_file = $target_dir . $newfilename;
            file_put_contents($target_file,base64_decode($firstsign));

            $newfilename1 = round(microtime(true)) . 'last.png';
            $target_file1 = $target_dir . $newfilename1;
            file_put_contents($target_file1,base64_decode($lastsign));

            $slctsign = mysql_query("SELECT * FROM en_employeesignature WHERE esig_employeeid='$userid'");
            if(mysql_num_rows($slctsign) > 0)
            {
                $insrt=mysql_query("UPDATE en_employeesignature SET esig_signaturetype='1', en_firstname='$firstname', esig_lastname='$lastname', esig_createdon='$curdate', esig_status='0', esig_imagename='$newfilename', esig_imagedatavalue='$firstsign', esig_imageinitals='$newfilename1', esig_imageinitalsdata='$lastsign' WHERE esig_employeeid='$userid'");
                $signid = mysql_insert_id();
            }
            else{
                $insrt=mysql_query("INSERT INTO en_employeesignature(esig_employeeid, esig_signaturetype, en_firstname, esig_lastname, esig_createdon, esig_status, esig_imagename, esig_imagedatavalue, esig_imageinitals, esig_imageinitalsdata) VALUES('$userid', '1', '$firstname', '$lastname', '$curdate', '0', '$newfilename', '$firstsign', '$newfilename1', '$lastsign')");
                $signid = mysql_insert_id();
            }
            
            if($insrt)
            {
                $firstsign = 'http://dev-enursing.demormc.com/public/upload/signature/' . $newfilename;
                $lastsign = 'http://dev-enursing.demormc.com/public/upload/signature/' . $newfilename1;

                $success = array('status' => "success", 'firstsign' => $firstsign, 'lastsign' => $lastsign, 'signtype' => 1, 'signid' => $signid);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }  
    }

    private function residentdetails() {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }

        $resdent = mysql_query("SELECT * FROM en_resbasicinfo r LEFT JOIN en_resaddress ra ON r.residentadmissionid=ra.residentadmid LEFT JOIN en_wardbeds b ON b.residentid=r.residentadmissionid WHERE r.res_istransfer='0' AND r.res_isactive='0' ORDER BY convert(b.bedno, decimal) ASC");
        $count = mysql_num_rows($resdent);
        if($count == 0)
        {
            $success = array('status' => "failed", "msg" => "No Residents");
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $adlvrsn = mysql_query("SELECT * FROM en_adlassessmentsettings");
            if(mysql_num_rows($adlvrsn)>0)
            {
                $row11 = mysql_fetch_array($adlvrsn);
                $assmntvrsn = $row11['as_assessmentversion'];
            }
            else{
                $assmntvrsn = "0";
            }

            while($row = mysql_fetch_array($resdent))
            {
                $duearray = array();
                $resid = $row['residentadmissionid'];
                $today = date('Y-m-d');

                $watrlw = mysql_query("SELECT ws_total_score, ws_risklevel FROM en_waterlowassessment WHERE ws_userid='$resid' AND ws_isactive='0' ORDER BY waterlowassid DESC LIMIT 1");
                $wtrw = mysql_fetch_array($watrlw);
                $waterlowscore = $wtrw['ws_total_score'];

                switch ($wtrw['ws_risklevel']) {
                    case 0:
                    $waterlowscore = $waterlowscore . ' ( Low Risk )';
                    break;
                    case 1:
                    $waterlowscore = $waterlowscore . ' ( At Risk )';
                    break;
                    case 2:
                    $waterlowscore = $waterlowscore . ' ( High Risk )';
                    break;
                    case 3:
                    $waterlowscore = $waterlowscore . ' ( Very High Risk )';
                    break;
                }

                $smmse = mysql_query("SELECT rm_totalscore FROM en_resmmse WHERE rm_resid='$resid' AND rm_isactive='0' ORDER BY rm_mmseid DESC LIMIT 1");
                $smrow = mysql_fetch_array($smmse);
                $smmsescore = $smrow['rm_totalscore'];
                if($smrow['rm_totalscore'] < 10)
                {
                    $smmsescore = $smmsescore . " ( SEVERE )";
                }
                else if($mmsval->rm_totalscore >= 10 && $mmsval->rm_totalscore < 21)
                {
                    $smmsescore = $smmsescore . " ( MODERATE )";
                }
                else if($mmsval->rm_totalscore >= 21 && $mmsval->rm_totalscore < 25)
                {
                    $smmsescore = $smmsescore . " ( MILD/ EARLY STAGE )";
                }
                else{
                    $smmsescore = $smmsescore . " ( MAY BE NORMAL )";
                }

                $mstdet = mysql_query("SELECT ma_totalscore FROM en_resmustassessment WHERE ma_resid='$resid' AND ma_isactive='0' ORDER BY ma_mustassessmentid DESC LIMIT 1");
                $mstrow = mysql_fetch_array($mstdet);
                $mustscore = $mstrow['ma_totalscore'];

                if($mstlist->ma_totalscore == 0)
                {
                    $mustscore = $mustscore . ' ( Low Risk )';
                }
                else if($mstlist->ma_totalscore == 1)
                {
                    $mustscore = $mustscore . ' ( Medium Risk )';
                }
                else{
                    $mustscore = $mustscore . ' ( High Risk )';
                }

                $appintmt = mysql_query("SELECT * FROM en_appointments WHERE ap_usertype='resident' AND ap_userid='$resid' AND ap_fromdate>='$today'");
                $apptim = array();
                $apptitle = "";
                if(mysql_num_rows($appintmt) > 0)
                {
                    $apptim = array();
                    while($aprow = mysql_fetch_array($appintmt))
                    {
                        $apptitle = $aprow['ap_appointmenttitle'];
                        $aptm = date('H:i', strtotime($aprow['ap_fromtime']));
                        //$addeddate = date('');
                        $descriptionarr = str_replace("'", ' ', $aprow['ap_description']);
                        $ap_description = preg_replace('/[^A-Za-z0-9\-\']/', '', $descriptionarr);
                        $apptim[] = array('time' => $aptm, 'date' => $aprow['ap_fromdate'], 'title' => $apptitle, 'description' => $ap_description, 'addeddate' => $aprow['ap_addeddate']);
                    }
                }

                $duearray[] = array('duename' => "Appointments", 'dues' => mysql_num_rows($appintmt), 'title' => $apptitle, 'duetime' => $apptim);

                $depndcy = mysql_query("SELECT * FROM en_bartheladlindex WHERE ba_resid='$resid' AND ba_isactive='0' ORDER BY ba_barthelindexid DESC LIMIT 1");
                if(mysql_num_rows($depndcy) > 0)
                {
                    $dpndrw = mysql_fetch_array($depndcy);
                    $scre = $dpndrw['ba_totalscore'];
                    $scrarr = explode('(', $scre);

                    if(isset($scrarr[1]))
                    {
                        $dependency = substr($scrarr[1], 0, -1);
                    }
                    else{
                        $dependency = "";
                    }
                }
                else{
                    $dependency = "";
                }

                $shwrdt = mysql_query("SELECT * FROM en_residentmorningcare WHERE rm_residentid='$resid' AND rm_isactive='0' ORDER BY resmorningcareid DESC");

                if(mysql_num_rows($shwrdt) > 0)
                {
                    $shwrval = 0;
                    while($shwrw = mysql_fetch_array($shwrdt))
                    {
                        $optionids = explode('#', $shwrw['rm_optionids']);
                        if($optionids[0] != '0' && $optionids[0] != '5')
                        {
                            /*if(date('Y-m-d', strtotime($shwrw['rm_updatedtime'])) < $today)
                            {
                            }
                            else{
                            }*/
                            $duearray[] = array('duename' => "Shower", 'lastdate' => $bwlrw['rm_updatedtime']);
                            $shwrval = 1;
                            break;
                        }
                    }
                    if($shwrval == 0)
                    {
                        $duearray[] = array('duename' => "Shower", 'lastdate' => "");
                    }
                }
                else{
                    $duearray[] = array('duename' => "Shower", 'lastdate' => "");
                }
                
                $bwlmv = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' ORDER BY br_resbowelrecordid DESC LIMIT 1");
                if(mysql_num_rows($bwlmv) > 0)
                {
                    $bwlrw = mysql_fetch_array($bwlmv);
                    $lst3 = date('Y-m-d', strtotime('-2 days'));
                    if(date('Y-m-d', strtotime($bwlmv['br_recorddate'])) < $lst3)
                    {
                        $wdue = "Yes";
                    }
                    else{
                        $wdue = "No";
                    }
                    $duearray[] = array('duename' => "Bowel", 'lastdate' => $bwlrw['br_recorddate'], 'type' => $bwlrw['br_bowelchartid'], 'time' => $bwlrw['br_bowelrecordtimeid'], 'size' => $bwlrw['br_bowelsize']);
                }
                else{
                    $duearray[] = array('duename' => "Bowel", 'lastdate' => "", 'type' => "", 'time' => "", 'size' => "");
                }
                
                $medal = mysql_query("SELECT * FROM en_resallergicmedicine a LEFT JOIN en_medicationdatabse b ON b.medicationid=a.am_medicationid WHERE a.am_resid='$resid' AND a.am_isactive='0'");
                $medallcnt = mysql_num_rows($medal);
                if($medallcnt > 0)
                {
                    $medcnarr = array();
                    while($mdrow = mysql_fetch_array($medal))
                    {
                        if($medal['am_medicationid'] != '0')
                        {
                            $medcnarr[] = $mdrow['md_medicationname'];
                        }
                        else {
                            $medcnarr[] = $mdrow['am_othermedicine'];
                        }
                    }
                    $allergymedicine = implode(', ', $medcnarr);
                }
                else{
                    $allergymedicine = "";
                }
                
                $obsr10 = mysql_query("SELECT ob_bloodglucose, ob_isbloodglucose, ob_glucosemeasured, ob_bloodglucosemg, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND (ob_isbloodglucose = 'no' OR (ob_bloodglucose !='' AND ob_isbloodglucose ='yes')) ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr10) > 0)
                {
                    $obrow10 = mysql_fetch_array($obsr10);
                    if($obrow10['ob_isbloodglucose'] == 'yes')
                    {
                        $diebetic = $obrow10['ob_bloodglucose'];
                    }
                    else{
                        $diebetic = "No";
                    }
                }
                else{
                    $diebetic = "No";
                }
                
                $trnsfr = mysql_query("SELECT * FROM en_patienttransferinfo WHERE pt_resid='$resid' AND pt_isactive='0' AND pt_readmission = '0' ORDER BY pt_patienttransferid DESC LIMIT 1");
                if(mysql_num_rows($trnsfr) > 0)
                {
                    $row10 = mysql_fetch_array($trnsfr);
                    if($row10['pt_isreturn'] != '1')
                    {
                        if($row10['pt_transfertype'] == 'Temporary transfer with family or similar')
                        {
                            $crntlocation = "Outing with family";
                        }
                        else if($row10['pt_transfertype']=='Deceased')
                        {
                            $crntlocation = "Deceased";
                        }
                        else if($row10['pt_transfertype']=='Transfer to Hospital or Advance care')
                        {
                            $crntlocation = "Transfer to Hospital or Advance care";
                        }
                        else if($row10['pt_transfertype']=='Discharge to home or other care home')
                        {
                            $crntlocation = "Discharged";
                        }
                        else{
                            $crntlocation = "Temporary transfer";
                        }
                    }
                    else{
                        $crntlocation = "Nursing Home";
                    }
                }
                else{
                    $crntlocation = "Nursing Home";
                }
                
                $bplstdate = "";
                $obsr1 = mysql_query("SELECT ob_bloodpressure, ob_bloodpressure2, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_bloodpressure !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr1) > 0)
                {
                    $obrow1 = mysql_fetch_array($obsr1);
                    $bloodpressure1 = $obrow1['ob_bloodpressure'];
                    $bloodpressure2 = $obrow1['ob_bloodpressure2'];
                    $bptakendate = $obrow1['ob_updatedon'];
                    $bplstdate = $bptakendate;
                    
                    $bparr = array('bp1' => $bloodpressure1, 'bp2' => $bloodpressure2, 'date' => $bptakendate);
                }
                else{
                    $bparr = array('bp1' => "", 'bp2' => "", 'date' => "");
                }
                $pulselstdate = "";
                $obsr2 = mysql_query("SELECT ob_pulse, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_pulse !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr2) > 0)
                {
                    $obrow2 = mysql_fetch_array($obsr2);
                    $pulse = $obrow2['ob_pulse'];
                    $takendate = $obrow2['ob_updatedon'];
                    $pulselstdate = $takendate;
                    
                    $pulsearr = array('pulse' => $pulse, 'date' => $takendate);
                }
                else{
                    $pulsearr = array('pulse' => "", 'date' => "");
                }
                $templstdate = "";
                $obsr3 = mysql_query("SELECT ob_temparature, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_temparature !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr3) > 0)
                {
                    $obrow3 = mysql_fetch_array($obsr3);
                    $temparature = $obrow3['ob_temparature'];
                    $takendate = $obrow3['ob_updatedon'];
                    $templstdate = $takendate;
                    
                    $temparr = array('temparature' => $temparature, 'date' => $takendate);
                }
                else{
                    $temparr = array('temparature' => "", 'date' => "");
                }
                $spo2lstdate = "";
                $obsr4 = mysql_query("SELECT ob_sp02, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_sp02 !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr4) > 0)
                {
                    $obrow4 = mysql_fetch_array($obsr4);
                    $sp02 = $obrow4['ob_sp02'];
                    $takendate = $obrow4['ob_updatedon'];
                    $spo2lstdate = $takendate;
                    
                    $sp02arr = array('sp02' => $sp02, 'date' => $takendate);
                }
                else{
                    $sp02arr = array('sp02' => "", 'date' => "");
                }
                $weghtlstdate = "";
                $obsr5 = mysql_query("SELECT ob_weight, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_weight !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr5) > 0)
                {
                    $obrow5 = mysql_fetch_array($obsr5);
                    $weight = $obrow5['ob_weight'];
                    $takendate = $obrow5['ob_updatedon'];
                    $weghtlstdate = $takendate;
                    
                    $weightarr = array('weight' => $weight, 'date' => $takendate);
                }
                else{
                    $weightarr = array('weight' => "", 'date' => "");
                }
                $hightlstdate = "";
                $obsr6 = mysql_query("SELECT ob_height, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_height !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr6) > 0)
                {
                    $obrow6 = mysql_fetch_array($obsr6);
                    $height = $obrow6['ob_height'];
                    $takendate = $obrow6['ob_updatedon'];
                    $hightlstdate = $takendate;
                    
                    $heightarr = array('height' => $height, 'date' => $takendate);
                }
                else{
                    $heightarr = array('height' => "", 'date' => "");
                }
                $resprlstdate = "";
                $obsr7 = mysql_query("SELECT ob_respiration, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_respiration !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr7) > 0)
                {
                    $obrow7 = mysql_fetch_array($obsr7);
                    $respiration = $obrow7['ob_respiration'];
                    $takendate = $obrow7['ob_updatedon'];
                    $resprlstdate = $takendate;
                    
                    $respirearr = array('respiration' => $respiration, 'date' => $takendate);
                }
                else{
                    $respirearr = array('respiration' => "", 'date' => "");
                }
                $bmilstdate = "";
                $obsr8 = mysql_query("SELECT ob_bmi, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_bmi !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr8) > 0)
                {
                    $obrow8 = mysql_fetch_array($obsr8);
                    $bmi = $obrow8['ob_bmi'];
                    $takendate = $obrow8['ob_updatedon'];
                    $bmilstdate = $takendate;
                    
                    $bmiarr = array('bmi' => $bmi, 'date' => $takendate);
                }
                else{
                    $bmiarr = array('bmi' => "", 'date' => "");
                }
                $urinelstdate = "";
                $obsr9 = mysql_query("SELECT ob_urinalysis, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_urinalysis !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr9) > 0)
                {
                    $obrow9 = mysql_fetch_array($obsr9);
                    $urinalysis = $obrow9['ob_urinalysis'];
                    $takendate = $obrow9['ob_updatedon'];
                    $urinelstdate = $takendate;
                    
                    $urniearr = array('urinalysis' => $urinalysis, 'date' => $takendate);
                }
                else{
                    $urniearr = array('urinalysis' => "", 'date' => "");
                }
                $bldglclstdate = "";
                $obsr10 = mysql_query("SELECT ob_bloodglucose, ob_glucosemeasured, ob_bloodglucosemg, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_bloodglucose !='' AND ob_isbloodglucose ='yes' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr10) > 0)
                {
                    $obrow10 = mysql_fetch_array($obsr10);
                    $glucosemeasured = $obrow10['ob_glucosemeasured'];
                    $bloodglucose = $obrow10['ob_bloodglucose'];
                    $bloodglucosemg = $obrow10['ob_bloodglucosemg'];
                    $takendate = $obrow10['ob_updatedon'];
                    $bldglclstdate = $takendate;
                    
                    $glucosearr = array('glucosemeasured' => $glucosemeasured, 'bloodglucose' => $bloodglucose, 'bloodglucosemg' => $bloodglucosemg, 'date' => $takendate);
                }
                else{
                    $glucosearr = array('glucosemeasured' => "", 'bloodglucose' => "", 'bloodglucosemg' => "", 'date' => "");
                }
                $resobser = array('bloodpressure' => $bparr, 'pulse' => $pulsearr, 'temperature' => $temparr, 'sp02' => $sp02arr, 'weight' => $weightarr, 'height' => $heightarr, 'respiration' => $respirearr, 'bmi' => $bmiarr, 'urinalysis' => $urniearr, 'bloodglucose' => $glucosearr);
                
                
                $remndrs = mysql_query("SELECT * FROM en_reminderdates WHERE DATE(rd_remdatetime)='$today' AND rd_resid='$resid'");
                $bn = 0;
                $bpduetime = array();

                $pn = 0;
                $plsduetime = array();

                $tn = 0;
                $tempduetime = array();

                $sn = 0;
                $spduetime = array();

                $wn = 0;
                $wghtduetime = array();

                $hn = 0;
                $hghtduetime = array();

                $rn = 0;
                $respduetime = array();

                $bmn = 0;
                $bmiduetime = array();

                $un = 0;
                $urinduetime = array();

                $bgn = 0;
                $bldglduetime = array();
                if(mysql_num_rows($remndrs) > 0)
                {
                    
                    while($remrow = mysql_fetch_array($remndrs))
                    {
                        $obsertypes = explode(',', $remrow['observationtypes']);
                        
                        if (in_array('Blood Pressure', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Blood Pressure', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $bpduetime[] = array('time' => $takentime);
                                $bn++;
                            }
                        }
                        
                        if (in_array('Pulse (Per Minute)', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Pulse (Per Minute)', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $plsduetime[] = array('time' => $takentime);
                                $pn++;
                            }
                        }
                        
                        if (in_array('Temperature', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Temperature', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $tempduetime[] = array('time' => $takentime);
                                $tn++;
                            }
                        }
                        
                        if (in_array('Sp02', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Sp02', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $spduetime[] = array('time' => $takentime);
                                $sn++;
                            }
                        }
                        
                        if (in_array('Weight(Kg)', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Weight(Kg)', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $wghtduetime[] = array('time' => $takentime);
                                $wn++;
                            }
                        }
                        
                        if (in_array('Height(Cms)', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Height(Cms)', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $hghtduetime[] = array('time' => $takentime);
                                $hn++;
                            }
                        }
                        
                        if (in_array('Respiration(Per Minute)', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Respiration(Per Minute)', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $respduetime[] = array('time' => $takentime);
                                $rn++;
                            }
                        }
                        
                        if (in_array('BMI', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('BMI', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $bmiduetime[] = array('time' => $takentime);
                                $bmn++;
                            }
                        }
                        
                        if (in_array('Urinalysis', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Urinalysis', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $urinduetime[] = array('time' => $takentime);
                                $un++;
                            }
                        }
                        
                        if (in_array('Blood Glucose', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Blood Glucose', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $bldglduetime[] = array('time' => $takentime);
                                $bgn++;
                            }
                        }
                    }
                    
                }
                $duearray[] = array('duename' => "Blood Pressure", 'dues' => $bn, 'duetime' => $bpduetime, 'lastdate' => $bplstdate);
                $duearray[] = array('duename' => "Pulse (Per Minute)", 'dues' => $pn, 'duetime' => $plsduetime, 'lastdate' => $pulselstdate);
                $duearray[] = array('duename' => "Temperature", 'dues' => $tn, 'duetime' => $tempduetime, 'lastdate' => $templstdate);
                $duearray[] = array('duename' => "Sp02", 'dues' => $sn, 'duetime' => $spduetime, 'lastdate' => $spo2lstdate);
                $duearray[] = array('duename' => "Weight", 'dues' => $wn, 'duetime' => $wghtduetime, 'lastdate' => $weghtlstdate);
                $duearray[] = array('duename' => "Height", 'dues' => $hn, 'duetime' => $hghtduetime, 'lastdate' => $hightlstdate);
                $duearray[] = array('duename' => "Respiration(Per Minute)", 'dues' => $rn, 'duetime' => $respduetime, 'lastdate' => $resprlstdate);
                $duearray[] = array('duename' => "BMI", 'dues' => $bmn, 'duetime' => $bmiduetime, 'lastdate' => $bmilstdate);
                $duearray[] = array('duename' => "Urinalysis", 'dues' => $un, 'duetime' => $urinduetime, 'lastdate' => $urinelstdate);
                $duearray[] = array('duename' => "Blood Glucose", 'dues' => $bgn, 'duetime' => $bldglduetime, 'lastdate' => $bldglclstdate);
                
                if($assmntvrsn == '0')
                {
                    $fuddet = mysql_query("SELECT * FROM en_adlfoodeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatanddrinkid DESC LIMIT 1");
                    if(mysql_num_rows($fuddet) > 0)
                    {
                        $row9 = mysql_fetch_array($fuddet);
                        $allergies = $row9['ed_allergies'];
                        $likes = $row9['ed_likes'];
                        $dislikes = $row9['ed_dislikes'];
                        $diettype = $row9['ed_typeofdiet'];
                        
                        $fudallergarr = explode(',', $allergies);
                        $fudallrgcnt = count($fudallergarr);
                        
                        if($fudallergarr != "")
                        {
                            $allergyfoods = implode(', ', $fudallergarr);
                        }
                        else{
                            $allergyfoods = "";
                        }
                    }
                    else{
                        $allergies = 'Nil';
                        $likes = 'Nil';
                        $dislikes = 'Nil';
                        $diettype = "";
                        
                        $fudallrgcnt = '0';
                        $allergyfoods = "";
                    }
                    
                }
                else{
                    $fuddet = mysql_query("SELECT * FROM en_compeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatdrinkid DESC LIMIT 1");
                    if(mysql_num_rows($fuddet) > 0)
                    {
                        $row9 = mysql_fetch_array($fuddet);
                        
                        $allergies = $row9['ed_allergies'];
                        
                        $ed_likes = unserialize($row9['ed_foodlikes']);
                        if(isset($ed_likes['breaklikefoods']))
                        {
                            $likes = $ed_likes['breaklikefoods'];
                        }
                        else{
                            $likes = "Nil";
                        }
                        $ed_dislikes = unserialize($row9['ed_fooddislikes']);
                        if(isset($ed_dislikes['breakdislikefoods']))
                        {
                            $dislikes = $ed_dislikes['breakdislikefoods'];
                        }
                        else{
                            $dislikes = "Nil";
                        }
                        
                        $ed_dietrydetails = unserialize($row9['ed_dietrydetails']);
                        if(isset($ed_dietrydetails['choosendietary']))
                        {
                            $diettype = $ed_dietrydetails['choosendietary'];
                        }
                        else{
                            $diettype = "";
                        }
                        
                        $fudallergarr = explode('#', $allergies);
                        $fudallrgcnt = count($fudallergarr);
                        
                        if($fudallergarr != "")
                        {
                            $allergyfoods = implode(', ', $fudallergarr);
                        }
                        else{
                            $allergyfoods = "";
                        }
                    }
                    else{
                        $allergies = 'Nil';
                        $likes = 'Nil';
                        $dislikes = 'Nil';
                        $diettype = "";
                        $fudallrgcnt = '0';
                        $allergyfoods = "";
                    }
                }
                
                
                $ward = mysql_query("SELECT * FROM en_wardbeds wb INNER JOIN en_wards w ON wb.wardid=w.wardid  WHERE wb.residentid='$resid'");
                $cathdet = mysql_query("SELECT cd_catheterdetailid FROM en_rescatheterdetails WHERE cd_resid='$resid' AND cd_isactive='0' ORDER BY cd_catheterdetailid DESC LIMIT 1");
                if(mysql_num_rows($cathdet)>0)
                {
                    $rescatheter = 1;
                }
                else{
                    $cathdet2 = mysql_query("SELECT em_cather FROM en_adlelimination WHERE em_resid='$resid' ORDER BY em_eliminationid DESC LIMIT 1");
                    if(mysql_num_rows($cathdet2)>0)
                    {
                        $row8 = mysql_fetch_array($cathdet2);
                        if($row8['em_cather'] == 'Yes')
                        {
                            $rescatheter = 1;
                        }
                        else{
                            $rescatheter = 0;
                        }
                    }
                    else{
                        $rescatheter = 0;
                    }
                }
                
                $title = $row['res_title'];
                
                $dob = $row['res_dob'];
                $date1 = date('Y-m-d', strtotime($dob));
                $date2 = date('Y-m-d');
                
                $diff = abs(strtotime($date2) - strtotime($date1));
                
                $age = floor($diff / (365*60*60*24));
                //$age = $row['res_age'];
                $mar = $row['res_maritalstatus'];
                $knwn = preg_replace('/[^A-Za-z0-9\-\']/', '', $row['res_surname']);
                $status = $row['res_isactive'];
                $rel = $row['res_relligion'];
                $occupation = $row['res_occupation'];
                $gms = $row['resad_gmsnumber'];
                $wrdcnt = mysql_num_rows($ward);
                if($wrdcnt>0)
                {
                    $wrow = mysql_fetch_array($ward);
                    $wardname = preg_replace('/[^A-Za-z0-9\-\']/', '', $wrow['wardname']);
                    $bednumber = $wrow['bedno'];
                }
                else{
                    $wardname = "Not assigned";
                    $bednumber = "Not assigned";
                }
                $imgid = $row['residentadmissionid'];
                $imgdet = mysql_query("SELECT * FROM en_resadmimage WHERE resadmid='$imgid' ORDER BY resadmimageid DESC LIMIT 1");
                if(mysql_num_rows($imgdet) > 0)
                {
                    $row1 = mysql_fetch_array($imgdet);
                    $rimg = "http://dev-enursing.demormc.com/public/upload/residentimage/".$row1['resadmimage'];
                    
                    //$rimg = "http://52.17.237.23/public/upload/residentimage/".$row1['resadmimage'];
                }
                else{
                    $rimg = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                    //$rimg = "http://52.17.237.23/assets/img/profile-pic.jpg";
                }

                $lstdailyrprt = mysql_query("SELECT rm_updatedtime FROM en_residentmorningcare WHERE rm_residentid='$resid' AND rm_isactive='0' ORDER BY resmorningcareid DESC LIMIT 1");
                if(mysql_num_rows($lstdailyrprt) > 0)
                {
                    $rprtrw = mysql_fetch_array($lstdailyrprt);
                    $lstreportdate = $rprtrw['rm_updatedtime'];
                }
                else{
                    $lstreportdate = "";
                }

                /*$lstdailyrprt = mysql_query("SELECT * FROM en_dailyreport WHERE dr_resid='$resid' ORDER BY reportid DESC LIMIT 1");
                if(mysql_num_rows($lstdailyrprt) > 0)
                {
                    $rprtrw = mysql_fetch_array($lstdailyrprt);
                    $lstreportdate = $rprtrw['dr_addedon'];
                }
                else{
                    $lstreportdate = "";
                }*/

                /************** Resusitation Attempts start *****************/
                $cprrr = "";
                $hoist = "";
                $daypad = "";
                $nightpad = "";
                $slbedtime = "";
                $wakeuptime = "";
                $dressundress = "";
                if($assmntvrsn == '0')
                {
                    $dyngdet = mysql_query("SELECT dy_dyingid,dy_resusitationattempts FROM en_adldying WHERE dy_resid='$imgid' ORDER BY dy_dyingid DESC LIMIT 1");
                    if(mysql_num_rows($dyngdet) > 0)
                    {
                        $dyrow = mysql_fetch_array($dyngdet);
                        $cprrr = $dyrow['dy_resusitationattempts'];
                    }

                    $mobltydet = mysql_query("SELECT mb_hoistrequired FROM en_adlmobility WHERE mb_resid='$imgid' ORDER BY mb_mobilityid DESC LIMIT 1");
                    if(mysql_num_rows($mobltydet) > 0)
                    {
                        $mbrow = mysql_fetch_array($mobltydet);
                        $hoist = $mbrow['mb_hoistrequired'];
                    }

                    $elmntdet = mysql_query("SELECT em_incontinencepads,em_nightincontinencepad FROM en_adlelimination WHERE em_resid='$imgid' ORDER BY em_eliminationid DESC LIMIT 1");
                    if(mysql_num_rows($elmntdet) > 0)
                    {
                        $elrow = mysql_fetch_array($elmntdet);
                        $daypad = $elmntdet['em_incontinencepads'];
                        $nightpad = $elmntdet['em_nightincontinencepad'];
                    }

                    $slpngdet = mysql_query("SELECT sl_bedtimeroutine, sl_usuallygetup FROM en_adlsleeping WHERE sl_resid='$imgid' ORDER BY sl_sleepingid DESC LIMIT 1");
                    if(mysql_num_rows($slpngdet) > 0)
                    {
                        $slrow = mysql_fetch_array($slpngdet);
                            //$sl_sleeping = unserialize($slrow['sl_sleeping']);
                        $slbedtime = $slrow['sl_bedtimeroutine'];
                        $wakeuptime = $slrow['sl_usuallygetup'];
                    }

                    $perdredet = mysql_query("SELECT pc_dressing FROM en_adlpersonalcareanddressing WHERE pc_resid='$imgid' ORDER BY pc_personalcareid DESC LIMIT 1");
                    if(mysql_num_rows($perdredet) > 0)
                    {
                        $drrow = mysql_fetch_array($perdredet);
                        $pc_dressing = explode('#', $drrow['pc_dressing']);
                        $dressundress = implode(', ', $pc_dressing);
                    }
                }
                else{
                    $dyngdet = mysql_query("SELECT esl_endstagelifeid,esl_advancedwishes FROM en_compendstageoflife WHERE esl_resid='$imgid' ORDER BY esl_endstagelifeid DESC LIMIT 1");
                    if(mysql_num_rows($dyngdet) > 0)
                    {
                        $dyrow = mysql_fetch_array($dyngdet);
                        $esl_advancedwishes = unserialize($dyrow['esl_advancedwishes']);
                        $cprrr = $esl_advancedwishes['cpr'];
                    }

                    $mobltydet = mysql_query("SELECT mb_hoistrequired FROM en_compmobility WHERE mb_resid='$imgid' ORDER BY mb_mobilityid DESC LIMIT 1");
                    if(mysql_num_rows($mobltydet) > 0)
                    {
                        $mbrow = mysql_fetch_array($mobltydet);
                        $mb_hoistrequired = unserialize($mbrow['mb_hoistrequired']);
                        $hoist = $mb_hoistrequired['hoistrequire'];
                    }

                    $elmntdet = mysql_query("SELECT el_continentbowels FROM en_compelimination WHERE el_resid='$imgid' ORDER BY el_eliminationid DESC LIMIT 1");
                    if(mysql_num_rows($elmntdet) > 0)
                    {
                        $elrow = mysql_fetch_array($elmntdet);
                        $el_continentbowels = unserialize($elrow['el_continentbowels']);
                        $daypad = $el_continentbowels['incontinencepadday'];
                        $nightpad = $el_continentbowels['incontinencepadnight'];
                    }

                    $slpngdet = mysql_query("SELECT sl_sleeping FROM en_compsleeping WHERE sl_resid='$imgid' ORDER BY sl_sleepingid DESC LIMIT 1");
                    if(mysql_num_rows($slpngdet) > 0)
                    {
                        $slrow = mysql_fetch_array($slpngdet);
                        $sl_sleeping = unserialize($slrow['sl_sleeping']);
                        $slbedtime = $sl_sleeping['bedtimeroutine'];
                        $wakeuptime = $sl_sleeping['usualgetsup'];
                    }

                    $perdredet = mysql_query("SELECT pd_dressing FROM en_comppersonalcaredress WHERE pd_resid='$imgid' ORDER BY pd_personalcareid DESC LIMIT 1");
                    if(mysql_num_rows($perdredet) > 0)
                    {
                        $drrow = mysql_fetch_array($perdredet);
                        $pd_dressing = unserialize($drrow['pd_dressing']);
                        $dressundress = $pd_dressing['dressing'];
                    }
                }
                if($cprrr == "")
                {
                    $dyngdet = mysql_query("SELECT tes_cprnopulse FROM en_tempendstageoflife WHERE tes_resid='$imgid' ORDER BY tes_endstageid DESC LIMIT 1");
                    if(mysql_num_rows($dyngdet) > 0)
                    {
                        $dyrow = mysql_fetch_array($dyngdet);
                        if($dyrow['tes_cprnopulse'] == 'Attempt Resuscitation')
                        {
                            $cprrr = 'Yes';
                        }
                        else{
                            $cprrr = 'No';
                        }
                    }
                }
                $resfty = mysql_query("SELECT sc_bedraildate,sc_bedrailuse,sc_bedrailexpiry,sc_updatedby FROM en_ressafetychecklists WHERE sc_resid='$imgid' ORDER BY sc_safetychecklistid DESC");
                if(mysql_num_rows($resfty) > 0)
                {
                    $sfrow = mysql_fetch_array($resfty);
                    
                    $bedrailuse = $sfrow['sc_bedrailuse'];
                    if($bedrailuse == 'Check')
                    {
                        $checkeddate = $sfrow['sc_bedraildate'];
                        $usid = $sfrow['sc_updatedby'];
                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                        if(mysql_num_rows($usr)>0)
                        {
                            $row3 = mysql_fetch_array($usr);
                            $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                            $checkempname = ucwords(strtolower($name1));
                            //$checkempname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                        }
                        else{
                            $checkempname = "";
                        }

                        $resfty1 = mysql_query("SELECT sc_bedraildate,sc_bedrailuse,sc_bedrailexpiry,sc_updatedby FROM en_ressafetychecklists WHERE sc_resid='$imgid' AND sc_bedrailuse='Yes' ORDER BY sc_safetychecklistid DESC LIMIT 1");
                        if(mysql_num_rows($resfty1) > 0)
                        {
                            $sfrow1 = mysql_fetch_array($resfty1);
                            $bdexpiredate = $sfrow1['sc_bedrailexpiry'];
                            $curdate = date('Y-m-d H:i:s');
                            if($bdexpiredate != "")
                            {
                                if($curdate > $bdexpiredate)
                                {
                                    $bedrailexpiry = "Yes";
                                }
                                else{
                                    $bedrailexpiry = "No";
                                }
                            }
                            else{
                                $bedrailexpiry = "";
                            }
                            $bedraillastpdatedate = $sfrow1['sc_bedraildate'];
                            $usid = $sfrow1['sc_updatedby'];
                            $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                            if(mysql_num_rows($usr)>0)
                            {
                                $row3 = mysql_fetch_array($usr);
                                $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                                $railempname = ucwords(strtolower($name1));
                                //$railempname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                            }
                            else{
                                $railempname = "";
                            }
                        }
                        else{
                            $bedrailexpiry = "";
                            $bedraillastpdatedate = "";
                            $railempname = "";
                        }
                    }
                    else{
                        $checkeddate = "";
                        $checkempname = "";
                        $bdexpiredate = $sfrow['sc_bedrailexpiry'];
                        $curdate = date('Y-m-d H:i:s');
                        if($bdexpiredate != "")
                        {
                            if($curdate > $bdexpiredate)
                            {
                                $bedrailexpiry = "Yes";
                            }
                            else{
                                $bedrailexpiry = "No";
                            }
                        }
                        else{
                            $bedrailexpiry = "";
                        }
                        //$bedraillastpdatedate = $sfrow['sc_safetydate'] . " " . $sfrow['sc_safetytime'];
                        $bedraillastpdatedate = $sfrow['sc_bedraildate'];

                        $usid = $sfrow['sc_updatedby'];
                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                        if(mysql_num_rows($usr)>0)
                        {
                            $row3 = mysql_fetch_array($usr);
                            $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                            $railempname = ucwords(strtolower($name1));
                            //$railempname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                        }
                        else{
                            $railempname = "";
                        }
                    }
                    

                    
                }
                else{
                    $bedrailexpiry = "";
                    $bedraillastpdatedate = "";
                }

                /************** Resusitation Attempts  End *****************/

                /****** peg feeding details start *******/
                $resfty = mysql_query("SELECT pagefeedingid,pf_tubetype FROM en_pedfeeding WHERE pf_residentid='$imgid' AND pf_status='0' ORDER BY pagefeedingid DESC");
                if(mysql_num_rows($resfty) > 0)
                {
                    $pegfeed = "Yes";
                }
                else{
                    $pegfeed = "No";
                }
                /****** peg feeding details end *********/

                /************************** Careplan meeting start *************************/
                $carmeetng = mysql_query("SELECT * FROM en_careplanmeeting WHERE cm_resid='$imgid' ORDER BY cm_meetingid DESC LIMIT 1");
                if(mysql_num_rows($carmeetng) > 0)
                {
                    $crmtrow= mysql_fetch_array($carmeetng);
                    $careplanmeeetingdate = $crmtrow['cm_meetingdate'];
                    $careplannextreviewdate = $crmtrow['cm_nextreviewdate'];
                }
                else{
                    $careplanmeeetingdate = "";
                    $careplannextreviewdate = "";
                }
                /********************** careplan meeting end *************************/

                //$name =  preg_replace('/[^A-Za-z0-9\-\']/', '',$row['res_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row['res_surname']);
                $name1 = htmlentities($row['res_firstname'] . " " . $row['res_surname']);
                $pasname = ucwords(strtolower($name1));
                $res[] = array('title' => $title, 'name' => $pasname, 'dob' => $dob, 'age' => $age, 'resimage' => $rimg, 'group' => $wardname, 'bednumber' => $bednumber, 'marital' => $mar, 'known' => ucwords(strtolower($knwn)), 'religion' => $rel, 'occupation' => $occupation, 'gmsnumber' => $gms, 'allergies' => $allergies, 'likes' => $likes, 'dislikes' => $dislikes, 'resid' => $resid, 'status' => $status, 'catheter' => $rescatheter, 'observation' => $resobser, 'diebetic' => $diebetic, 'currentlocation' => $crntlocation, 'diettype' => $diettype, 'dependency' => $dependency, 'foodallergycount' => $fudallrgcnt, 'foodallergies' => $allergyfoods, 'medicineallergycount' => $medallcnt, 'medicineallergies' => $allergymedicine, 'dues' => $duearray, 'waterlowscore' => $waterlowscore, 'smmsescore' => $smmsescore, 'mustscore' => $mustscore, 'lastdailycare' => $lstreportdate, 'resusitationattempts' => $cprrr, 'hoistrequired' => $hoist, 'daypad' => $daypad, 'nightpad' => $nightpad, 'bedtime' => $slbedtime, 'wakeuptime' => $wakeuptime, 'dressundress' => $dressundress, 'bedrailexpiry' => $bedrailexpiry, 'bedraillastpdatedate' => $bedraillastpdatedate, 'bedrailuse' => $bedrailuse, 'bedrailusername' => $railempname, 'checkeddate' => $checkeddate, 'checkempname' => $checkempname, 'pegfeed' => $pegfeed, 'careplanmeeetingdate' => $careplanmeeetingdate, 'careplannextreviewdate' => $careplannextreviewdate);
            }
            $resdnt = json_encode($res);
            $success = array('status' => "success", "msg" => $res);
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function residentprofile()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        
        if($resid == "")
        {
            $success = array('status' => "failed", "msg" => "Field cannot empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $adlvrsn = mysql_query("SELECT * FROM en_adlassessmentsettings");
            if(mysql_num_rows($adlvrsn)>0)
            {
                $row11 = mysql_fetch_array($adlvrsn);
                $assmntvrsn = $row11['as_assessmentversion'];
            }
            else{
                $assmntvrsn = "0";
            }
            
            $resdent = mysql_query("SELECT * FROM en_resbasicinfo r LEFT JOIN en_resaddress ra ON r.residentadmissionid=ra.residentadmid LEFT JOIN en_wardbeds b ON b.residentid=r.residentadmissionid WHERE r.residentadmissionid='$resid'");
            $row = mysql_fetch_array($resdent);

            $duearray = array();
            $today = date('Y-m-d');

            $watrlw = mysql_query("SELECT ws_total_score, ws_risklevel FROM en_waterlowassessment WHERE ws_userid='$resid' AND ws_isactive='0' ORDER BY waterlowassid DESC LIMIT 1");
            $wtrw = mysql_fetch_array($watrlw);
            $waterlowscore = $wtrw['ws_total_score'];

            switch ($wtrw['ws_risklevel']) {
                case 0:
                $waterlowscore = $waterlowscore . ' ( Low Risk )';
                break;
                case 1:
                $waterlowscore = $waterlowscore . ' ( At Risk )';
                break;
                case 2:
                $waterlowscore = $waterlowscore . ' ( High Risk )';
                break;
                case 3:
                $waterlowscore = $waterlowscore . ' ( Very High Risk )';
                break;
            }

            $smmse = mysql_query("SELECT rm_totalscore FROM en_resmmse WHERE rm_resid='$resid' AND rm_isactive='0' ORDER BY rm_mmseid DESC LIMIT 1");
            $smrow = mysql_fetch_array($smmse);
            $smmsescore = $smrow['rm_totalscore'];
            if($smrow['rm_totalscore'] < 10)
            {
                $smmsescore = $smmsescore . " ( SEVERE )";
            }
            else if($mmsval->rm_totalscore >= 10 && $mmsval->rm_totalscore < 21)
            {
                $smmsescore = $smmsescore . " ( MODERATE )";
            }
            else if($mmsval->rm_totalscore >= 21 && $mmsval->rm_totalscore < 25)
            {
                $smmsescore = $smmsescore . " ( MILD/ EARLY STAGE )";
            }
            else{
                $smmsescore = $smmsescore . " ( MAY BE NORMAL )";
            }

            $mstdet = mysql_query("SELECT ma_totalscore FROM en_resmustassessment WHERE ma_resid='$resid' AND ma_isactive='0' ORDER BY ma_mustassessmentid DESC LIMIT 1");
            $mstrow = mysql_fetch_array($mstdet);
            $mustscore = $mstrow['ma_totalscore'];

            if($mstlist->ma_totalscore == 0)
            {
                $mustscore = $mustscore . ' ( Low Risk )';
            }
            else if($mstlist->ma_totalscore == 1)
            {
                $mustscore = $mustscore . ' ( Medium Risk )';
            }
            else{
                $mustscore = $mustscore . ' ( High Risk )';
            }

            $appintmt = mysql_query("SELECT * FROM en_appointments WHERE ap_usertype='resident' AND ap_userid='$resid' AND ap_fromdate>='$today'");
            $apptim = array();
            $apptitle = "";
            if(mysql_num_rows($appintmt) > 0)
            {
                $apptim = array();
                while($aprow = mysql_fetch_array($appintmt))
                {
                    $apptitle = $aprow['ap_appointmenttitle'];
                    $aptm = date('H:i', strtotime($aprow['ap_fromtime']));
                        //$addeddate = date('');
                    $descriptionarr = str_replace("'", ' ', $aprow['ap_description']);
                    $ap_description = preg_replace('/[^A-Za-z0-9\-\']/', '', $descriptionarr);
                    $apptim[] = array('time' => $aptm, 'date' => $aprow['ap_fromdate'], 'title' => $apptitle, 'description' => $ap_description, 'addeddate' => $aprow['ap_addeddate']);
                }
            }

            $duearray[] = array('duename' => "Appointments", 'dues' => mysql_num_rows($appintmt), 'title' => $apptitle, 'duetime' => $apptim);

            $depndcy = mysql_query("SELECT * FROM en_bartheladlindex WHERE ba_resid='$resid' AND ba_isactive='0' ORDER BY ba_barthelindexid DESC LIMIT 1");
            if(mysql_num_rows($depndcy) > 0)
            {
                $dpndrw = mysql_fetch_array($depndcy);
                $scre = $dpndrw['ba_totalscore'];
                $scrarr = explode('(', $scre);

                if(isset($scrarr[1]))
                {
                    $dependency = substr($scrarr[1], 0, -1);
                }
                else{
                    $dependency = "";
                }
            }
            else{
                $dependency = "";
            }

            $shwrdt = mysql_query("SELECT * FROM en_residentmorningcare WHERE rm_residentid='$resid' AND rm_isactive='0' ORDER BY resmorningcareid DESC");

            if(mysql_num_rows($shwrdt) > 0)
            {
                $shwrval = 0;
                while($shwrw = mysql_fetch_array($shwrdt))
                {
                    $optionids = explode('#', $shwrw['rm_optionids']);
                    if($optionids[0] != '0' && $optionids[0] != '5')
                    {
                            /*if(date('Y-m-d', strtotime($shwrw['rm_updatedtime'])) < $today)
                            {
                            }
                            else{
                            }*/
                            $duearray[] = array('duename' => "Shower", 'lastdate' => $bwlrw['rm_updatedtime']);
                            $shwrval = 1;
                            break;
                        }
                    }
                    if($shwrval == 0)
                    {
                        $duearray[] = array('duename' => "Shower", 'lastdate' => "");
                    }
                }
                else{
                    $duearray[] = array('duename' => "Shower", 'lastdate' => "");
                }
                
                $bwlmv = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' ORDER BY br_resbowelrecordid DESC LIMIT 1");
                if(mysql_num_rows($bwlmv) > 0)
                {
                    $bwlrw = mysql_fetch_array($bwlmv);
                    $lst3 = date('Y-m-d', strtotime('-2 days'));
                    if(date('Y-m-d', strtotime($bwlmv['br_recorddate'])) < $lst3)
                    {
                        $wdue = "Yes";
                    }
                    else{
                        $wdue = "No";
                    }
                    $duearray[] = array('duename' => "Bowel", 'lastdate' => $bwlrw['br_recorddate'], 'type' => $bwlrw['br_bowelchartid'], 'time' => $bwlrw['br_bowelrecordtimeid'], 'size' => $bwlrw['br_bowelsize']);
                }
                else{
                    $duearray[] = array('duename' => "Bowel", 'lastdate' => "", 'type' => "", 'time' => "", 'size' => "");
                }
                
                $medal = mysql_query("SELECT * FROM en_resallergicmedicine a LEFT JOIN en_medicationdatabse b ON b.medicationid=a.am_medicationid WHERE a.am_resid='$resid' AND a.am_isactive='0'");
                $medallcnt = mysql_num_rows($medal);
                if($medallcnt > 0)
                {
                    $medcnarr = array();
                    while($mdrow = mysql_fetch_array($medal))
                    {
                        if($medal['am_medicationid'] != '0')
                        {
                            $medcnarr[] = $mdrow['md_medicationname'];
                        }
                        else {
                            $medcnarr[] = $mdrow['am_othermedicine'];
                        }
                    }
                    $allergymedicine = implode(', ', $medcnarr);
                }
                else{
                    $allergymedicine = "";
                }
                
                $obsr10 = mysql_query("SELECT ob_bloodglucose, ob_isbloodglucose, ob_glucosemeasured, ob_bloodglucosemg, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND (ob_isbloodglucose = 'no' OR (ob_bloodglucose !='' AND ob_isbloodglucose ='yes')) ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr10) > 0)
                {
                    $obrow10 = mysql_fetch_array($obsr10);
                    if($obrow10['ob_isbloodglucose'] == 'yes')
                    {
                        $diebetic = $obrow10['ob_bloodglucose'];
                    }
                    else{
                        $diebetic = "No";
                    }
                }
                else{
                    $diebetic = "No";
                }
                
                $trnsfr = mysql_query("SELECT * FROM en_patienttransferinfo WHERE pt_resid='$resid' AND pt_isactive='0' AND pt_readmission = '0' ORDER BY pt_patienttransferid DESC LIMIT 1");
                if(mysql_num_rows($trnsfr) > 0)
                {
                    $row10 = mysql_fetch_array($trnsfr);
                    if($row10['pt_isreturn'] != '1')
                    {
                        if($row10['pt_transfertype'] == 'Temporary transfer with family or similar')
                        {
                            $crntlocation = "Outing with family";
                        }
                        else if($row10['pt_transfertype']=='Deceased')
                        {
                            $crntlocation = "Deceased";
                        }
                        else if($row10['pt_transfertype']=='Transfer to Hospital or Advance care')
                        {
                            $crntlocation = "Transfer to Hospital or Advance care";
                        }
                        else if($row10['pt_transfertype']=='Discharge to home or other care home')
                        {
                            $crntlocation = "Discharged";
                        }
                        else{
                            $crntlocation = "Temporary transfer";
                        }
                    }
                    else{
                        $crntlocation = "Nursing Home";
                    }
                }
                else{
                    $crntlocation = "Nursing Home";
                }
                
                $bplstdate = "";
                $obsr1 = mysql_query("SELECT ob_bloodpressure, ob_bloodpressure2, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_bloodpressure !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr1) > 0)
                {
                    $obrow1 = mysql_fetch_array($obsr1);
                    $bloodpressure1 = $obrow1['ob_bloodpressure'];
                    $bloodpressure2 = $obrow1['ob_bloodpressure2'];
                    $bptakendate = $obrow1['ob_updatedon'];
                    $bplstdate = $bptakendate;
                    
                    $bparr = array('bp1' => $bloodpressure1, 'bp2' => $bloodpressure2, 'date' => $bptakendate);
                }
                else{
                    $bparr = array('bp1' => "", 'bp2' => "", 'date' => "");
                }
                $pulselstdate = "";
                $obsr2 = mysql_query("SELECT ob_pulse, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_pulse !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr2) > 0)
                {
                    $obrow2 = mysql_fetch_array($obsr2);
                    $pulse = $obrow2['ob_pulse'];
                    $takendate = $obrow2['ob_updatedon'];
                    $pulselstdate = $takendate;
                    
                    $pulsearr = array('pulse' => $pulse, 'date' => $takendate);
                }
                else{
                    $pulsearr = array('pulse' => "", 'date' => "");
                }
                $templstdate = "";
                $obsr3 = mysql_query("SELECT ob_temparature, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_temparature !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr3) > 0)
                {
                    $obrow3 = mysql_fetch_array($obsr3);
                    $temparature = $obrow3['ob_temparature'];
                    $takendate = $obrow3['ob_updatedon'];
                    $templstdate = $takendate;
                    
                    $temparr = array('temparature' => $temparature, 'date' => $takendate);
                }
                else{
                    $temparr = array('temparature' => "", 'date' => "");
                }
                $spo2lstdate = "";
                $obsr4 = mysql_query("SELECT ob_sp02, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_sp02 !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr4) > 0)
                {
                    $obrow4 = mysql_fetch_array($obsr4);
                    $sp02 = $obrow4['ob_sp02'];
                    $takendate = $obrow4['ob_updatedon'];
                    $spo2lstdate = $takendate;
                    
                    $sp02arr = array('sp02' => $sp02, 'date' => $takendate);
                }
                else{
                    $sp02arr = array('sp02' => "", 'date' => "");
                }
                $weghtlstdate = "";
                $obsr5 = mysql_query("SELECT ob_weight, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_weight !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr5) > 0)
                {
                    $obrow5 = mysql_fetch_array($obsr5);
                    $weight = $obrow5['ob_weight'];
                    $takendate = $obrow5['ob_updatedon'];
                    $weghtlstdate = $takendate;
                    
                    $weightarr = array('weight' => $weight, 'date' => $takendate);
                }
                else{
                    $weightarr = array('weight' => "", 'date' => "");
                }
                $hightlstdate = "";
                $obsr6 = mysql_query("SELECT ob_height, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_height !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr6) > 0)
                {
                    $obrow6 = mysql_fetch_array($obsr6);
                    $height = $obrow6['ob_height'];
                    $takendate = $obrow6['ob_updatedon'];
                    $hightlstdate = $takendate;
                    
                    $heightarr = array('height' => $height, 'date' => $takendate);
                }
                else{
                    $heightarr = array('height' => "", 'date' => "");
                }
                $resprlstdate = "";
                $obsr7 = mysql_query("SELECT ob_respiration, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_respiration !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr7) > 0)
                {
                    $obrow7 = mysql_fetch_array($obsr7);
                    $respiration = $obrow7['ob_respiration'];
                    $takendate = $obrow7['ob_updatedon'];
                    $resprlstdate = $takendate;
                    
                    $respirearr = array('respiration' => $respiration, 'date' => $takendate);
                }
                else{
                    $respirearr = array('respiration' => "", 'date' => "");
                }
                $bmilstdate = "";
                $obsr8 = mysql_query("SELECT ob_bmi, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_bmi !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr8) > 0)
                {
                    $obrow8 = mysql_fetch_array($obsr8);
                    $bmi = $obrow8['ob_bmi'];
                    $takendate = $obrow8['ob_updatedon'];
                    $bmilstdate = $takendate;
                    
                    $bmiarr = array('bmi' => $bmi, 'date' => $takendate);
                }
                else{
                    $bmiarr = array('bmi' => "", 'date' => "");
                }
                $urinelstdate = "";
                $obsr9 = mysql_query("SELECT ob_urinalysis, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_urinalysis !='' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr9) > 0)
                {
                    $obrow9 = mysql_fetch_array($obsr9);
                    $urinalysis = $obrow9['ob_urinalysis'];
                    $takendate = $obrow9['ob_updatedon'];
                    $urinelstdate = $takendate;
                    
                    $urniearr = array('urinalysis' => $urinalysis, 'date' => $takendate);
                }
                else{
                    $urniearr = array('urinalysis' => "", 'date' => "");
                }
                $bldglclstdate = "";
                $obsr10 = mysql_query("SELECT ob_bloodglucose, ob_glucosemeasured, ob_bloodglucosemg, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_bloodglucose !='' AND ob_isbloodglucose ='yes' ORDER BY readmobservationid DESC LIMIT 1");
                if(mysql_num_rows($obsr10) > 0)
                {
                    $obrow10 = mysql_fetch_array($obsr10);
                    $glucosemeasured = $obrow10['ob_glucosemeasured'];
                    $bloodglucose = $obrow10['ob_bloodglucose'];
                    $bloodglucosemg = $obrow10['ob_bloodglucosemg'];
                    $takendate = $obrow10['ob_updatedon'];
                    $bldglclstdate = $takendate;
                    
                    $glucosearr = array('glucosemeasured' => $glucosemeasured, 'bloodglucose' => $bloodglucose, 'bloodglucosemg' => $bloodglucosemg, 'date' => $takendate);
                }
                else{
                    $glucosearr = array('glucosemeasured' => "", 'bloodglucose' => "", 'bloodglucosemg' => "", 'date' => "");
                }
                $resobser = array('bloodpressure' => $bparr, 'pulse' => $pulsearr, 'temperature' => $temparr, 'sp02' => $sp02arr, 'weight' => $weightarr, 'height' => $heightarr, 'respiration' => $respirearr, 'bmi' => $bmiarr, 'urinalysis' => $urniearr, 'bloodglucose' => $glucosearr);
                
                
                $remndrs = mysql_query("SELECT * FROM en_reminderdates WHERE DATE(rd_remdatetime)='$today' AND rd_resid='$resid'");
                $bn = 0;
                $bpduetime = array();

                $pn = 0;
                $plsduetime = array();

                $tn = 0;
                $tempduetime = array();

                $sn = 0;
                $spduetime = array();

                $wn = 0;
                $wghtduetime = array();

                $hn = 0;
                $hghtduetime = array();

                $rn = 0;
                $respduetime = array();

                $bmn = 0;
                $bmiduetime = array();

                $un = 0;
                $urinduetime = array();

                $bgn = 0;
                $bldglduetime = array();
                if(mysql_num_rows($remndrs) > 0)
                {
                    
                    while($remrow = mysql_fetch_array($remndrs))
                    {
                        $obsertypes = explode(',', $remrow['observationtypes']);
                        
                        if (in_array('Blood Pressure', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Blood Pressure', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $bpduetime[] = array('time' => $takentime);
                                $bn++;
                            }
                        }
                        
                        if (in_array('Pulse (Per Minute)', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Pulse (Per Minute)', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $plsduetime[] = array('time' => $takentime);
                                $pn++;
                            }
                        }
                        
                        if (in_array('Temperature', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Temperature', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $tempduetime[] = array('time' => $takentime);
                                $tn++;
                            }
                        }
                        
                        if (in_array('Sp02', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Sp02', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $spduetime[] = array('time' => $takentime);
                                $sn++;
                            }
                        }
                        
                        if (in_array('Weight(Kg)', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Weight(Kg)', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $wghtduetime[] = array('time' => $takentime);
                                $wn++;
                            }
                        }
                        
                        if (in_array('Height(Cms)', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Height(Cms)', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $hghtduetime[] = array('time' => $takentime);
                                $hn++;
                            }
                        }
                        
                        if (in_array('Respiration(Per Minute)', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Respiration(Per Minute)', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $respduetime[] = array('time' => $takentime);
                                $rn++;
                            }
                        }
                        
                        if (in_array('BMI', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('BMI', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $bmiduetime[] = array('time' => $takentime);
                                $bmn++;
                            }
                        }
                        
                        if (in_array('Urinalysis', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Urinalysis', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $urinduetime[] = array('time' => $takentime);
                                $un++;
                            }
                        }
                        
                        if (in_array('Blood Glucose', $obsertypes)) {
                            $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                            if (!in_array('Blood Glucose', $takenobservtion)) {
                                $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                $bldglduetime[] = array('time' => $takentime);
                                $bgn++;
                            }
                        }
                    }
                    
                }
                $duearray[] = array('duename' => "Blood Pressure", 'dues' => $bn, 'duetime' => $bpduetime, 'lastdate' => $bplstdate);
                $duearray[] = array('duename' => "Pulse (Per Minute)", 'dues' => $pn, 'duetime' => $plsduetime, 'lastdate' => $pulselstdate);
                $duearray[] = array('duename' => "Temperature", 'dues' => $tn, 'duetime' => $tempduetime, 'lastdate' => $templstdate);
                $duearray[] = array('duename' => "Sp02", 'dues' => $sn, 'duetime' => $spduetime, 'lastdate' => $spo2lstdate);
                $duearray[] = array('duename' => "Weight", 'dues' => $wn, 'duetime' => $wghtduetime, 'lastdate' => $weghtlstdate);
                $duearray[] = array('duename' => "Height", 'dues' => $hn, 'duetime' => $hghtduetime, 'lastdate' => $hightlstdate);
                $duearray[] = array('duename' => "Respiration(Per Minute)", 'dues' => $rn, 'duetime' => $respduetime, 'lastdate' => $resprlstdate);
                $duearray[] = array('duename' => "BMI", 'dues' => $bmn, 'duetime' => $bmiduetime, 'lastdate' => $bmilstdate);
                $duearray[] = array('duename' => "Urinalysis", 'dues' => $un, 'duetime' => $urinduetime, 'lastdate' => $urinelstdate);
                $duearray[] = array('duename' => "Blood Glucose", 'dues' => $bgn, 'duetime' => $bldglduetime, 'lastdate' => $bldglclstdate);
                
                if($assmntvrsn == '0')
                {
                    $fuddet = mysql_query("SELECT * FROM en_adlfoodeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatanddrinkid DESC LIMIT 1");
                    if(mysql_num_rows($fuddet) > 0)
                    {
                        $row9 = mysql_fetch_array($fuddet);
                        $allergies = $row9['ed_allergies'];
                        $likes = $row9['ed_likes'];
                        $dislikes = $row9['ed_dislikes'];
                        $diettype = $row9['ed_typeofdiet'];
                        
                        $fudallergarr = explode(',', $allergies);
                        $fudallrgcnt = count($fudallergarr);
                        
                        if($fudallergarr != "")
                        {
                            $allergyfoods = implode(', ', $fudallergarr);
                        }
                        else{
                            $allergyfoods = "";
                        }
                    }
                    else{
                        $allergies = 'Nil';
                        $likes = 'Nil';
                        $dislikes = 'Nil';
                        $diettype = "";
                        
                        $fudallrgcnt = '0';
                        $allergyfoods = "";
                    }
                    
                }
                else{
                    $fuddet = mysql_query("SELECT * FROM en_compeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatdrinkid DESC LIMIT 1");
                    if(mysql_num_rows($fuddet) > 0)
                    {
                        $row9 = mysql_fetch_array($fuddet);
                        
                        $allergies = $row9['ed_allergies'];
                        
                        $ed_likes = unserialize($row9['ed_foodlikes']);
                        if(isset($ed_likes['breaklikefoods']))
                        {
                            $likes = $ed_likes['breaklikefoods'];
                        }
                        else{
                            $likes = "Nil";
                        }
                        $ed_dislikes = unserialize($row9['ed_fooddislikes']);
                        if(isset($ed_dislikes['breakdislikefoods']))
                        {
                            $dislikes = $ed_dislikes['breakdislikefoods'];
                        }
                        else{
                            $dislikes = "Nil";
                        }
                        
                        $ed_dietrydetails = unserialize($row9['ed_dietrydetails']);
                        if(isset($ed_dietrydetails['choosendietary']))
                        {
                            $diettype = $ed_dietrydetails['choosendietary'];
                        }
                        else{
                            $diettype = "";
                        }
                        
                        $fudallergarr = explode('#', $allergies);
                        $fudallrgcnt = count($fudallergarr);
                        
                        if($fudallergarr != "")
                        {
                            $allergyfoods = implode(', ', $fudallergarr);
                        }
                        else{
                            $allergyfoods = "";
                        }
                    }
                    else{
                        $allergies = 'Nil';
                        $likes = 'Nil';
                        $dislikes = 'Nil';
                        $diettype = "";
                        $fudallrgcnt = '0';
                        $allergyfoods = "";
                    }
                }
                
                
                $ward = mysql_query("SELECT * FROM en_wardbeds wb INNER JOIN en_wards w ON wb.wardid=w.wardid  WHERE wb.residentid='$resid'");
                $cathdet = mysql_query("SELECT cd_catheterdetailid FROM en_rescatheterdetails WHERE cd_resid='$resid' AND cd_isactive='0' ORDER BY cd_catheterdetailid DESC LIMIT 1");
                if(mysql_num_rows($cathdet)>0)
                {
                    $rescatheter = 1;
                }
                else{
                    $cathdet2 = mysql_query("SELECT em_cather FROM en_adlelimination WHERE em_resid='$resid' ORDER BY em_eliminationid DESC LIMIT 1");
                    if(mysql_num_rows($cathdet2)>0)
                    {
                        $row8 = mysql_fetch_array($cathdet2);
                        if($row8['em_cather'] == 'Yes')
                        {
                            $rescatheter = 1;
                        }
                        else{
                            $rescatheter = 0;
                        }
                    }
                    else{
                        $rescatheter = 0;
                    }
                }
                
                $title = $row['res_title'];
                
                $dob = $row['res_dob'];
                $date1 = date('Y-m-d', strtotime($dob));
                $date2 = date('Y-m-d');
                
                $diff = abs(strtotime($date2) - strtotime($date1));
                
                $age = floor($diff / (365*60*60*24));
                //$age = $row['res_age'];
                $mar = $row['res_maritalstatus'];
                $knwn = preg_replace('/[^A-Za-z0-9\-\']/', '', $row['res_surname']);
                $status = $row['res_isactive'];
                $rel = $row['res_relligion'];
                $occupation = $row['res_occupation'];
                $gms = $row['resad_gmsnumber'];
                $wrdcnt = mysql_num_rows($ward);
                if($wrdcnt>0)
                {
                    $wrow = mysql_fetch_array($ward);
                    $wardname = preg_replace('/[^A-Za-z0-9\-\']/', '', $wrow['wardname']);
                    $bednumber = $wrow['bedno'];
                }
                else{
                    $wardname = "Not assigned";
                    $bednumber = "Not assigned";
                }
                $imgid = $row['residentadmissionid'];
                $imgdet = mysql_query("SELECT * FROM en_resadmimage WHERE resadmid='$imgid' ORDER BY resadmimageid DESC LIMIT 1");
                if(mysql_num_rows($imgdet) > 0)
                {
                    $row1 = mysql_fetch_array($imgdet);
                    $rimg = "http://dev-enursing.demormc.com/public/upload/residentimage/".$row1['resadmimage'];
                    
                    //$rimg = "http://52.17.237.23/public/upload/residentimage/".$row1['resadmimage'];
                }
                else{
                    $rimg = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                    //$rimg = "http://52.17.237.23/assets/img/profile-pic.jpg";
                }

                $lstdailyrprt = mysql_query("SELECT rm_updatedtime FROM en_residentmorningcare WHERE rm_residentid='$resid' AND rm_isactive='0' ORDER BY resmorningcareid DESC LIMIT 1");
                if(mysql_num_rows($lstdailyrprt) > 0)
                {
                    $rprtrw = mysql_fetch_array($lstdailyrprt);
                    $lstreportdate = $rprtrw['rm_updatedtime'];
                }
                else{
                    $lstreportdate = "";
                }

                /*$lstdailyrprt = mysql_query("SELECT * FROM en_dailyreport WHERE dr_resid='$resid' ORDER BY reportid DESC LIMIT 1");
                if(mysql_num_rows($lstdailyrprt) > 0)
                {
                    $rprtrw = mysql_fetch_array($lstdailyrprt);
                    $lstreportdate = $rprtrw['dr_addedon'];
                }
                else{
                    $lstreportdate = "";
                }*/

                /************** Resusitation Attempts start *****************/
                $cprrr = "";
                $hoist = "";
                $daypad = "";
                $nightpad = "";
                $slbedtime = "";
                $wakeuptime = "";
                $dressundress = "";
                if($assmntvrsn == '0')
                {
                    $dyngdet = mysql_query("SELECT dy_dyingid,dy_resusitationattempts FROM en_adldying WHERE dy_resid='$imgid' ORDER BY dy_dyingid DESC LIMIT 1");
                    if(mysql_num_rows($dyngdet) > 0)
                    {
                        $dyrow = mysql_fetch_array($dyngdet);
                        $cprrr = $dyrow['dy_resusitationattempts'];
                    }

                    $mobltydet = mysql_query("SELECT mb_hoistrequired FROM en_adlmobility WHERE mb_resid='$imgid' ORDER BY mb_mobilityid DESC LIMIT 1");
                    if(mysql_num_rows($mobltydet) > 0)
                    {
                        $mbrow = mysql_fetch_array($mobltydet);
                        $hoist = $mbrow['mb_hoistrequired'];
                    }

                    $elmntdet = mysql_query("SELECT em_incontinencepads,em_nightincontinencepad FROM en_adlelimination WHERE em_resid='$imgid' ORDER BY em_eliminationid DESC LIMIT 1");
                    if(mysql_num_rows($elmntdet) > 0)
                    {
                        $elrow = mysql_fetch_array($elmntdet);
                        $daypad = $elmntdet['em_incontinencepads'];
                        $nightpad = $elmntdet['em_nightincontinencepad'];
                    }

                    $slpngdet = mysql_query("SELECT sl_bedtimeroutine, sl_usuallygetup FROM en_adlsleeping WHERE sl_resid='$imgid' ORDER BY sl_sleepingid DESC LIMIT 1");
                    if(mysql_num_rows($slpngdet) > 0)
                    {
                        $slrow = mysql_fetch_array($slpngdet);
                            //$sl_sleeping = unserialize($slrow['sl_sleeping']);
                        $slbedtime = $slrow['sl_bedtimeroutine'];
                        $wakeuptime = $slrow['sl_usuallygetup'];
                    }

                    $perdredet = mysql_query("SELECT pc_dressing FROM en_adlpersonalcareanddressing WHERE pc_resid='$imgid' ORDER BY pc_personalcareid DESC LIMIT 1");
                    if(mysql_num_rows($perdredet) > 0)
                    {
                        $drrow = mysql_fetch_array($perdredet);
                        $pc_dressing = explode('#', $drrow['pc_dressing']);
                        $dressundress = implode(', ', $pc_dressing);
                    }
                }
                else{
                    $dyngdet = mysql_query("SELECT esl_endstagelifeid,esl_advancedwishes FROM en_compendstageoflife WHERE esl_resid='$imgid' ORDER BY esl_endstagelifeid DESC LIMIT 1");
                    if(mysql_num_rows($dyngdet) > 0)
                    {
                        $dyrow = mysql_fetch_array($dyngdet);
                        $esl_advancedwishes = unserialize($dyrow['esl_advancedwishes']);
                        $cprrr = $esl_advancedwishes['cpr'];
                    }

                    $mobltydet = mysql_query("SELECT mb_hoistrequired FROM en_compmobility WHERE mb_resid='$imgid' ORDER BY mb_mobilityid DESC LIMIT 1");
                    if(mysql_num_rows($mobltydet) > 0)
                    {
                        $mbrow = mysql_fetch_array($mobltydet);
                        $mb_hoistrequired = unserialize($mbrow['mb_hoistrequired']);
                        $hoist = $mb_hoistrequired['hoistrequire'];
                    }

                    $elmntdet = mysql_query("SELECT el_continentbowels FROM en_compelimination WHERE el_resid='$imgid' ORDER BY el_eliminationid DESC LIMIT 1");
                    if(mysql_num_rows($elmntdet) > 0)
                    {
                        $elrow = mysql_fetch_array($elmntdet);
                        $el_continentbowels = unserialize($elrow['el_continentbowels']);
                        $daypad = $el_continentbowels['incontinencepadday'];
                        $nightpad = $el_continentbowels['incontinencepadnight'];
                    }

                    $slpngdet = mysql_query("SELECT sl_sleeping FROM en_compsleeping WHERE sl_resid='$imgid' ORDER BY sl_sleepingid DESC LIMIT 1");
                    if(mysql_num_rows($slpngdet) > 0)
                    {
                        $slrow = mysql_fetch_array($slpngdet);
                        $sl_sleeping = unserialize($slrow['sl_sleeping']);
                        $slbedtime = $sl_sleeping['bedtimeroutine'];
                        $wakeuptime = $sl_sleeping['usualgetsup'];
                    }

                    $perdredet = mysql_query("SELECT pd_dressing FROM en_comppersonalcaredress WHERE pd_resid='$imgid' ORDER BY pd_personalcareid DESC LIMIT 1");
                    if(mysql_num_rows($perdredet) > 0)
                    {
                        $drrow = mysql_fetch_array($perdredet);
                        $pd_dressing = unserialize($drrow['pd_dressing']);
                        $dressundress = $pd_dressing['dressing'];
                    }
                }
                if($cprrr == "")
                {
                    $dyngdet = mysql_query("SELECT tes_cprnopulse FROM en_tempendstageoflife WHERE tes_resid='$imgid' ORDER BY tes_endstageid DESC LIMIT 1");
                    if(mysql_num_rows($dyngdet) > 0)
                    {
                        $dyrow = mysql_fetch_array($dyngdet);
                        if($dyrow['tes_cprnopulse'] == 'Attempt Resuscitation')
                        {
                            $cprrr = 'Yes';
                        }
                        else{
                            $cprrr = 'No';
                        }
                    }
                }
                $resfty = mysql_query("SELECT sc_bedraildate,sc_bedrailuse,sc_bedrailexpiry,sc_updatedby FROM en_ressafetychecklists WHERE sc_resid='$imgid' ORDER BY sc_safetychecklistid DESC");
                if(mysql_num_rows($resfty) > 0)
                {
                    $sfrow = mysql_fetch_array($resfty);
                    
                    $bedrailuse = $sfrow['sc_bedrailuse'];
                    if($bedrailuse == 'Check')
                    {
                        $checkeddate = $sfrow['sc_bedraildate'];
                        $usid = $sfrow['sc_updatedby'];
                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                        if(mysql_num_rows($usr)>0)
                        {
                            $row3 = mysql_fetch_array($usr);
                            $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                            $checkempname = ucwords(strtolower($name1));
                            //$checkempname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                        }
                        else{
                            $checkempname = "";
                        }

                        $resfty1 = mysql_query("SELECT sc_bedraildate,sc_bedrailuse,sc_bedrailexpiry,sc_updatedby FROM en_ressafetychecklists WHERE sc_resid='$imgid' AND sc_bedrailuse='Yes' ORDER BY sc_safetychecklistid DESC LIMIT 1");
                        if(mysql_num_rows($resfty1) > 0)
                        {
                            $sfrow1 = mysql_fetch_array($resfty1);
                            $bdexpiredate = $sfrow1['sc_bedrailexpiry'];
                            $curdate = date('Y-m-d H:i:s');
                            if($bdexpiredate != "")
                            {
                                if($curdate > $bdexpiredate)
                                {
                                    $bedrailexpiry = "Yes";
                                }
                                else{
                                    $bedrailexpiry = "No";
                                }
                            }
                            else{
                                $bedrailexpiry = "";
                            }
                            $bedraillastpdatedate = $sfrow1['sc_bedraildate'];
                            $usid = $sfrow1['sc_updatedby'];
                            $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                            if(mysql_num_rows($usr)>0)
                            {
                                $row3 = mysql_fetch_array($usr);
                                $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                                $railempname = ucwords(strtolower($name1));
                                //$railempname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                            }
                            else{
                                $railempname = "";
                            }
                        }
                        else{
                            $bedrailexpiry = "";
                            $bedraillastpdatedate = "";
                            $railempname = "";
                        }
                    }
                    else{
                        $checkeddate = "";
                        $checkempname = "";
                        $bdexpiredate = $sfrow['sc_bedrailexpiry'];
                        $curdate = date('Y-m-d H:i:s');
                        if($bdexpiredate != "")
                        {
                            if($curdate > $bdexpiredate)
                            {
                                $bedrailexpiry = "Yes";
                            }
                            else{
                                $bedrailexpiry = "No";
                            }
                        }
                        else{
                            $bedrailexpiry = "";
                        }
                        //$bedraillastpdatedate = $sfrow['sc_safetydate'] . " " . $sfrow['sc_safetytime'];
                        $bedraillastpdatedate = $sfrow['sc_bedraildate'];

                        $usid = $sfrow['sc_updatedby'];
                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                        if(mysql_num_rows($usr)>0)
                        {
                            $row3 = mysql_fetch_array($usr);
                            $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                            $railempname = ucwords(strtolower($name1));
                            //$railempname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                        }
                        else{
                            $railempname = "";
                        }
                    }
                    

                    
                }
                else{
                    $bedrailexpiry = "";
                    $bedraillastpdatedate = "";
                }

                /************** Resusitation Attempts  End *****************/

                /****** peg feeding details start *******/
                $resfty = mysql_query("SELECT pagefeedingid,pf_tubetype FROM en_pedfeeding WHERE pf_residentid='$imgid' AND pf_status='0' ORDER BY pagefeedingid DESC");
                if(mysql_num_rows($resfty) > 0)
                {
                    $pegfeed = "Yes";
                }
                else{
                    $pegfeed = "No";
                }
                /****** peg feeding details end *********/

                //$name =  preg_replace('/[^A-Za-z0-9\-\']/', '',$row['res_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row['res_surname']);
                $name1 = htmlentities($row['res_firstname'] . " " . $row['res_surname']);
                $pasname = ucwords(strtolower($name1));
                $res = array('title' => $title, 'name' => $pasname, 'dob' => $dob, 'age' => $age, 'resimage' => $rimg, 'group' => $wardname, 'bednumber' => $bednumber, 'marital' => $mar, 'known' => ucwords(strtolower($knwn)), 'religion' => $rel, 'occupation' => $occupation, 'gmsnumber' => $gms, 'allergies' => $allergies, 'likes' => $likes, 'dislikes' => $dislikes, 'resid' => $resid, 'status' => $status, 'catheter' => $rescatheter, 'observation' => $resobser, 'diebetic' => $diebetic, 'currentlocation' => $crntlocation, 'diettype' => $diettype, 'dependency' => $dependency, 'foodallergycount' => $fudallrgcnt, 'foodallergies' => $allergyfoods, 'medicineallergycount' => $medallcnt, 'medicineallergies' => $allergymedicine, 'dues' => $duearray, 'waterlowscore' => $waterlowscore, 'smmsescore' => $smmsescore, 'mustscore' => $mustscore, 'lastdailycare' => $lstreportdate, 'resusitationattempts' => $cprrr, 'hoistrequired' => $hoist, 'daypad' => $daypad, 'nightpad' => $nightpad, 'bedtime' => $slbedtime, 'wakeuptime' => $wakeuptime, 'dressundress' => $dressundress, 'bedrailexpiry' => $bedrailexpiry, 'bedraillastpdatedate' => $bedraillastpdatedate, 'bedrailuse' => $bedrailuse, 'bedrailusername' => $railempname, 'checkeddate' => $checkeddate, 'checkempname' => $checkempname, 'pegfeed' => $pegfeed);

            //$resdnt = json_encode($res);
                $success = array('status' => "success", "msg" => $res);
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        private function waterlowdetails(){
            if ($this->get_request_method() == "GET") {
                $this->response('', 406);
            }
            $resid = $this->_request['resid'];
            $userid = $this->_request['userid'];
            if($resid != "" && $userid != "")
            {
                $watrlw = mysql_query("SELECT * FROM en_waterlowassessment WHERE ws_userid='$resid' AND ws_isactive='0' ORDER BY waterlowassid DESC LIMIT 1");
                if(mysql_num_rows($watrlw) > 0)
                {
                    $wtrow = mysql_fetch_array($watrlw);
                    
                    $wtrid = $wtrow['waterlowassid'];
                    $revwdate = mysql_query("SELECT wr_nextreviewdate FROM en_waterlowreview WHERE waterlowassid='$wtrid' ORDER BY reviewid DESC LIMIT 1");
                    if (mysql_num_rows($revwdate) == 0) {
                        if ($wtrow['ws_datereviewed'] != "0000-00-00") {
                            $nxtrvw = date('Y-m-d', strtotime($wtrow['ws_datereviewed']));
                        }
                    } else {
                        $res = mysql_fetch_assoc($revwdate);

                        $nxtrvw = date('Y-m-d', strtotime($res["wr_nextreviewdate"]));
                    }
                    
                    switch ($wtrow['ws_risklevel']) {
                        case 0:
                        $risklvl = 'Low Risk';
                        break;
                        case 1:
                        $risklvl = 'At Risk';
                        break;
                        case 2:
                        $risklvl = 'High Risk';
                        break;
                        case 3:
                        $risklvl = 'Very High Risk';
                        break;
                    }
                    $watrdet = array('waterlowscore' => $wtrow['ws_total_score'], 'risklevel' => $risklvl, 'testeddate' => $wtrow['ws_datetested'], 'nextreviewdate' => $nxtrvw);
                }
                else{
                    $watrdet = array('waterlowscore' => "", 'risklevel' => "", 'testeddate' => "", 'nextreviewdate' => "");
                }
                
                $success = array('status' => "success", "msg" => $watrdet);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Fields cannot been empty");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        private function smmsedetails(){
            if ($this->get_request_method() == "GET") {
                $this->response('', 406);
            }
            $resid = $this->_request['resid'];
            $userid = $this->_request['userid'];
            if($resid != "" && $userid != "")
            {
                $smmse = mysql_query("SELECT * FROM en_resmmse WHERE rm_resid='$resid' AND rm_isactive='0' ORDER BY rm_mmseid DESC LIMIT 1");
                if(mysql_num_rows($smmse) > 0)
                {
                    $smrow = mysql_fetch_array($smmse);
                    
                    if($smrow['rm_totalscore'] < 10)
                    {
                        $smmserisk = "SEVERE";
                    }
                    else if($smrow['rm_totalscore'] >= 10 && $smrow['rm_totalscore'] < 21)
                    {
                        $smmserisk = "MODERATE";
                    }
                    else if($smrow['rm_totalscore'] >= 21 && $smrow['rm_totalscore'] < 25)
                    {
                        $smmserisk = "MILD/ EARLY STAGE";
                    }
                    else{
                        $smmserisk = "MAY BE NORMAL";
                    }
                    $smmsescore = $smrow['rm_totalscore'] . "(" . $smmserisk . ")";
                    
                    $smmsedet = array('smmsescore' => $smmsescore, 'date' => $smrow['rm_updatedon'], 'nextreviewdate' => $smrow['rm_nextreviewdate']);
                }
                else{
                    $smmsedet = array('smmsescore' => "", 'date' => "", 'nextreviewdate' => "");
                }
                
                $success = array('status' => "success", "msg" => $smmsedet);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Fields cannot been empty");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        private function mustdetails()
        {
            if ($this->get_request_method() == "GET") {
                $this->response('', 406);
            }
            $resid = $this->_request['resid'];
            $userid = $this->_request['userid'];
            if($resid != "" && $userid != "")
            {
                $mstdet = mysql_query("SELECT * FROM en_resmustassessment WHERE ma_resid='$resid' AND ma_isactive='0' ORDER BY ma_mustassessmentid DESC LIMIT 1");
                if(mysql_num_rows($mstdet) > 0)
                {
                    $smrow = mysql_fetch_array($mstdet);

                    if($smrow['ma_totalscore'] == 0)
                    {
                        $mstrisk = 'Low Risk';
                    }
                    else if($smrow['ma_totalscore'] == 1)
                    {
                        $mstrisk =  'Medium Risk';
                    }
                    else{
                        $mstrisk =  'High Risk';
                    }

                    $mustdet = array('mustscore' => $smrow['ma_totalscore'], 'risk' => $mstrisk, 'date' => $smrow['ma_updatedon'], 'nextreviewdate' => $smrow['ma_reviewdate']);
                }
                else{
                    $mustdet = array('mustscore' => "", 'risk' => "", 'date' => "", 'nextreviewdate' => "");
                }
                $success = array('status' => "success", "msg" => $mustdet);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Fields cannot been empty");
                $this->response($this->json($success), 200);  
                return true;
            }
        }

        /************ resident pagination  start ************/
        private function filterresidentdetails() {
            if ($this->get_request_method() == "GET") {
                $this->response('', 406);
            }
            $startnumber = $this->_request['startnumber'];
            $limit = $this->_request['limit'];
            if($startnumber != "" && $limit != "")
            {

                $resdent = mysql_query("SELECT * FROM en_resbasicinfo r LEFT JOIN en_resaddress ra ON r.residentadmissionid=ra.residentadmid LEFT JOIN en_wardbeds b ON b.residentid=r.residentadmissionid WHERE r.res_istransfer='0' AND r.res_isactive='0' ORDER BY convert(b.bedno, decimal) ASC LIMIT $startnumber, $limit");
                $count = mysql_num_rows($resdent);
                if($count == 0)
                {
                    $success = array('status' => "failed", "msg" => "No Residents");
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $adlvrsn = mysql_query("SELECT * FROM en_adlassessmentsettings");
                    if(mysql_num_rows($adlvrsn)>0)
                    {
                        $row11 = mysql_fetch_array($adlvrsn);
                        $assmntvrsn = $row11['as_assessmentversion'];
                    }
                    else{
                        $assmntvrsn = "0";
                    }

                    while($row = mysql_fetch_array($resdent))
                    {
                        $duearray = array();
                        $resid = $row['residentadmissionid'];
                        $today = date('Y-m-d');



                        $appintmt = mysql_query("SELECT * FROM en_appointments WHERE ap_usertype='resident' AND ap_userid='$resid' AND ap_fromdate>='$today'");
                        $apptim = array();
                        $apptitle = "";
                        if(mysql_num_rows($appintmt) > 0)
                        {
                            $apptim = array();
                            while($aprow = mysql_fetch_array($appintmt))
                            {
                                $apptitle = $aprow['ap_appointmenttitle'];
                                $aptm = date('H:i', strtotime($aprow['ap_fromtime']));
                            //$addeddate = date('');
                                $descriptionarr = str_replace("'", ' ', $aprow['ap_description']);
                                $ap_description = preg_replace('/[^A-Za-z0-9\-\']/', '', $descriptionarr);
                                $apptim[] = array('time' => $aptm, 'date' => $aprow['ap_fromdate'], 'title' => $apptitle, 'description' => $ap_description, 'addeddate' => $aprow['ap_addeddate']);
                            }
                        }

                        $duearray[] = array('duename' => "Appointments", 'dues' => mysql_num_rows($appintmt), 'title' => $apptitle, 'duetime' => $apptim);

                        $depndcy = mysql_query("SELECT * FROM en_bartheladlindex WHERE ba_resid='$resid' AND ba_isactive='0' ORDER BY ba_barthelindexid DESC LIMIT 1");
                        if(mysql_num_rows($depndcy) > 0)
                        {
                            $dpndrw = mysql_fetch_array($depndcy);
                            $scre = $dpndrw['ba_totalscore'];
                            $scrarr = explode('(', $scre);

                            if(isset($scrarr[1]))
                            {
                                $dependency = substr($scrarr[1], 0, -1);
                            }
                            else{
                                $dependency = "";
                            }
                        }
                        else{
                            $dependency = "";
                        }

                        $shwrdt = mysql_query("SELECT * FROM en_residentmorningcare WHERE rm_residentid='$resid' AND rm_isactive='0' ORDER BY resmorningcareid DESC");

                        if(mysql_num_rows($shwrdt) > 0)
                        {
                            $shwrval = 0;
                            while($shwrw = mysql_fetch_array($shwrdt))
                            {
                                $optionids = explode('#', $shwrw['rm_optionids']);
                                if($optionids[0] != '0' && $optionids[0] != '5')
                                {
                                /*if(date('Y-m-d', strtotime($shwrw['rm_updatedtime'])) < $today)
                                {
                                }
                                else{
                                }*/
                                $duearray[] = array('duename' => "Shower", 'lastdate' => $bwlrw['rm_updatedtime']);
                                $shwrval = 1;
                                break;
                            }
                        }
                        if($shwrval == 0)
                        {
                            $duearray[] = array('duename' => "Shower", 'lastdate' => "");
                        }
                    }
                    else{
                        $duearray[] = array('duename' => "Shower", 'lastdate' => "");
                    }
                    
                    $bwlmv = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' ORDER BY br_resbowelrecordid DESC LIMIT 1");
                    if(mysql_num_rows($bwlmv) > 0)
                    {
                        $bwlrw = mysql_fetch_array($bwlmv);
                        $lst3 = date('Y-m-d', strtotime('-2 days'));
                        if(date('Y-m-d', strtotime($bwlmv['br_recorddate'])) < $lst3)
                        {
                            $wdue = "Yes";
                        }
                        else{
                            $wdue = "No";
                        }
                        $duearray[] = array('duename' => "Bowel", 'lastdate' => $bwlrw['br_recorddate']);
                    }
                    else{
                        $duearray[] = array('duename' => "Bowel", 'lastdate' => "");
                    }
                    
                    $medal = mysql_query("SELECT * FROM en_resallergicmedicine a LEFT JOIN en_medicationdatabse b ON b.medicationid=a.am_medicationid WHERE a.am_resid='$resid' AND a.am_isactive='0'");
                    $medallcnt = mysql_num_rows($medal);
                    if($medallcnt > 0)
                    {
                        $medcnarr = array();
                        while($mdrow = mysql_fetch_array($medal))
                        {
                            $medcnarr[] = $mdrow['md_medicationname'];
                        }
                        $allergymedicine = implode(', ', $medcnarr);
                    }
                    else{
                        $allergymedicine = "";
                    }
                    
                    $obsr10 = mysql_query("SELECT ob_bloodglucose, ob_isbloodglucose, ob_glucosemeasured, ob_bloodglucosemg, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND (ob_isbloodglucose = 'no' OR (ob_bloodglucose !='' AND ob_isbloodglucose ='yes')) ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr10) > 0)
                    {
                        $obrow10 = mysql_fetch_array($obsr10);
                        if($obrow10['ob_isbloodglucose'] == 'yes')
                        {
                            $diebetic = $obrow10['ob_bloodglucose'];
                        }
                        else{
                            $diebetic = "No";
                        }
                    }
                    else{
                        $diebetic = "No";
                    }
                    
                    $trnsfr = mysql_query("SELECT * FROM en_patienttransferinfo WHERE pt_resid='$resid' AND pt_isactive='0' AND pt_readmission = '0' ORDER BY pt_patienttransferid DESC LIMIT 1");
                    if(mysql_num_rows($trnsfr) > 0)
                    {
                        $row10 = mysql_fetch_array($trnsfr);
                        if($row10['pt_isreturn'] != '1')
                        {
                            if($row10['pt_transfertype'] == 'Temporary transfer with family or similar')
                            {
                                $crntlocation = "Outing with family";
                            }
                            else if($row10['pt_transfertype']=='Deceased')
                            {
                                $crntlocation = "Deceased";
                            }
                            else if($row10['pt_transfertype']=='Transfer to Hospital or Advance care')
                            {
                                $crntlocation = "Transfer to Hospital or Advance care";
                            }
                            else if($row10['pt_transfertype']=='Discharge to home or other care home')
                            {
                                $crntlocation = "Discharged";
                            }
                            else{
                                $crntlocation = "Temporary transfer";
                            }
                        }
                        else{
                            $crntlocation = "Nursing Home";
                        }
                    }
                    else{
                        $crntlocation = "Nursing Home";
                    }
                    
                    $bplstdate = "";
                    $obsr1 = mysql_query("SELECT ob_bloodpressure, ob_bloodpressure2, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_bloodpressure !='' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr1) > 0)
                    {
                        $obrow1 = mysql_fetch_array($obsr1);
                        $bloodpressure1 = $obrow1['ob_bloodpressure'];
                        $bloodpressure2 = $obrow1['ob_bloodpressure2'];
                        $bptakendate = $obrow1['ob_updatedon'];
                        $bplstdate = $bptakendate;
                        
                        $bparr = array('bp1' => $bloodpressure1, 'bp2' => $bloodpressure2, 'date' => $bptakendate);
                    }
                    else{
                        $bparr = array('bp1' => "", 'bp2' => "", 'date' => "");
                    }
                    $pulselstdate = "";
                    $obsr2 = mysql_query("SELECT ob_pulse, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_pulse !='' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr2) > 0)
                    {
                        $obrow2 = mysql_fetch_array($obsr2);
                        $pulse = $obrow2['ob_pulse'];
                        $takendate = $obrow2['ob_updatedon'];
                        $pulselstdate = $takendate;
                        
                        $pulsearr = array('pulse' => $pulse, 'date' => $takendate);
                    }
                    else{
                        $pulsearr = array('pulse' => "", 'date' => "");
                    }
                    $templstdate = "";
                    $obsr3 = mysql_query("SELECT ob_temparature, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_temparature !='' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr3) > 0)
                    {
                        $obrow3 = mysql_fetch_array($obsr3);
                        $temparature = $obrow3['ob_temparature'];
                        $takendate = $obrow3['ob_updatedon'];
                        $templstdate = $takendate;
                        
                        $temparr = array('temparature' => $temparature, 'date' => $takendate);
                    }
                    else{
                        $temparr = array('temparature' => "", 'date' => "");
                    }
                    $spo2lstdate = "";
                    $obsr4 = mysql_query("SELECT ob_sp02, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_sp02 !='' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr4) > 0)
                    {
                        $obrow4 = mysql_fetch_array($obsr4);
                        $sp02 = $obrow4['ob_sp02'];
                        $takendate = $obrow4['ob_updatedon'];
                        $spo2lstdate = $takendate;
                        
                        $sp02arr = array('sp02' => $sp02, 'date' => $takendate);
                    }
                    else{
                        $sp02arr = array('sp02' => "", 'date' => "");
                    }
                    $weghtlstdate = "";
                    $obsr5 = mysql_query("SELECT ob_weight, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_weight !='' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr5) > 0)
                    {
                        $obrow5 = mysql_fetch_array($obsr5);
                        $weight = $obrow5['ob_weight'];
                        $takendate = $obrow5['ob_updatedon'];
                        $weghtlstdate = $takendate;
                        
                        $weightarr = array('weight' => $weight, 'date' => $takendate);
                    }
                    else{
                        $weightarr = array('weight' => "", 'date' => "");
                    }
                    $hightlstdate = "";
                    $obsr6 = mysql_query("SELECT ob_height, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_height !='' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr6) > 0)
                    {
                        $obrow6 = mysql_fetch_array($obsr6);
                        $height = $obrow6['ob_height'];
                        $takendate = $obrow6['ob_updatedon'];
                        $hightlstdate = $takendate;
                        
                        $heightarr = array('height' => $height, 'date' => $takendate);
                    }
                    else{
                        $heightarr = array('height' => "", 'date' => "");
                    }
                    $resprlstdate = "";
                    $obsr7 = mysql_query("SELECT ob_respiration, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_respiration !='' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr7) > 0)
                    {
                        $obrow7 = mysql_fetch_array($obsr7);
                        $respiration = $obrow7['ob_respiration'];
                        $takendate = $obrow7['ob_updatedon'];
                        $resprlstdate = $takendate;
                        
                        $respirearr = array('respiration' => $respiration, 'date' => $takendate);
                    }
                    else{
                        $respirearr = array('respiration' => "", 'date' => "");
                    }
                    $bmilstdate = "";
                    $obsr8 = mysql_query("SELECT ob_bmi, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_bmi !='' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr8) > 0)
                    {
                        $obrow8 = mysql_fetch_array($obsr8);
                        $bmi = $obrow8['ob_bmi'];
                        $takendate = $obrow8['ob_updatedon'];
                        $bmilstdate = $takendate;
                        
                        $bmiarr = array('bmi' => $bmi, 'date' => $takendate);
                    }
                    else{
                        $bmiarr = array('bmi' => "", 'date' => "");
                    }
                    $urinelstdate = "";
                    $obsr9 = mysql_query("SELECT ob_urinalysis, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_urinalysis !='' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr9) > 0)
                    {
                        $obrow9 = mysql_fetch_array($obsr9);
                        $urinalysis = $obrow9['ob_urinalysis'];
                        $takendate = $obrow9['ob_updatedon'];
                        $urinelstdate = $takendate;
                        
                        $urniearr = array('urinalysis' => $urinalysis, 'date' => $takendate);
                    }
                    else{
                        $urniearr = array('urinalysis' => "", 'date' => "");
                    }
                    $bldglclstdate = "";
                    $obsr10 = mysql_query("SELECT ob_bloodglucose, ob_glucosemeasured, ob_bloodglucosemg, ob_updatedon FROM en_resadmobservation WHERE resadmid='$resid' AND ob_bloodglucose !='' AND ob_isbloodglucose ='yes' ORDER BY readmobservationid DESC LIMIT 1");
                    if(mysql_num_rows($obsr10) > 0)
                    {
                        $obrow10 = mysql_fetch_array($obsr10);
                        $glucosemeasured = $obrow10['ob_glucosemeasured'];
                        $bloodglucose = $obrow10['ob_bloodglucose'];
                        $bloodglucosemg = $obrow10['ob_bloodglucosemg'];
                        $takendate = $obrow10['ob_updatedon'];
                        $bldglclstdate = $takendate;
                        
                        $glucosearr = array('glucosemeasured' => $glucosemeasured, 'bloodglucose' => $bloodglucose, 'bloodglucosemg' => $bloodglucosemg, 'date' => $takendate);
                    }
                    else{
                        $glucosearr = array('glucosemeasured' => "", 'bloodglucose' => "", 'bloodglucosemg' => "", 'date' => "");
                    }
                    $resobser = array('bloodpressure' => $bparr, 'pulse' => $pulsearr, 'temperature' => $temparr, 'sp02' => $sp02arr, 'weight' => $weightarr, 'height' => $heightarr, 'respiration' => $respirearr, 'bmi' => $bmiarr, 'urinalysis' => $urniearr, 'bloodglucose' => $glucosearr);
                    
                    
                    $remndrs = mysql_query("SELECT * FROM en_reminderdates WHERE DATE(rd_remdatetime)='$today' AND rd_resid='$resid'");
                    $bn = 0;
                    $bpduetime = array();

                    $pn = 0;
                    $plsduetime = array();

                    $tn = 0;
                    $tempduetime = array();

                    $sn = 0;
                    $spduetime = array();

                    $wn = 0;
                    $wghtduetime = array();

                    $hn = 0;
                    $hghtduetime = array();

                    $rn = 0;
                    $respduetime = array();

                    $bmn = 0;
                    $bmiduetime = array();

                    $un = 0;
                    $urinduetime = array();

                    $bgn = 0;
                    $bldglduetime = array();
                    if(mysql_num_rows($remndrs) > 0)
                    {
                        
                        while($remrow = mysql_fetch_array($remndrs))
                        {
                            $obsertypes = explode(',', $remrow['observationtypes']);
                            
                            if (in_array('Blood Pressure', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('Blood Pressure', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $bpduetime[] = array('time' => $takentime);
                                    $bn++;
                                }
                            }
                            
                            if (in_array('Pulse (Per Minute)', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('Pulse (Per Minute)', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $plsduetime[] = array('time' => $takentime);
                                    $pn++;
                                }
                            }
                            
                            if (in_array('Temperature', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('Temperature', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $tempduetime[] = array('time' => $takentime);
                                    $tn++;
                                }
                            }
                            
                            if (in_array('Sp02', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('Sp02', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $spduetime[] = array('time' => $takentime);
                                    $sn++;
                                }
                            }
                            
                            if (in_array('Weight(Kg)', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('Weight(Kg)', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $wghtduetime[] = array('time' => $takentime);
                                    $wn++;
                                }
                            }
                            
                            if (in_array('Height(Cms)', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('Height(Cms)', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $hghtduetime[] = array('time' => $takentime);
                                    $hn++;
                                }
                            }
                            
                            if (in_array('Respiration(Per Minute)', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('Respiration(Per Minute)', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $respduetime[] = array('time' => $takentime);
                                    $rn++;
                                }
                            }
                            
                            if (in_array('BMI', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('BMI', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $bmiduetime[] = array('time' => $takentime);
                                    $bmn++;
                                }
                            }
                            
                            if (in_array('Urinalysis', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('Urinalysis', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $urinduetime[] = array('time' => $takentime);
                                    $un++;
                                }
                            }
                            
                            if (in_array('Blood Glucose', $obsertypes)) {
                                $takenobservtion = explode(',', $remrow['rd_takenobservations']);
                                if (!in_array('Blood Glucose', $takenobservtion)) {
                                    $takentime = date('Y-m-d H:i', strtotime($remrow['rd_remdatetime']));
                                    $bldglduetime[] = array('time' => $takentime);
                                    $bgn++;
                                }
                            }
                        }
                        
                    }
                    $duearray[] = array('duename' => "Blood Pressure", 'dues' => $bn, 'duetime' => $bpduetime, 'lastdate' => $bplstdate);
                    $duearray[] = array('duename' => "Pulse (Per Minute)", 'dues' => $pn, 'duetime' => $plsduetime, 'lastdate' => $pulselstdate);
                    $duearray[] = array('duename' => "Temperature", 'dues' => $tn, 'duetime' => $tempduetime, 'lastdate' => $templstdate);
                    $duearray[] = array('duename' => "Sp02", 'dues' => $sn, 'duetime' => $spduetime, 'lastdate' => $spo2lstdate);
                    $duearray[] = array('duename' => "Weight", 'dues' => $wn, 'duetime' => $wghtduetime, 'lastdate' => $weghtlstdate);
                    $duearray[] = array('duename' => "Height", 'dues' => $hn, 'duetime' => $hghtduetime, 'lastdate' => $hightlstdate);
                    $duearray[] = array('duename' => "Respiration(Per Minute)", 'dues' => $rn, 'duetime' => $respduetime, 'lastdate' => $resprlstdate);
                    $duearray[] = array('duename' => "BMI", 'dues' => $bmn, 'duetime' => $bmiduetime, 'lastdate' => $bmilstdate);
                    $duearray[] = array('duename' => "Urinalysis", 'dues' => $un, 'duetime' => $urinduetime, 'lastdate' => $urinelstdate);
                    $duearray[] = array('duename' => "Blood Glucose", 'dues' => $bgn, 'duetime' => $bldglduetime, 'lastdate' => $bldglclstdate);
                    
                    if($assmntvrsn == '0')
                    {
                        $fuddet = mysql_query("SELECT * FROM en_adlfoodeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatanddrinkid DESC LIMIT 1");
                        if(mysql_num_rows($fuddet) > 0)
                        {
                            $row9 = mysql_fetch_array($fuddet);
                            $allergies = $row9['ed_allergies'];
                            $likes = $row9['ed_likes'];
                            $dislikes = $row9['ed_dislikes'];
                            $diettype = $row9['ed_typeofdiet'];
                            
                            $fudallergarr = explode(',', $allergies);
                            $fudallrgcnt = count($fudallergarr);
                            
                            if($fudallergarr != "")
                            {
                                $allergyfoods = implode(', ', $fudallergarr);
                            }
                            else{
                                $allergyfoods = "";
                            }
                        }
                        else{
                            $allergies = 'Nil';
                            $likes = 'Nil';
                            $dislikes = 'Nil';
                            $diettype = "";
                            
                            $fudallrgcnt = '0';
                            $allergyfoods = "";
                        }
                        
                        
                    }
                    else{
                        $fuddet = mysql_query("SELECT * FROM en_compeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatdrinkid DESC LIMIT 1");
                        if(mysql_num_rows($fuddet) > 0)
                        {
                            $row9 = mysql_fetch_array($fuddet);
                            
                            $allergies = $row9['ed_allergies'];
                            
                            $ed_likes = unserialize($row9['ed_foodlikes']);
                            if(isset($ed_likes['breaklikefoods']))
                            {
                                $likes = $ed_likes['breaklikefoods'];
                            }
                            else{
                                $likes = "Nil";
                            }
                            $ed_dislikes = unserialize($row9['ed_fooddislikes']);
                            if(isset($ed_dislikes['breakdislikefoods']))
                            {
                                $dislikes = $ed_dislikes['breakdislikefoods'];
                            }
                            else{
                                $dislikes = "Nil";
                            }
                            
                            $ed_dietrydetails = unserialize($row9['ed_dietrydetails']);
                            if(isset($ed_dietrydetails['choosendietary']))
                            {
                                $diettype = $ed_dietrydetails['choosendietary'];
                            }
                            else{
                                $diettype = "";
                            }
                            
                            $fudallergarr = explode('#', $allergies);
                            $fudallrgcnt = count($fudallergarr);
                            
                            if($fudallergarr != "")
                            {
                                $allergyfoods = implode(', ', $fudallergarr);
                            }
                            else{
                                $allergyfoods = "";
                            }
                        }
                        else{
                            $allergies = 'Nil';
                            $likes = 'Nil';
                            $dislikes = 'Nil';
                            $diettype = "";
                            $fudallrgcnt = '0';
                            $allergyfoods = "";
                        }
                    }
                    
                    
                    $ward = mysql_query("SELECT * FROM en_wardbeds wb INNER JOIN en_wards w ON wb.wardid=w.wardid  WHERE wb.residentid='$resid'");
                    $cathdet = mysql_query("SELECT cd_catheterdetailid FROM en_rescatheterdetails WHERE cd_resid='$resid' AND cd_isactive='0' ORDER BY cd_catheterdetailid DESC LIMIT 1");
                    if(mysql_num_rows($cathdet)>0)
                    {
                        $rescatheter = 1;
                    }
                    else{
                        $cathdet2 = mysql_query("SELECT em_cather FROM en_adlelimination WHERE em_resid='$resid' ORDER BY em_eliminationid DESC LIMIT 1");
                        if(mysql_num_rows($cathdet2)>0)
                        {
                            $row8 = mysql_fetch_array($cathdet2);
                            if($row8['em_cather'] == 'Yes')
                            {
                                $rescatheter = 1;
                            }
                            else{
                                $rescatheter = 0;
                            }
                        }
                        else{
                            $rescatheter = 0;
                        }
                    }
                    
                    $title = $row['res_title'];
                    $name =  preg_replace('/[^A-Za-z0-9\-\']/', '',$row['res_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row['res_surname']);
                    $dob = $row['res_dob'];
                    $date1 = date('Y-m-d', strtotime($dob));
                    $date2 = date('Y-m-d');
                    
                    $diff = abs(strtotime($date2) - strtotime($date1));
                    
                    $age = floor($diff / (365*60*60*24));
                    //$age = $row['res_age'];
                    $mar = $row['res_maritalstatus'];
                    $knwn = preg_replace('/[^A-Za-z0-9\-\']/', '', $row['res_surname']);
                    $status = $row['res_isactive'];
                    $rel = $row['res_relligion'];
                    $occupation = $row['res_occupation'];
                    $gms = $row['resad_gmsnumber'];
                    $wrdcnt = mysql_num_rows($ward);
                    if($wrdcnt>0)
                    {
                        $wrow = mysql_fetch_array($ward);
                        $wardname = preg_replace('/[^A-Za-z0-9\-\']/', '', $wrow['wardname']);
                        $bednumber = $wrow['bedno'];
                    }
                    else{
                        $wardname = "Not assigned";
                        $bednumber = "Not assigned";
                    }
                    $imgid = $row['residentadmissionid'];
                    $imgdet = mysql_query("SELECT * FROM en_resadmimage WHERE resadmid='$imgid' ORDER BY resadmimageid DESC LIMIT 1");
                    if(mysql_num_rows($imgdet) > 0)
                    {
                        $row1 = mysql_fetch_array($imgdet);
                        $rimg = "http://dev-enursing.demormc.com/public/upload/residentimage/".$row1['resadmimage'];
                        
                        //$rimg = "http://52.17.237.23/public/upload/residentimage/".$row1['resadmimage'];
                    }
                    else{
                        $rimg = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                        //$rimg = "http://52.17.237.23/assets/img/profile-pic.jpg";
                    }

                    /************** Resusitation Attempts start *****************/
                    $cprrr = "";
                    if($assmntvrsn == '0')
                    {
                        $dyngdet = mysql_query("SELECT dy_dyingid,dy_resusitationattempts FROM en_adldying WHERE dy_resid='$imgid' ORDER BY dy_dyingid DESC LIMIT 1");
                        if(mysql_num_rows($dyngdet) > 0)
                        {
                            $dyrow = mysql_fetch_array($dyngdet);
                            $cprrr = $dyrow['dy_resusitationattempts'];
                        }
                    }
                    else{
                        $dyngdet = mysql_query("SELECT esl_endstagelifeid,esl_advancedwishes FROM en_compendstageoflife WHERE esl_resid='$imgid' ORDER BY esl_endstagelifeid DESC LIMIT 1");
                        if(mysql_num_rows($dyngdet) > 0)
                        {
                            $dyrow = mysql_fetch_array($dyngdet);
                            $esl_advancedwishes = unserialize($dyrow['esl_advancedwishes']);
                            $cprrr = $esl_advancedwishes['cpr'];
                        }
                    }
                    if($cprrr == "")
                    {
                        $dyngdet = mysql_query("SELECT tes_cprnopulse FROM en_tempendstageoflife WHERE tes_resid='$imgid' ORDER BY tes_endstageid DESC LIMIT 1");
                        if(mysql_num_rows($dyngdet) > 0)
                        {
                            $dyrow = mysql_fetch_array($dyngdet);
                            if($dyrow['tes_cprnopulse'] == 'Attempt Resuscitation')
                            {
                                $cprrr = 'Yes';
                            }
                            else{
                                $cprrr = 'No';
                            }
                        }
                    }
                    /************** Resusitation Attempts  End *****************/
                    
                    $res[] = array('title' => $title, 'name' => ucwords(strtolower($name)), 'dob' => $dob, 'age' => $age, 'resimage' => $rimg, 'group' => $wardname, 'bednumber' => $bednumber, 'marital' => $mar, 'known' => ucwords(strtolower($knwn)), 'religion' => $rel, 'occupation' => $occupation, 'gmsnumber' => $gms, 'allergies' => $allergies, 'likes' => $likes, 'dislikes' => $dislikes, 'resid' => $resid, 'status' => $status, 'catheter' => $rescatheter, 'observation' => $resobser, 'diebetic' => $diebetic, 'currentlocation' => $crntlocation, 'diettype' => $diettype, 'dependency' => $dependency, 'foodallergycount' => $fudallrgcnt, 'foodallergies' => $allergyfoods, 'medicineallergycount' => $medallcnt, 'medicineallergies' => $allergymedicine, 'dues' => $duearray, 'resusitationattempts' => $cprrr);
                }
                $resdnt = json_encode($res);
                $success = array('status' => "success", "msg" => $res);
                $this->response($this->json($success), 200);  
                return true;
            }
        }
    }
    /************ resident pagination end **********/
    
    private function resnutritiondetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($resid != "" && $userid != "")
        {
            $adlvrsn = mysql_query("SELECT * FROM en_adlassessmentsettings");
            if(mysql_num_rows($adlvrsn)>0)
            {
                $row11 = mysql_fetch_array($adlvrsn);
                $assmntvrsn = $row11['as_assessmentversion'];
            }
            else{
                $assmntvrsn = "0";
            }
            
            if($assmntvrsn == '0')
            {
                $fuddet = mysql_query("SELECT * FROM en_adlfoodeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatanddrinkid DESC LIMIT 1");
                if(mysql_num_rows($fuddet) > 0)
                {
                    $row9 = mysql_fetch_array($fuddet);
                    $allergies = $row9['ed_allergies'];
                    $likes = $row9['ed_likes'];
                    $dislikes = $row9['ed_dislikes'];
                    $diettypedb = $row9['ed_typeofdiet'];
                    $takeanysupplements = $row9['ed_takeanysupplements'];
                    if($takeanysupplements == 'Yes')
                    {
                        $specifysupplements = $row9['ed_specifysupplements'];
                    }
                    else{
                        $specifysupplements = "";
                    }

                    $typedietarr = explode('#', $ed_typeofdiet);
                    $fudallergarr = explode(',', $allergies);

                    $fudallrgcnt = count($fudallergarr);

                    if($typedietarr != "")
                    {
                        $diettype = implode(', ', $typedietarr);;
                    }
                    else{
                        $diettype = "";
                    }

                    if($fudallergarr != "")
                    {
                        $allergyfoods = implode(', ', $fudallergarr);
                    }
                    else{
                        $allergyfoods = "";
                    }
                }
                else{
                    $allergies = 'Nil';
                    $likes = 'Nil';
                    $dislikes = 'Nil';
                    $diettype = "";
                    $takeanysupplements = "";
                    $specifysupplements = "";

                    $fudallrgcnt = '0';
                    $allergyfoods = "";
                }


            }
            else{
                $fuddet = mysql_query("SELECT * FROM en_compeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatdrinkid DESC LIMIT 1");
                if(mysql_num_rows($fuddet) > 0)
                {
                    $row9 = mysql_fetch_array($fuddet);

                    $allergies = $row9['ed_allergies'];

                    $ed_takeanysupplements = unserialize($row9['ed_takeanysupplements']);
                    $takeanysupplements = $ed_takeanysupplements['takensupplements'];
                    if($takeanysupplements == 'Yes')
                    {
                        $specifysupplements = $ed_takeanysupplements['specifiedsupplement'];
                    }
                    else{
                        $specifysupplements = "";
                    }

                    $ed_likes = unserialize($row9['ed_foodlikes']);
                    if(isset($ed_likes['breaklikefoods']))
                    {
                        $likes = $ed_likes['breaklikefoods'];
                    }
                    else{
                        $likes = "Nil";
                    }
                    $ed_dislikes = unserialize($row9['ed_fooddislikes']);
                    if(isset($ed_dislikes['breakdislikefoods']))
                    {
                        $dislikes = $ed_dislikes['breakdislikefoods'];
                    }
                    else{
                        $dislikes = "Nil";
                    }

                    $ed_dietrydetails = unserialize($row9['ed_dietrydetails']);
                        //echo $ed_dietrydetails['choosendietary'];
                    if(isset($ed_dietrydetails['choosendietary']))
                    {
                        if($ed_dietrydetails['choosendietary'] == 'modified fluids')
                        {
                            $diettype = $ed_dietrydetails['choosendietary'] . " (" . $ed_dietrydetails['modifiedfluidtype'] . ")";
                        }
                        else{
                            $diettype = $ed_dietrydetails['choosendietary'];
                        }
                    }
                    else{
                        $diettype = "";
                    }

                    $fudallergarr = explode('#', $allergies);
                    $fudallrgcnt = count($fudallergarr);

                    if($fudallergarr != "")
                    {
                        $allergyfoods = implode(', ', $fudallergarr);
                    }
                    else{
                        $allergyfoods = "";
                    }
                }
                else{
                    $allergies = 'Nil';
                    $likes = 'Nil';
                    $dislikes = 'Nil';
                    $diettype = "";
                    $fudallrgcnt = '0';
                    $allergyfoods = "";
                    $takeanysupplements = "";
                    $specifysupplements = "";
                }
            }

            $res = array('allergies' => $allergyfoods, 'dietary' => $diettype, 'takeanysupplements' => $takeanysupplements, 'specifysupplements' => $specifysupplements);
            $success = array('status' => "success", "msg" => $res);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "User id cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function resbirthdaydetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($resid != "" && $userid != "")
        {
            $adlvrsn = mysql_query("SELECT * FROM en_adlassessmentsettings");
            if(mysql_num_rows($adlvrsn)>0)
            {
                $row11 = mysql_fetch_array($adlvrsn);
                $assmntvrsn = $row11['as_assessmentversion'];
            }
            else{
                $assmntvrsn = "0";
            }
            
            if($assmntvrsn == '1')
            {
                $sclintr = mysql_query("SELECT * FROM en_compsocialinteraction WHERE si_resid='$resid' ORDER BY si_socialinteractionid DESC LIMIT 1");
                if(mysql_num_rows($sclintr) > 0)
                {
                    $sirow = mysql_fetch_array($sclintr);
                    $si_personaldetails = unserialize($sirow['si_personaldetails']);
                    $preferlanguage = $si_personaldetails['spokenlanguages'];
                    $birthplace = $si_personaldetails['placeofbirth'];
                    $nationality = $si_personaldetails['country'];
                }
                else{
                    $preferlanguage = "";
                    $birthplace = "";
                    $nationality = "";
                }
            }
            else{
                $preferlanguage = "";
                $birthplace = "";
                $nationality = "";
            }
            $redet = mysql_query("SELECT * FROM en_resbasicinfo a LEFT JOIN en_resaddress b ON b.residentadmid=a.residentadmissionid LEFT JOIN en_country c ON c.countryid=b.resad_country WHERE a.residentadmissionid='$resid'");
            $row = mysql_fetch_array($redet);
            $dob = $row['res_dob'];
            $age = date_diff(date_create($dob), date_create('today'))->y;
            $place = $row['resad_city'] . ", " . $row['resad_county'];
            
            $msg = array('dob' => $dob, 'age' => $age, 'languagepreferred' => $preferlanguage, 'nationality' => $nationality, 'place' => $birthplace, 'country' => $row['countryname']);
            
            $success = array('status' => "success", "msg" => $msg);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "User id cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function resappointments()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($resid != "" && $userid != "")
        {
            $today = date('Y-m-d');

            $appintmt = mysql_query("SELECT * FROM en_appointments WHERE ap_usertype='resident' AND ap_userid='$resid' AND ap_fromdate>='$today'");
            $apptim = array();
            if(mysql_num_rows($appintmt) > 0)
            {
                $apptim = array();
                while($aprow = mysql_fetch_array($appintmt))
                {
                    $aptm = date('H:i', strtotime($aprow['ap_fromtime']));
                    $apptim[] = array('time' => $aptm, 'date' => $aprow['ap_fromdate'], 'title' => $aprow['ap_appointmenttitle'], 'type' => $aprow['ap_appointmenttype']);
                }
            }
            $success = array('status' => "success", "msg" => $apptim);
            $this->response($this->json($success), 200);  
            return true;
            //$duearray[] = array('duename' => "Appointments", 'dues' => mysql_num_rows($appintmt), 'duetime' => $apptim);
        }
        else{
            $success = array('status' => "failed", "msg" => "User id cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function groupdetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $wards = mysql_query("SELECT * FROM en_wards");
        $wrdcnt = mysql_num_rows($wards);
        if($wrdcnt>0)
        {
            while($row = mysql_fetch_array($wards))
            {
                $wardid = $row['wardid'];
                $res = mysql_query("SELECT * FROM en_wardbeds WHERE wardid='$wardid' AND residentid IS NOT NULL");
                $rescount = mysql_num_rows($res);
                $assignnurs = $row['assignednurse'];
                $nurse = count(explode(',', $assignnurs));
                $carestaff = count(explode(',', $row['assignedcarestaff']));
                $wardname = preg_replace('/[^A-Za-z0-9\-\']/', '', $row['wardname']);
                $warddetails[] = array('wardname' => $wardname, 'noofbeds' => $row['noofbeds'], 'residents' => $rescount, 'nurses' => $nurse, 'carestaffs' => $carestaff);
            }
            $success = array('status' => "success", "msg" => $warddetails);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "No wards details");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function mygroups()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $wards = mysql_query("SELECT * FROM en_wards");
            $innarr = 1;
            $wrdcnt = mysql_num_rows($wards);
            if($wrdcnt>0)
            {
                while($row = mysql_fetch_array($wards))
                {
                    $assigneddons = explode(',', $row['assigneddons']);
                    $assignedcnm = explode(',', $row['assignedcnm']);
                    $assignednurse = explode(',', $row['assignednurse']);
                    $assignedcarestaff = explode(',', $row['assignedcarestaff']);
                    if((in_array($userid, $assigneddons)) || (in_array($userid, $assignedcnm)) || (in_array($userid, $assignednurse)) || (in_array($userid, $assignedcarestaff)))
                    {
                        $innarr = 1;
                        $wardid = $row['wardid'];
                        $res = mysql_query("SELECT * FROM en_wardbeds WHERE wardid='$wardid' AND residentid IS NOT NULL");
                        $rescount = mysql_num_rows($res);
                        $assignnurs = $row['assignednurse'];
                        $nurse = count(explode(',', $assignnurs));
                        $carestaff = count(explode(',', $row['assignedcarestaff']));
                        $wrdnmae = preg_replace('/[^A-Za-z0-9\-\']/', '',$row['wardname']);
                        $warddetails[] = array('wardname' => $wrdnmae, 'noofbeds' => $row['noofbeds'], 'residents' => $rescount, 'nurses' => $nurse, 'carestaffs' => $carestaff);
                    }
                }
                if(isset($warddetails))
                {
                    $success = array('status' => "success", "msg" => $warddetails);
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $success = array('status' => "failed", "msg" => "No groups assigned.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No details available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "User id cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function residentoptions()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $options1 = mysql_query("SELECT * FROM en_residentoptions WHERE ro_status='0'");
        $optcnt = mysql_num_rows($options1);
        if($optcnt>0)
        {
            while($row = mysql_fetch_array($options1))
            {
                $rpid = $row['resoptionid'];
                $options[] = array('optionid' => $row['resoptionid'], 'option' => $row['ro_options']);
                //$options = array('optionid' => $optcnt);
            }
            $success = array('status' => "success", "msg" => $options);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "No resident options");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function dailymorningoptions()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $tabs = mysql_query("SELECT * FROM en_dailymorningoptions WHERE ot_status='0'");
        $tabcnt = mysql_num_rows($tabs);
        if($tabcnt>0)
        {
            while($row1 = mysql_fetch_array($tabs))
            {
                $suboptions = array();
                $spid = $row1['optiontabid'];
                $subs = mysql_query("SELECT * FROM en_dailymorningsuboptions WHERE optiontabid='".$spid."' AND so_status='0'");
                if(mysql_num_rows($subs)>0)
                {
                    while($row2 = mysql_fetch_array($subs))
                    {
                        $suboptions[] = array('subid' => $row2['suboptionid'], 'subtext' => $row2['so_tabsuboptions']);
                    }
                }
                $taboptions[] = array('tabid' => $row1['optiontabid'], 'tabname' => $row1['ot_suboptions'], 'suboptions' => $suboptions);
            }
            //$taboptions[] = array('tabid' => "8", 'tabname' => 'Consolidate', 'suboptions' => "");
            //print_r($taboptions); 
            $success = array('status' => "success", "msg" => $taboptions);
            $this->response($this->json($success), 200);  
            return true;        
        }
        else{
            $success = array('status' => "failed", "msg" => "No daily morning care options");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function resdailymorning()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        
        $resid = $this->_request['resid'];
        $options = $this->_request['options'];
        $comments = $this->_request['comments'];
        $assistedby = $this->_request['assistedby'];
        $updatedby = $this->_request['updatedby'];
        $priority = $this->_request['priority'];
        $deviceid = $this->_request['deviceid'];
        $isoffline = $this->_request['isoffline'];
        if($isoffline == '1')
        {
            $offlne = "1";
            $curdate=date('Y-m-d H:i:s', strtotime($this->_request['updateddate']));
        }
        else{
            $offlne = "0";
            $curdate=date('Y-m-d H:i:s');
        }
        if($resid != "" && $options != "" && $updatedby !="" )
        {
            $insrt=mysql_query("INSERT INTO en_residentmorningcare(rm_residentid, rm_optionids, rm_comments, rm_updatedby, rm_updatedtime, rm_priority, rm_assistedby, rm_isoffline) VALUES('$resid', '$options', '$comments', '$updatedby', '$curdate', '$priority', '$assistedby', '$offlne')");
            if($insrt)
            {
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Daily Morning Care'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $regularreport = array();
                    $mediumreport = array();
                    $optarray = explode('#', $options);
                    if($optarray)
                    {
                        foreach ($optarray as $opval) {
                            $suboptns = mysql_query("SELECT * FROM en_dailymorningsuboptions a LEFT JOIN en_dailymorningoptions b ON b.optiontabid=a.optiontabid WHERE a.suboptionid='$opval'");
                            if (mysql_num_rows($suboptns) > 0) {
                                while($subval = mysql_fetch_array($suboptns)) {
                                     //if ($subval['ot_suboptions'] == 'Personal Hygiene') {
                                    if($subval['so_tabsuboptions'] == 'Refused')
                                    {
                                        $mediumreport[] = $subval['ot_suboptions'] .': ' . $subval['so_tabsuboptions'];
                                    }
                                    else{
                                        $regularreport[] = $subval['ot_suboptions'] . ': ' . $subval['so_tabsuboptions'];
                                    }
                                     //}
                                }
                            }
                        }

                        if(!empty($regularreport)){
                            if($comments != "")
                            {
                                $regularreport[] = 'Comments: ' . $comments;
                            }
                            $reportdata = "Activities of daily living - " . implode(', ', $regularreport);
                            $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$updatedby', '$curdate', '$resid', 'regular', '1', '1')");
                        }
                        if(!empty($mediumreport)){
                            if($comments != "")
                            {
                                $mediumreport[] = 'Comments: ' . $comments;
                            }
                            $reportdata = "Activities of daily living - " . implode(', ', $mediumreport);
                            $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$updatedby', '$curdate', '$resid', 'minor', '1', '1')");
                        }

                    }
                }
                
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', 'daily morning care', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully updated daily moring care");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in updating database");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addmultidailycare()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        
        $optionswithresids = $this->_request['optionswithresids'];
        $comments = $this->_request['comments'];
        $assistedby = $this->_request['assistedby'];
        $updatedby = $this->_request['updatedby'];
        $priority = $this->_request['priority'];
        $deviceid = $this->_request['deviceid'];
        $curdate=date('Y-m-d H:i:s');
        if($optionswithresids != "" && $updatedby !="" )
        {
            $k = 0;
            $optionidarr = explode('_', $optionswithresids);
            $commentarr = explode('#', $comments);
            foreach($optionidarr as $optnrsval)
            {
                $optnar = explode('@', $optnrsval);
                if(isset($optnar[1]))
                {
                    $resid = $optnar[0];
                    $options = $optnar[1];
                    
                    $insrt=mysql_query("INSERT INTO en_residentmorningcare(rm_residentid, rm_optionids, rm_comments, rm_updatedby, rm_updatedtime, rm_priority, rm_assistedby) VALUES('$resid', '$options', '$commentarr[$k]', '$updatedby', '$curdate', '$priority', '$assistedby')");
                    
                    $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Daily Morning Care'");
                    $dlrow = mysql_fetch_array($rprt);
                    if($dlrow['to_isdailyreport'] == '1')
                    {
                        $regularreport = array();
                        $mediumreport = array();
                        $optarray = explode('#', $options);
                        if($optarray)
                        {
                            foreach ($optarray as $opval) {
                                $suboptns = mysql_query("SELECT * FROM en_dailymorningsuboptions a LEFT JOIN en_dailymorningoptions b ON b.optiontabid=a.optiontabid WHERE a.suboptionid='$opval'");
                                if (mysql_num_rows($suboptns) > 0) {
                                    while($subval = mysql_fetch_array($suboptns)) {
                                         //if ($subval['ot_suboptions'] == 'Personal Hygiene') {
                                        if($subval['so_tabsuboptions'] == 'Refused')
                                        {
                                            $mediumreport[] = $subval['ot_suboptions'] .': ' . $subval['so_tabsuboptions'];
                                        }
                                        else{
                                            $regularreport[] = $subval['ot_suboptions'] . ': ' . $subval['so_tabsuboptions'];
                                        }
                                         //}
                                    }
                                }
                            }

                            if(!empty($regularreport)){
                                if($commentarr[$k] != "")
                                {
                                    $regularreport[] = 'Comments: ' . $commentarr[$k];
                                }
                                $reportdata = "Activities of daily living - " . implode(', ', $regularreport);
                                $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$updatedby', '$curdate', '$resid', 'regular', '1', '1')");
                            }
                            if(!empty($mediumreport)){
                                if($commentarr[$k] != "")
                                {
                                    $mediumreport[] = 'Comments: ' . $commentarr[$k];
                                }
                                $reportdata = "Activities of daily living - " . implode(', ', $mediumreport);
                                $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$updatedby', '$curdate', '$resid', 'minor', '1', '1')");
                            }

                        }
                    }
                }
                
                $k++;
            }
            
            if($insrt)
            {
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, logtime, device, deviceid) VALUES('$updatedby', 'updated', 'daily morning care', '1', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully updated daily moring care");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in updating database");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getresmorningcare()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid!="")
        {
            $mrngcare = mysql_query("SELECT * FROM en_residentmorningcare WHERE rm_residentid='$resid' AND rm_isactive='0' ORDER BY resmorningcareid DESC");
            if(mysql_num_rows($mrngcare)>0)
            {
                while($row = mysql_fetch_array($mrngcare))
                {
                    $carevalues = "";
                    $options = $row['rm_optionids'];
                    $k = 1;
                    $optarray = explode('#', $options);
                    $opidarr = array();
                    $opval11arr = array();
                    foreach($optarray as $opval)
                    {
                        
                        $optionval="";              
                        
                        if($k == 1 && $opval == 0)
                        {
                            $mrnoption = "Personal Hygiene";
                        }else if($k == 2 && $opval == 0)
                        {
                            $mrnoption = "Oral Hygiene";
                        }else if($k == 3 && $opval == 0)
                        {
                            $mrnoption = "Continence Wear Provided";
                        }else if($k == 4 && $opval == 0)
                        {
                            $mrnoption = "Outer Clothing Changed";
                        }else if($k == 5 && $opval == 0)
                        {
                            $mrnoption = "Underwear Changed";
                        }else if($k == 6 && $opval == 0)
                        {
                            $mrnoption = "Bedlinen Changed";
                        }else if($k == 7 && $opval == 0)
                        {
                            $mrnoption = "Bowel Movement";
                        }else if($k == 8 && $opval == 0)
                        {
                            $mrnoption = "Pad/P.U.";
                            if($opval == '0,0')
                            {
                                $opval = '0';
                            }
                        }else if($k == 9 && $opval == 0)
                        {
                            $mrnoption = "Shaved";
                        }else{
                            
                            /*if($mrnoption == "Pad/P.U.")
                            {*/
                                $optvalar = array();
                                $opvalarr = explode(',', $opval);
                                $opval1 = $opvalarr[0];
                                if(isset($opvalarr[1]))
                                {
                                    $opval2 = $opvalarr[1];
                                }
                                else{
                                    $opval2 = "";
                                }
                                $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions ds INNER JOIN en_dailymorningoptions do ON ds.optiontabid=do.optiontabid WHERE suboptionid='$opval1'");
                                $row2 = mysql_fetch_array($optns);
                                $optns2 = mysql_query("SELECT * FROM en_dailymorningsuboptions ds INNER JOIN en_dailymorningoptions do ON ds.optiontabid=do.optiontabid WHERE suboptionid='$opval2'");
                                
                                $optvalar[] = $row2['so_tabsuboptions'];
                                if(mysql_num_rows($optns2) > 0)
                                {
                                    $row3 = mysql_fetch_array($optns2);
                                    $optvalar[] = $row3['so_tabsuboptions'];
                                }
                                $optionval = implode(', ', $optvalar);

                                $mrnoption = $row2['ot_suboptions'];
                                if($mrnoption == 'Pad/P.U.')
                                {
                                    $opidarr[] = $opval;
                                    $opval11arr[] = $optionval;
                                    $opval = implode(',', $opidarr);
                                    if($opval == '0,0')
                                    {
                                        $opval = '0';
                                    }
                                    $optionval = implode(',', $opval11arr);
                                }

                            /*}
                            else{
                                $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions ds INNER JOIN en_dailymorningoptions do ON ds.optiontabid=do.optiontabid WHERE suboptionid='$opval'");
                                $row2 = mysql_fetch_array($optns);
                                $optionval = $row2['so_tabsuboptions'];
                            }*/
                        }
                        $carevalues[] = array('optionid' => $opval,'option' => $mrnoption, 'opval' => $optionval);
                        $k++;
                    }
                    $usid = $row['rm_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    
                    $assistedbyar = explode(',',$row['rm_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    $result[] = array('resid' => $resid, 'updatedby' => $empname, 'updatedtime' => $row['rm_updatedtime'], 'comments' => $row['rm_comments'], 'careoptions' => $carevalues, 'assistedby' => $assistenurse);
                }
                
                $success = array('status' => "success", "msg" => $result);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No records found");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Resident id cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getresmorningcarepage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        if($resid!="")
        {
            $startno = ($page - 1)*50;
            $limit = 50;
            

            $mrngcare = mysql_query("SELECT * FROM en_residentmorningcare WHERE rm_residentid='$resid' AND rm_isactive='0' ORDER BY resmorningcareid DESC LIMIT $startno, $limit");
            if(mysql_num_rows($mrngcare)>0)
            {
                $count1 = mysql_query("SELECT resmorningcareid FROM en_residentmorningcare WHERE rm_residentid='$resid' AND rm_isactive='0'");
                $count = mysql_num_rows($count1);
                $pagecount = ceil($count/50);
                while($row = mysql_fetch_array($mrngcare))
                {
                    $carevalues = "";
                    $options = $row['rm_optionids'];
                    $k = 1;
                    $optarray = explode('#', $options);
                    $opidarr = array();
                    $opval11arr = array();
                    foreach($optarray as $opval)
                    {
                        
                        $optionval="";              
                        
                        if($k == 1 && $opval == 0)
                        {
                            $mrnoption = "Personal Hygiene";
                        }else if($k == 2 && $opval == 0)
                        {
                            $mrnoption = "Oral Hygiene";
                        }else if($k == 3 && $opval == 0)
                        {
                            $mrnoption = "Continence Wear Provided";
                        }else if($k == 4 && $opval == 0)
                        {
                            $mrnoption = "Outer Clothing Changed";
                        }else if($k == 5 && $opval == 0)
                        {
                            $mrnoption = "Underwear Changed";
                        }else if($k == 6 && $opval == 0)
                        {
                            $mrnoption = "Bedlinen Changed";
                        }else if($k == 7 && $opval == 0)
                        {
                            $mrnoption = "Bowel Movement";
                        }else if($k == 8 && $opval == 0)
                        {
                            $mrnoption = "Pad/P.U.";
                            if($opval == '0,0')
                            {
                                $opval = '0';
                            }
                        }else if($k == 9 && $opval == 0)
                        {
                            $mrnoption = "Shaved";
                        }else{
                            
                            /*if($mrnoption == "Pad/P.U.")
                            {*/
                                $optvalar = array();
                                $opvalarr = explode(',', $opval);
                                $opval1 = $opvalarr[0];
                                if(isset($opvalarr[1]))
                                {
                                    $opval2 = $opvalarr[1];
                                }
                                else{
                                    $opval2 = "";
                                }
                                $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions ds INNER JOIN en_dailymorningoptions do ON ds.optiontabid=do.optiontabid WHERE suboptionid='$opval1'");
                                $row2 = mysql_fetch_array($optns);
                                $optns2 = mysql_query("SELECT * FROM en_dailymorningsuboptions ds INNER JOIN en_dailymorningoptions do ON ds.optiontabid=do.optiontabid WHERE suboptionid='$opval2'");
                                
                                $optvalar[] = $row2['so_tabsuboptions'];
                                if(mysql_num_rows($optns2) > 0)
                                {
                                    $row3 = mysql_fetch_array($optns2);
                                    $optvalar[] = $row3['so_tabsuboptions'];
                                }
                                $optionval = implode(', ', $optvalar);

                                $mrnoption = $row2['ot_suboptions'];
                                if($mrnoption == 'Pad/P.U.')
                                {
                                    $opidarr[] = $opval;
                                    $opval11arr[] = $optionval;
                                    $opval = implode(',', $opidarr);
                                    if($opval == '0,0')
                                    {
                                        $opval = '0';
                                    }
                                    $optionval = implode(',', $opval11arr);
                                }

                            /*}
                            else{
                                $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions ds INNER JOIN en_dailymorningoptions do ON ds.optiontabid=do.optiontabid WHERE suboptionid='$opval'");
                                $row2 = mysql_fetch_array($optns);
                                $optionval = $row2['so_tabsuboptions'];
                            }*/
                        }
                        $carevalues[] = array('optionid' => $opval,'option' => $mrnoption, 'opval' => $optionval);
                        $k++;
                    }
                    $usid = $row['rm_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name1));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    
                    $assistedbyar = explode(',',$row['rm_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                            $assistenursear[] = ucwords(strtolower($name1));
                            //$assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    $result[] = array('resid' => $resid, 'updatedby' => $empname, 'updatedtime' => $row['rm_updatedtime'], 'comments' => $row['rm_comments'], 'careoptions' => $carevalues, 'assistedby' => $assistenurse);
                }
                
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $result);

                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No records found");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Resident id cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getresmedication()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $curdate=date('Y-m-d');
        if($resid != "")
        {
            
            /*********************************        Long Term Mecdication checking        *************************************************/
            $longtrmmed = mysql_query("");
            
            //echo($this->db->last_query());
            if($longtrmmed)
            {
                //echo count($longtrmmed);
                foreach($longtrmmed as $lngmd)
                {
                    $todymed = 0;
                    $currentdate = date('Y-m-d');
                    $admmedid = $lngmd->addmedicineid;
                    $daysofweek = explode(',', $lngmd->am_daysofweek);

                    $timestart = date('H:i:s', strtotime($lngmd->am_timestart));
                    $intervaltime = $lngmd->am_intervaltime;
                    
                    $medicinefrequency = $lngmd->am_medicinefrequency;
                    
                    $wday = date("l");
                    foreach ($daysofweek as $dayval) {
                        if($wday == $dayval) {
                            $todymed = 1;
                        }
                    }
                    if($todymed == 1)
                    {
                        $longtermtodyadmin = $this->admmed->getlongtermadminstermed($admmedid);
                        if(!$longtermtodyadmin)
                        {
                            if(($medicinefrequency == '6 HRLY') || ($medicinefrequency == 'Interval'))
                            {
                                if($medicinefrequency == 'Interval')
                                {
                                    $hrs = date('H', strtotime($intervaltime));
                                    $mnts = date('i', strtotime($intervaltime));
                                }
                                else{
                                    $hrs = '06';
                                    $mnts = '00';
                                }
                                
                                $breakfast = null;
                                $lunch = null;
                                $dinner = null;
                                $bed = null;
                                $other = null;
                                $othertime = null;
                                $other2 = null;
                                $othertime2 = null;
                                $other3 = null;
                                $othertime3 = null;
                                $other4 = null;
                                $othertime4 = null;
                                
                                $prelongtermmed = $this->admmed->getlongtermpreviousmed($admmedid);
                                if(!$prelongtermmed)
                                {
                                    $starttime = $currentdate . " " . $timestart;
                                }
                                else{
                                    $predate = date('Y-m-d', strtotime($starttime . " -1 days"));
                                    if($prelongtermmed[0]->adm_other4timeofday != NULL)
                                    {
                                        $lastdatetime = $predate. " " . $prelongtermmed[0]->adm_other4timeofday;
                                        $startdate = date('Y-m-d H:i:s', strtotime($lastdatetime . " +".$hrs." hours +".$mnts." minutes"));
                                    }
                                    else if(($prelongtermmed[0]->adm_bed == 1) && (date('H:i:s', strtotime('21:30'))>$prelongtermmed[0]->adm_other3timeofday)){
                                        
                                        $lastdatetime = $predate. " " . date('H:i:s', strtotime('21:30'));
                                        $startdate = date('Y-m-d H:i:s', strtotime($lastdatetime . " +".$hrs." hours +".$mnts." minutes"));
                                        
                                    }
                                    else if($prelongtermmed[0]->adm_other3timeofday != NULL)
                                    {
                                        $lastdatetime = $predate. " " . $prelongtermmed[0]->adm_other3timeofday;
                                        $startdate = date('Y-m-d H:i:s', strtotime($lastdatetime . " +".$hrs." hours +".$mnts." minutes"));
                                    }
                                    else if($prelongtermmed[0]->adm_other2timeofday != NULL)
                                    {
                                        $lastdatetime = $predate. " " . $prelongtermmed[0]->adm_other2timeofday;
                                        $startdate = date('Y-m-d H:i:s', strtotime($lastdatetime . " +".$hrs." hours +".$mnts." minutes"));
                                    }
                                    else if($prelongtermmed[0]->adm_othertimeofday != NULL)
                                    {
                                        $lastdatetime = $predate. " " . $prelongtermmed[0]->adm_othertimeofday;
                                        $startdate = date('Y-m-d H:i:s', strtotime($lastdatetime . " +".$hrs." hours +".$mnts." minutes"));
                                    }
                                    else{
                                        $starttime = $currentdate . $hrs.":".$mnts.":00.000000";
                                    }
                                }
                                $k = 0;
                                while (date('Y-m-d', strtotime($starttime)) <= $currentdate) {
                                    $recordtime = date('H:i', strtotime($starttime));
                                      //echo $starttime ." - " . $recordtime ."<br/>";
                                    if ($recordtime == '7:30') {
                                        $breakfast = 1;
                                    } else if ($recordtime == '13:30') {
                                        $lunch = 1;
                                    } else if ($recordtime == '18:30') {
                                        $dinner = 1;
                                    } else if ($recordtime == '21:30') {
                                        $bed = 1;
                                    } else {
                                        if ($k == 0) {
                                            $other = 1;
                                            $othertime = date('H:i:s', strtotime($recordtime));
                                        } else if ($k == 1) {
                                            $other2 = 1;
                                            $othertime2 = date('H:i:s', strtotime($recordtime));
                                        } else if ($k == 2) {
                                            $other3 = 1;
                                            $othertime3 = date('H:i:s', strtotime($recordtime));
                                        } else {
                                            $other4 = 1;
                                            $othertime4 = date('H:i:s', strtotime($recordtime));
                                        }
                                    }
                                    $k++;
                                    $starttime = date("Y-m-d H:i:s", strtotime($starttime . " +".$hrs." hours +".$mnts." minutes"));
                                }

                                $insrt = $this->admmed->insert(array(
                                    'residentmedicineid' => $admmedid,
                                    'adm_administationdate' => $todaydate,
                                    'adm_breakfast' => $breakfast,
                                    'adm_lunch' => $lunch,
                                    'adm_dinner' => $dinner,
                                    'adm_bed' => $bed,
                                    'adm_other' => $other,
                                    'adm_othertimeofday' => $othertime,
                                    'adm_other2' => $other2,
                                    'adm_other2timeofday' => $othertime2,
                                    'adm_other3' => $other3,
                                    'adm_other3timeofday' => $othertime3,
                                    'adm_other4' => $other4,
                                    'adm_other4timeofday' => $othertime4
                                ));
                            }
                            else{
                                $othertime = $lngmd->am_othertime;
                                $other2time = $lngmd->am_other2time;
                                $other3time = $lngmd->am_other3time;
                                $other4time = $lngmd->am_other4time;
                                
                                $insrt = $this->admmed->insert(array(
                                    'residentmedicineid' => $admmedid,
                                    'adm_administationdate' => $todaydate,
                                    'adm_breakfast' => $lngmd->am_breakfast,
                                    'adm_lunch' => $lngmd->am_lunch,
                                    'adm_dinner' => $lngmd->am_dinner,
                                    'adm_bed' => $lngmd->am_bed,
                                    'adm_other' => $lngmd->am_other,
                                    'adm_othertimeofday' => $othertime,
                                    'adm_other2' => $lngmd->am_other2,
                                    'adm_other2timeofday' => $other2time,
                                    'adm_other3' => $lngmd->am_other3,
                                    'adm_other3timeofday' => $other3time,
                                    'adm_other4' => $lngmd->am_other4,
                                    'adm_other4timeofday' => $other4time
                                ));
                            }
                        }
                    }
                }
            }
            /************************************ Long term medication checking end ****************************************/
            
            $mrnng = array();
            $lunch = array();
            $dinner = array();
            $bed = array();
            $other = array();
            $other2 = array();
            $other3 = array();
            $other4 = array();
            $mrngmedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_breakfast !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($mrngmedication)>0)
            {
                while($row1 = mysql_fetch_array($mrngmedication))
                {
                    if($row1['adm_breakfastrecord'] != "")
                    {
                        $take = $row1['adm_breakfastrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $mrnng[] = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => "7:30", 'afterorbeforefood' => $row1['am_730beforefud'], 'record' => $take, 'startdate' => $row1['am_startdate'], 'enddate' => $row1['am_enddate'], 'medtype' => "7:30", 'notes' => $row1['adm_breakfastnote']);
                }
            }
            else{
                $mrnng = "No medication";
            }
            
            $lunchmedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_lunch !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($lunchmedication)>0)
            {
                while($row2 = mysql_fetch_array($lunchmedication))
                {
                    if($row2['adm_lunchrecord'] != "")
                    {
                        $take = $row2['adm_lunchrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $lunch[] = array('medid' => $row2['medadministrationid'], 'medicine' => $row2['md_medicationname'], 'dosage' => $row2['am_dosage'], 'time' => "13:30", 'afterorbeforefood' => $row2['am_1330beforefud'], 'record' => $take, 'startdate' => $row2['am_startdate'], 'enddate' => $row2['am_enddate'], 'medtype' => "13:30", 'notes' => $row2['adm_lunchnote']);
                }
            }
            else{
                $lunch = "No medication";
            }
            
            $dinnermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_dinner !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($dinnermedication)>0)
            {
                while($row3 = mysql_fetch_array($dinnermedication))
                {
                    if($row3['adm_dinnerrecord'] != "")
                    {
                        $take = $row3['adm_dinnerrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $dinner[] = array('medid' => $row3['medadministrationid'], 'medicine' => $row3['md_medicationname'], 'dosage' => $row3['am_dosage'], 'time' => "18:30", 'afterorbeforefood' => $row3['am_1830beforefud'], 'record' => $take, 'startdate' => $row3['am_startdate'], 'enddate' => $row3['am_enddate'], 'medtype' => "18:30", 'notes' => $row3['adm_dinnernote']);
                }
            }
            else{
                $dinner = "No medication";
            }
            
            $bedmedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_bed !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($bedmedication)>0)
            {
                while($row4 = mysql_fetch_array($bedmedication))
                {
                    if($row4['adm_bedrecord'] != "")
                    {
                        $take = $row4['adm_bedrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $bed[] = array('medid' => $row4['medadministrationid'], 'medicine' => $row4['md_medicationname'], 'dosage' => $row4['am_dosage'], 'time' => "21:30", 'afterorbeforefood' => $row4['am_2130beforefud'], 'record' => $take, 'startdate' => $row4['am_startdate'], 'enddate' => $row4['am_enddate'], 'medtype' => "21:30", 'notes' => $row4['adm_bednote']);
                }
            }
            else{
                $bed = "No medication";
            }
            
            $othermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_other !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($othermedication)>0)
            {
                while($row5 = mysql_fetch_array($othermedication))
                {
                    if($row5['adm_otherrecord'] != "")
                    {
                        $take = $row5['adm_otherrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $other[] = array('medid' => $row5['medadministrationid'], 'medicine' => $row5['md_medicationname'], 'dosage' => $row5['am_dosage'], 'time' => date('H:i', strtotime($row5['adm_othertimeofday'])), 'afterorbeforefood' => $row5['am_otherbeforefud'], 'record' => $take, 'startdate' => $row5['am_startdate'], 'enddate' => $row5['am_enddate'], 'medtype' => "other", 'notes' => $row5['adm_othernote']);
                }
            }
            else{
                $other = "No medication";
            }
            
            $othermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_other2 !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($othermedication)>0)
            {
                while($row5 = mysql_fetch_array($othermedication))
                {
                    if($row5['adm_other2record'] != "")
                    {
                        $take = $row5['adm_other2record'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $other2[] = array('medid' => $row5['medadministrationid'], 'medicine' => $row5['md_medicationname'], 'dosage' => $row5['am_dosage'], 'time' => date('H:i', strtotime($row5['adm_other2timeofday'])), 'afterorbeforefood' => $row5['am_other2beforefud'], 'record' => $take, 'startdate' => $row5['am_startdate'], 'enddate' => $row5['am_enddate'], 'medtype' => "other2", 'notes' => $row5['adm_other2note']);
                }
            }
            else{
                $other2 = "No medication";
            }
            
            $othermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_other3 !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($othermedication)>0)
            {
                while($row5 = mysql_fetch_array($othermedication))
                {
                    if($row5['adm_other3record'] != "")
                    {
                        $take = $row5['adm_other3record'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $other3[] = array('medid' => $row5['medadministrationid'], 'medicine' => $row5['md_medicationname'], 'dosage' => $row5['am_dosage'], 'time' => date('H:i', strtotime($row5['adm_other3timeofday'])), 'afterorbeforefood' => $row5['am_other3beforefud'], 'record' => $take, 'startdate' => $row5['am_startdate'], 'enddate' => $row5['am_enddate'], 'medtype' => "other3", 'notes' => $row5['adm_other3note']);
                }
            }
            else{
                $other3 = "No medication";
            }
            
            $othermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_other4 !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($othermedication)>0)
            {
                while($row5 = mysql_fetch_array($othermedication))
                {
                    if($row5['adm_other4record'] != "")
                    {
                        $take = $row5['adm_other4record'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $other4[] = array('medid' => $row5['medadministrationid'], 'medicine' => $row5['md_medicationname'], 'dosage' => $row5['am_dosage'], 'time' => date('H:i', strtotime($row5['adm_other4timeofday'])), 'afterorbeforefood' => $row5['am_other4beforefud'], 'record' => $take, 'startdate' => $row5['am_startdate'], 'enddate' => $row5['am_enddate'], 'medtype' => "other4", 'notes' => $row5['adm_other4note']);
                }
            }
            else{
                $other4 = "No medication";
            }
            
            $result = array('7:30medication' => $mrnng, '13:30medication' => $lunch, '18:30medication' => $dinner, '21:30medication' => $bed, 'othermedication' => $other, 'other2medication' => $other2, 'other3medication' => $other3, 'other4medication' => $other4);
            $success = array('status' => "success", "msg" => $result);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Resident id cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getresmedicationother()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $curdate=date('Y-m-d');
        if($resid != "")
        {
            $mrnng = array();
            $lunch = array();
            $dinner = array();
            $bed = array();
            $other = array();
            $other2 = array();
            $other3 = array();
            $other4 = array();
            $mrngmedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_breakfast !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($mrngmedication)>0)
            {
                while($row1 = mysql_fetch_array($mrngmedication))
                {
                    if($row1['adm_breakfastrecord'] != "")
                    {
                        $take = $row1['adm_breakfastrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $mrnng[] = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => "7:30", 'afterorbeforefood' => $row1['am_730beforefud'], 'record' => $take, 'startdate' => $row1['am_startdate'], 'enddate' => $row1['am_enddate'], 'medtype' => "7:30", 'notes' => $row1['adm_breakfastnote']);
                }
            }
            else{
                $mrnng = "No medication";
            }
            
            $lunchmedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_lunch !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($lunchmedication)>0)
            {
                while($row2 = mysql_fetch_array($lunchmedication))
                {
                    if($row2['adm_lunchrecord'] != "")
                    {
                        $take = $row2['adm_lunchrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $lunch[] = array('medid' => $row2['medadministrationid'], 'medicine' => $row2['md_medicationname'], 'dosage' => $row2['am_dosage'], 'time' => "13:30", 'afterorbeforefood' => $row2['am_1330beforefud'], 'record' => $take, 'startdate' => $row2['am_startdate'], 'enddate' => $row2['am_enddate'], 'medtype' => "13:30", 'notes' => $row2['adm_lunchnote']);
                }
            }
            else{
                $lunch = "No medication";
            }
            
            $dinnermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_dinner !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($dinnermedication)>0)
            {
                while($row3 = mysql_fetch_array($dinnermedication))
                {
                    if($row3['adm_dinnerrecord'] != "")
                    {
                        $take = $row3['adm_dinnerrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $dinner[] = array('medid' => $row3['medadministrationid'], 'medicine' => $row3['md_medicationname'], 'dosage' => $row3['am_dosage'], 'time' => "18:30", 'afterorbeforefood' => $row3['am_1830beforefud'], 'record' => $take, 'startdate' => $row3['am_startdate'], 'enddate' => $row3['am_enddate'], 'medtype' => "18:30", 'notes' => $row3['adm_dinnernote']);
                }
            }
            else{
                $dinner = "No medication";
            }
            
            $bedmedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_bed !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($bedmedication)>0)
            {
                while($row4 = mysql_fetch_array($bedmedication))
                {
                    if($row4['adm_bedrecord'] != "")
                    {
                        $take = $row4['adm_bedrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $bed[] = array('medid' => $row4['medadministrationid'], 'medicine' => $row4['md_medicationname'], 'dosage' => $row4['am_dosage'], 'time' => "21:30", 'afterorbeforefood' => $row4['am_2130beforefud'], 'record' => $take, 'startdate' => $row4['am_startdate'], 'enddate' => $row4['am_enddate'], 'medtype' => "21:30", 'notes' => $row4['adm_bednote']);
                }
            }
            else{
                $bed = "No medication";
            }
            
            $othermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_other !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($othermedication)>0)
            {
                while($row5 = mysql_fetch_array($othermedication))
                {
                    if($row5['adm_otherrecord'] != "")
                    {
                        $take = $row5['adm_otherrecord'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $other[] = array('medid' => $row5['medadministrationid'], 'medicine' => $row5['md_medicationname'], 'dosage' => $row5['am_dosage'], 'time' => date('H:i', strtotime($row5['adm_othertimeofday'])), 'afterorbeforefood' => $row5['am_otherbeforefud'], 'record' => $take, 'startdate' => $row5['am_startdate'], 'enddate' => $row5['am_enddate'], 'medtype' => "other", 'notes' => $row5['adm_othernote']);
                }
            }
            else{
                $other = "No medication";
            }
            
            $othermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_other2 !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($othermedication)>0)
            {
                while($row5 = mysql_fetch_array($othermedication))
                {
                    if($row5['adm_other2record'] != "")
                    {
                        $take = $row5['adm_other2record'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $other[] = array('medid' => $row5['medadministrationid'], 'medicine' => $row5['md_medicationname'], 'dosage' => $row5['am_dosage'], 'time' => date('H:i', strtotime($row5['adm_other2timeofday'])), 'afterorbeforefood' => $row5['am_other2beforefud'], 'record' => $take, 'startdate' => $row5['am_startdate'], 'enddate' => $row5['am_enddate'], 'medtype' => "other2", 'notes' => $row5['adm_other2note']);
                }
            }
            else{
                $other2 = "No medication";
            }
            
            $othermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_other3 !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($othermedication)>0)
            {
                while($row5 = mysql_fetch_array($othermedication))
                {
                    if($row5['adm_other3record'] != "")
                    {
                        $take = $row5['adm_other3record'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $other[] = array('medid' => $row5['medadministrationid'], 'medicine' => $row5['md_medicationname'], 'dosage' => $row5['am_dosage'], 'time' => date('H:i', strtotime($row5['adm_other3timeofday'])), 'afterorbeforefood' => $row5['am_other3beforefud'], 'record' => $take, 'startdate' => $row5['am_startdate'], 'enddate' => $row5['am_enddate'], 'medtype' => "other3", 'notes' => $row5['adm_other3note']);
                }
            }
            else{
                $other3 = "No medication";
            }
            
            $othermedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE a.adm_administationdate='$curdate' AND a.adm_other4 !='0' AND b.residentid='$resid'");
            
            if(mysql_num_rows($othermedication)>0)
            {
                while($row5 = mysql_fetch_array($othermedication))
                {
                    if($row5['adm_other4record'] != "")
                    {
                        $take = $row5['adm_other4record'];
                    }
                    else{
                        $take = "No Record";
                    }
                    $other[] = array('medid' => $row5['medadministrationid'], 'medicine' => $row5['md_medicationname'], 'dosage' => $row5['am_dosage'], 'time' => date('H:i', strtotime($row5['adm_other4timeofday'])), 'afterorbeforefood' => $row5['am_other4beforefud'], 'record' => $take, 'startdate' => $row5['am_startdate'], 'enddate' => $row5['am_enddate'], 'medtype' => "other4", 'notes' => $row5['adm_other4note']);
                }
            }
            else{
                $other4 = "No medication";
            }
            
            $result = array('7:30medication' => $mrnng, '13:30medication' => $lunch, '18:30medication' => $dinner, '21:30medication' => $bed, 'othermedication' => $other);
            $success = array('status' => "success", "msg" => $result);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Resident id cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function resmedicationhistory()
    {
        
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $curdate=date('Y-m-d');
        if($resid != "")
        {
            $mrnng = array();
            $lunch = array();
            $dinner = array();
            $bed = array();
            $other = array();
            $mrngmedication = mysql_query("SELECT * FROM en_resadministratormedicine a INNER JOIN en_resaddmedicine b ON b.addmedicineid=a.residentmedicineid INNER JOIN en_medicationdatabse c ON c.medicationid=b.am_medicationid INNER JOIN en_resmedicineprescription d ON d.residentmedicineid=b.addmedicineid WHERE DATE(a.adm_administationdate)<='$curdate' AND b.residentid='$resid' ORDER BY a.   adm_administationdate DESC");
            
            if(mysql_num_rows($mrngmedication)>0)
            {
                while($row1 = mysql_fetch_array($mrngmedication))
                {
                    $other = array();
                    //Breakfst
                    if($row1['adm_breakfastrecord'] != "")
                    {
                        $take = $row1['adm_breakfastrecord'];
                    }
                    else{
                        $take = "Not Updated";
                    }
                    //Lunch
                    if($row1['adm_lunchrecord'] != "")
                    {
                        $take1 = $row1['adm_lunchrecord'];
                    }
                    else{
                        $take1 = "Not Updated";
                    }
                    //Dinner
                    if($row1['adm_dinnerrecord'] != "")
                    {
                        $take3 = $row1['adm_dinnerrecord'];
                    }                   
                    else{
                        $take3 = "Not Updated";
                    }
                    //bed
                    if($row1['adm_bedrecord'] != "")
                    {
                        $take4 = $row1['adm_bedrecord'];
                    }
                    else{
                        $take4 = "Not Updated";
                    }
                    //Other
                    if($row1['adm_otherrecord'] != "")
                    {
                        $take5 = $row1['adm_otherrecord'];
                    }
                    else{
                        $take5 = "Not Updated";
                    }
                    //Other 2
                    if($row1['adm_other2record'] != "")
                    {
                        $take6 = $row1['adm_other2record'];
                    }
                    else{
                        $take6 = "Not Updated";
                    }
                    //other 3
                    if($row1['adm_other3record'] != "")
                    {
                        $take7 = $row1['adm_other3record'];
                    }
                    else{
                        $take7 = "Not Updated";
                    }
                    //Other 4
                    if($row1['adm_other4record'] != "")
                    {
                        $take8 = $row1['adm_other4record'];
                    }
                    else{
                        $take8 = "Not Updated";
                    }
                    
                    if($row1['adm_breakfast'] != 0)
                    {
                        if($row1['adm_breakfastnote'] != "")
                        {
                            $brakfastnote = $row1['adm_breakfastnote'];
                        }
                        else{
                            $brakfastnote = null;
                        }
                        $mrnng = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => "7:30", 'record' => $take, 'updatedtime' => $row1['adm_breakfasttime'], 'medtype' => "7:30", 'notes' => $brakfastnote);
                    }
                    else{
                        $mrnng = 'No medication';
                    }
                    if($row1['adm_lunch'] != 0)
                    {
                        if($row1['adm_lunchnote'] != "")
                        {
                            $lunchnote = $row1['adm_lunchnote'];
                        }
                        else{
                            $lunchnote = null;
                        }
                        $lunch = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => "13:30", 'record' => $take1, 'updatedtime' => $row1['adm_lunchtime'], 'medtype' => "13:30", 'notes' => $lunchnote);
                    }
                    else{
                        $lunch = 'No medication';
                    }
                    if($row1['adm_dinner'] != 0)
                    {
                        if($row1['adm_dinnernote'] != "")
                        {
                            $dinnernote = $row1['adm_dinnernote'];
                        }
                        else{
                            $dinnernote = null;
                        }
                        $dinner = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => "18:30", 'record' => $take3, 'updatedtime' => $row1['adm_dinnertime'], 'medtype' => "18:30", 'notes' => $dinnernote);
                    }
                    else{
                        $dinner = 'No medication';
                    }
                    if($row1['adm_bed'] != 0)
                    {
                        if($row1['adm_bednote'] != "")
                        {
                            $bednote = $row1['adm_bednote'];
                        }
                        else{
                            $bednote = null;
                        }
                        $bed = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => "21:30", 'record' => $take4, 'updatedtime' => $row1['adm_bedtime'], 'medtype' => "21:30", 'notes' => $bednote);
                    }
                    else{
                        $bed = 'No medication';
                    }
                    if($row1['adm_other'] != 0)
                    {
                        if($row1['adm_othernote'] != "")
                        {
                            $othernote = $row1['adm_othernote'];
                        }
                        else{
                            $othernote = null;
                        }
                        $other[] = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => date('H:i', strtotime($row1['adm_othertimeofday'])), 'record' => $take5, 'updatedtime' => $row1['adm_othertime'], 'medtype' => "other", 'notes' => $othernote);
                    }
                    /*else{
                        $other = 'No medication';
                    }*/
                    // newwwwwwwwww
                    if($row1['adm_other2'] != 0)
                    {
                        if($row1['adm_other2note'] != "")
                        {
                            $other2note = $row1['adm_other2note'];
                        }
                        else{
                            $other2note = null;
                        }
                        $other[] = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => date('H:i', strtotime($row1['adm_other2timeofday'])), 'record' => $take6, 'updatedtime' => $row1['adm_other2time'], 'medtype' => "other2", 'notes' => $other2note);
                    }
                    /*else{
                        $other2 = 'No medication';
                    }*/
                    if($row1['adm_other3'] != 0)
                    {
                        if($row1['adm_other3note'] != "")
                        {
                            $other3note = $row1['adm_other3note'];
                        }
                        else{
                            $other3note = null;
                        }
                        $other[] = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => date('H:i', strtotime($row1['adm_other3timeofday'])), 'record' => $take7, 'updatedtime' => $row1['adm_other3time'], 'medtype' => "other3", 'notes' => $other3note);
                    }
                    /*else{
                        $other3 = 'No medication';
                    }*/
                    if($row1['adm_other4'] != 0)
                    {
                        if($row1['adm_other4note'] != "")
                        {
                            $other4note = $row1['adm_other4note'];
                        }
                        else{
                            $other4note = null;
                        }
                        $other[] = array('medid' => $row1['medadministrationid'], 'medicine' => $row1['md_medicationname'], 'dosage' => $row1['am_dosage'], 'time' => date('H:i', strtotime($row1['adm_other4timeofday'])), 'record' => $take8, 'updatedtime' => $row1['adm_other4time'], 'medtype' => "other4", 'notes' => $other4note);
                    }
                    /*else{
                        $other4 = 'No medication';
                    }*/
                    
                    $resultarr[] = array('medicationdate'=>date('Y-m-d', strtotime($row1['adm_administationdate'])), '7:30medication' => $mrnng, '13:30medication' => $lunch, '18:30medication' => $dinner, '21:30medication' => $bed, 'othermedication' => $other);
                }
            }
            else{
                $resultarr = "No medication history";
            }
            

            //$result = array('History' => $resultarr);
            $success = array('status' => "success", "msg" => $resultarr);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Resident id cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function updateresmedication()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $medid = $this->_request['medid'];
        $medtype = $this->_request['medtype'];
        $medrecord = $this->_request['medrecord'];
        $notes = $this->_request['notes'];
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        //$curdate=date('Y-m-d H:i:s');

        $isoffline = $this->_request['isoffline'];
        if($isoffline == '1')
        {
            $offlne = "1";
            $curdate=date('Y-m-d H:i:s', strtotime($this->_request['updateddate']));
        }
        else{
            $offlne = "0";
            $curdate=date('Y-m-d H:i:s');
        }
        
        if($resid != "" && $medid != "" && $medtype != "" && $medrecord != "" && $updatedby !="")
        {
                //$mddet = mysql_query("SELECT * FROM en_resadministratormedicine WHERE medadministrationid='$medid'");
                /*if(mysql_num_rows($mddet)>0)
                {*/
                    if($medtype=='7:30')
                    {
                        $medidarr = explode('#', $medid);
                        //$medrecordarr = explode('#', $medrecord);
                        $i = 0;
                        foreach($medidarr as $medidval)
                        {
                            $update = mysql_query("UPDATE en_resadministratormedicine SET adm_breakfastrecord='$medrecord',  adm_breakfastnote='$notes', adm_breakfasttime='$curdate', adm_breakfastupdatedby='$updatedby', adm_updateddate='$curdate' WHERE medadministrationid='$medidval'");
                            $i++;
                        }
                        if($update)
                        {
                            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', '7:30 medication', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                            
                            $success = array('status' => "success", "msg" => "Successfully updated 7:30 medication");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                        else{
                            $success = array('status' => "failed", "msg" => "Error in updating record");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                    }
                    else if($medtype=='13:30')
                    {
                        $medidarr = explode('#', $medid);
                        //$medrecordarr = explode('#', $medrecord);
                        $i = 0;
                        foreach($medidarr as $medidval)
                        {
                            $update = mysql_query("UPDATE en_resadministratormedicine SET adm_lunchrecord='$medrecord',  adm_lunchnote='$notes', adm_lunchtime='$curdate', adm_lunchupdatedby='$updatedby', adm_updateddate='$curdate' WHERE medadministrationid='$medidval'");
                            $i++;
                        }
                        if($update)
                        {
                            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', '13:30 medication', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                            $success = array('status' => "success", "msg" => "Successfully updated 13:30 medication");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                        else{
                            $success = array('status' => "failed", "msg" => "Error in updating record");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                    }
                    else if($medtype=='18:30')
                    {
                        $medidarr = explode('#', $medid);
                        //$medrecordarr = explode('#', $medrecord);
                        $i = 0;
                        foreach($medidarr as $medidval)
                        {
                            $update = mysql_query("UPDATE en_resadministratormedicine SET adm_dinnerrecord='$medrecord', adm_dinnernote='$notes', adm_dinnertime='$curdate', adm_dinnerupdatedby='$updatedby', adm_updateddate='$curdate' WHERE medadministrationid='$medidval'");
                            $i++;
                        }
                        if($update)
                        {
                            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', '18:30 medication', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                            $success = array('status' => "success", "msg" => "Successfully updated 18:30 medication");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                        else{
                            $success = array('status' => "failed", "msg" => "Error in updating record");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                    }
                    else if($medtype=='21:30')
                    {
                        $medidarr = explode('#', $medid);
                        //$medrecordarr = explode('#', $medrecord);
                        $i = 0;
                        foreach($medidarr as $medidval)
                        {
                            $update = mysql_query("UPDATE en_resadministratormedicine SET adm_bedrecord='$medrecord', adm_bednote='$notes',  adm_bedtime='$curdate', adm_bedupdatedby='$updatedby', adm_updateddate='$curdate' WHERE medadministrationid='$medidval'");
                            $i++;
                        }
                        if($update)
                        {
                            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', '21:30 medication', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                            $success = array('status' => "success", "msg" => "Successfully updated 21:30 medication");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                        else{
                            $success = array('status' => "failed", "msg" => "Error in updating record");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                    }
                    else if($medtype=='other')
                    {
                        $medidarr = explode('#', $medid);
                        //$medrecordarr = explode('#', $medrecord);
                        $i = 0;
                        foreach($medidarr as $medidval)
                        {
                            $update = mysql_query("UPDATE en_resadministratormedicine SET adm_otherrecord='$medrecord',  adm_othernote='$notes', adm_othertime='$curdate', adm_otherupdatedby='$updatedby', adm_updateddate='$curdate' WHERE medadministrationid='$medidval'");
                            $i++;
                        }
                        if($update)
                        {
                            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', 'other medication', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                            $success = array('status' => "success", "msg" => "Successfully updated other medication");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                        else{
                            $success = array('status' => "failed", "msg" => "Error in updating record");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                    }
                    else if($medtype=='other2')
                    {
                        $medidarr = explode('#', $medid);
                        //$medrecordarr = explode('#', $medrecord);
                        $i = 0;
                        foreach($medidarr as $medidval)
                        {
                            $update = mysql_query("UPDATE en_resadministratormedicine SET adm_other2record='$medrecord',  adm_other2note='$notes', adm_other2time='$curdate', adm_other2updatedby='$updatedby', adm_updateddate='$curdate' WHERE medadministrationid='$medidval'");
                            $i++;
                        }
                        if($update)
                        {
                            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', 'other medication', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                            $success = array('status' => "success", "msg" => "Successfully updated other2 medication");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                        else{
                            $success = array('status' => "failed", "msg" => "Error in updating record");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                    }
                    else if($medtype=='other3')
                    {
                        $medidarr = explode('#', $medid);
                        //$medrecordarr = explode('#', $medrecord);
                        $i = 0;
                        foreach($medidarr as $medidval)
                        {
                            $update = mysql_query("UPDATE en_resadministratormedicine SET adm_other3record='$medrecord',  adm_other3note='$notes', adm_other3time='$curdate', adm_other3updatedby='$updatedby', adm_updateddate='$curdate' WHERE medadministrationid='$medidval'");
                            $i++;
                        }
                        if($update)
                        {
                            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', 'other medication', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                            $success = array('status' => "success", "msg" => "Successfully updated other2 medication");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                        else{
                            $success = array('status' => "failed", "msg" => "Error in updating record");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                    }
                    else if($medtype=='other4')
                    {
                        $medidarr = explode('#', $medid);
                        //$medrecordarr = explode('#', $medrecord);
                        $i = 0;
                        foreach($medidarr as $medidval)
                        {
                            $update = mysql_query("UPDATE en_resadministratormedicine SET adm_other4record='$medrecord',  adm_other4note='$notes', adm_other4time='$curdate', adm_other4updatedby='$updatedby', adm_updateddate='$curdate' WHERE medadministrationid='$medidval'");
                            $i++;
                        }
                        if($update)
                        {
                            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', 'other medication', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                            $success = array('status' => "success", "msg" => "Successfully updated other2 medication");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                        else{
                            $success = array('status' => "failed", "msg" => "Error in updating record");
                            $this->response($this->json($success), 200);  
                            return true;
                        }
                    }
                    else{
                        $success = array('status' => "failed", "msg" => "Invalid medication type");
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                /*}
                else{
                    $success = array('status' => "failed", "msg" => "Invalid medication id");
                        $this->response($this->json($success), 200);  
                        return true;
                    }*/

                }
                else{
                    $success = array('status' => "failed", "msg" => "Required feilds cannot been empty");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }

    /*private function updateresmadicationall()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $medid = $this->_request['medid'];
        $medtype = $this->_request['medtype'];
        $medrecord = $this->_request['medrecord'];
        $notes = $this->_request['notes'];
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        $curdate=date('Y-m-d H:i:s');
        
        if($resid != "" && $medid != "" && $medtype != "" && $medrecord != "" && $updatedby !="")
        {
            $mediidarr = explode(',', $medid);
            //$medrecordarr = explode('');
            foreach($mediidarr as $medidval)
            {
                $mddet = mysql_query("SELECT * FROM en_resadministratormedicine WHERE medadministrationid='$medidval'");
                if(mysql_num_rows($mddet)>0)
                {
                    
                }
            }
                
        }
        else{
            $success = array('status' => "failed", "msg" => "Required feilds cannot been empty");
            $this->response($this->json($success), 200);  
            return true;
        }
    }*/
    
    private function getnutritionoptions()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        
        $getnutrition = mysql_query("SELECT * FROM en_nutritiontimings WHERE nt_isstatus='0'");
        if(mysql_num_rows($getnutrition)>0)
        {
            $nutritionoption = array();
            while($row = mysql_fetch_array($getnutrition))
            {
                
                $items = array();
                $nutrid = $row['nt_nutritiontimeid'];
                $getsubitems = mysql_query("SELECT * FROM en_nutritionitems a LEFT JOIN en_nutritionquantities b ON b.nq_nutritionquantityid=a.ni_nutritionquantityid WHERE a.ni_nutritiontimeid='$nutrid'");
                while($row2 = mysql_fetch_array($getsubitems))
                {
                    $qnty = array();
                    $quntyarr = explode('#', $row2['nq_nutritionquantities']);
                    foreach($quntyarr as $qntval)
                    {
                        $qnty[] = $qntval;
                    }
                    $items[] = array('item' => $row2['ni_nutritionitem'], 'quantity' => $qnty);
                }
                $nutritionoption[] = array('time' => $row['nt_nutritiontime'], 'items' => $items);
            }
            $success = array('status' => "success", "msg" => $nutritionoption);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "No nutritiontimings");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    

    private function insertresnutritions()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $nutritiontime = $this->_request['nutritiontime'];
        $nutritionitems = $this->_request['nutritionitems'];
        $nutritionquantities = $this->_request['nutritionquantities'];
        $comments = $this->_request['comments'];
        $totalcalorie = $this->_request['totalcalorie'];
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        //$curdate=date('Y-m-d H:i:s');
        $assistedby = $this->_request['assistedby'];
        $isoffline = $this->_request['isoffline'];
        if($isoffline == '1')
        {
            $offlne = "1";
            $curdate=date('Y-m-d H:i:s', strtotime($this->_request['updateddate']));
        }
        else{
            $offlne = "0";
            $curdate=date('Y-m-d H:i:s');
        }
        
        if($resid != "" && $nutritiontime != "" && $nutritionitems != "" && $nutritionquantities != "" && $updatedby != "")
        {
            
            $insrt = mysql_query("INSERT INTO en_residentnutritions(rn_resid, rn_nutritiontime, rn_nutritionitems, rn_nutritionquantities,  rn_comments, rn_updatedby, rn_updatedon, rn_totalcalorie, rn_assistedby, rn_isoffline) VALUES('$resid', '$nutritiontime', '$nutritionitems', '$nutritionquantities', '$comments', '$updatedby', '$curdate', '$totalcalorie', '$assistedby', '$offlne')");
            if($insrt)
            {
                $nutriitemarr = explode('#', $nutritionitems);
                $nutriqntityarr = explode('#', $nutritionquantities);
                
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Nutrition & Hydration'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $rprtdataar = array();
                    $rpn = 0;
                    foreach($nutriitemarr as $itemval)
                    {
                        $rprtdataar[] = $itemval . " " . $nutriqntityarr[$rpn];
                        $rpn++;
                    }
                    $timevl = mysql_query("SELECT * FROM en_nutritiontimings WHERE nt_nutritiontimeid='$nutritiontime'");
                    $tmrw = mysql_fetch_array($timevl);
                    $nutritime = $tmrw['nt_nutritiontime'];
                    if(!empty($rprtdataar)){
                        if($comments != "")
                        {
                            $rprtdataar[] = "Comments: " . $comments;
                        }
                        $reportdata = "Nutrition And Hydration - " . $nutritime . ": " . implode(', ', $rprtdataar);
                        $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated, dr_isoffline) VALUES('1', '$reportdata', '$updatedby', '$curdate', '$resid', 'regular', '1', '1', '$offlne')");
                    }
                }

                $totfluid = 0;
                $flidcommntar = array();
                $k=0;
                foreach($nutriitemarr as $itemval)
                {
                    if($itemval == 'Tea' || $itemval == 'Milk' || $itemval == 'Juice' || $itemval == 'Water' || $itemval == 'Yoghurt' || $itemval == 'Nutrition  drinks' || $itemval == 'Coffee' || $itemval == 'Nutrition Drink')
                    {
                        $qty = preg_replace('/[^0-9]/', '', $nutriqntityarr[$k]);
                        if($qty != "")
                        {
                            $flidcommntar[] = $itemval . ": " . $nutriqntityarr[$k];
                            $totfluid = $totfluid + $qty;
                        }
                    }
                    $k++;
                }
                if($totfluid != "0")
                {
                    $fluidcomments = implode(', ', $flidcommntar);
                    $insertflid = mysql_query("INSERT INTO en_resfluidbalance(fb_resid, fb_takedate, fb_intake, fb_intakeunit, fb_output, fb_outputunit, fb_comments, fb_updatedby, fb_updatedon) VALUES('$resid', '$curdate', '$totfluid', 'ml', '0', 'ml', '$fluidcomments', '$updatedby', '$curdate')");
                }
                
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'added', 'nutrition', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                $success = array('status' => "success", "msg" => "Resident nutrition inserted successfully.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in updating database.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function insertmultiresnutritions()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $nutritiontime = $this->_request['nutritiontime'];
        $nutritionitems = $this->_request['nutritionitems'];
        $nutritionquantities = $this->_request['nutritionquantities'];
        $comments = $this->_request['comments'];
        $totalcalorie = $this->_request['totalcalorie'];
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        $assistedby = $this->_request['assistedby'];
        //$curdate=date('Y-m-d H:i:s');
        $isoffline = $this->_request['isoffline'];
        if($isoffline == '1')
        {
            $offlne = "1";
            $curdate=date('Y-m-d H:i:s', strtotime($this->_request['updateddate']));
        }
        else{
            $offlne = "0";
            $curdate=date('Y-m-d H:i:s');
        }
        
        if($resid != "" && $nutritiontime != "" && $nutritionitems != "" && $nutritionquantities != "" && $updatedby != "")
        {
            $resarray = explode(',', $resid);
            $nutritionitemsarr = explode('_', $nutritionitems);
            $nutritionquantitiesarr = explode('_', $nutritionquantities);
            $totalcaloriearray = explode('#', $totalcalorie);
            $commnentarray = explode('#', $comments);
            
            $k=0;
            foreach($resarray as $resval)
            {
                $nutriitem = $nutritionitemsarr[$k];
                $nutriqty =$nutritionquantitiesarr[$k];
                $totclryqty = $totalcaloriearray[$k];
                $rescomment = "";
                foreach($commnentarray as $cmntval)
                {
                    $recmntar = explode('@', $cmntval);
                    if($recmntar[0] == $resval)
                    {
                        $rescomment = $recmntar[1];
                    }
                }
                $insrt = mysql_query("INSERT INTO en_residentnutritions(rn_resid, rn_nutritiontime, rn_nutritionitems, rn_nutritionquantities,  rn_comments, rn_updatedby, rn_updatedon, rn_totalcalorie, rn_assistedby, rn_isoffline) VALUES('$resval', '$nutritiontime', '$nutriitem', '$nutriqty', '$rescomment', '$updatedby', '$curdate', '$totclryqty', '$assistedby', '$offlne')");
                $nutriitemarr = explode('#', $nutriitem);
                $nutriqntityarr = explode('#', $nutriqty);
                
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Nutrition & Hydration'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $rprtdataar = array();
                    $rpn = 0;
                    foreach($nutriitemarr as $itemval)
                    {
                        $rprtdataar[] = $itemval . " " . $nutriqntityarr[$rpn];
                        $rpn++;
                    }
                    $timevl = mysql_query("SELECT * FROM en_nutritiontimings WHERE nt_nutritiontimeid='$nutritiontime'");
                    $tmrw = mysql_fetch_array($timevl);
                    $nutritime = $tmrw['nt_nutritiontime'];
                    if(!empty($rprtdataar)){
                        if($rescomment != "")
                        {
                            $rprtdataar[] = "Comments: " . $rescomment;
                        }
                        $reportdata = "Nutrition And Hydration - " . $nutritime . ": " . implode(', ', $rprtdataar);
                        $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated, dr_isoffline) VALUES('1', '$reportdata', '$updatedby', '$curdate', '$resval', 'regular', '1', '1', '$offlne')");
                    }
                }
                
                $totfluid = 0;
                $flidcommntar = array();
                $kn=0;
                foreach($nutriitemarr as $itemval)
                {
                    if($itemval == 'Tea' || $itemval == 'Milk' || $itemval == 'Juice' || $itemval == 'Water' || $itemval == 'Yoghurt' || $itemval == 'Nutrition  drinks' || $itemval == 'Coffee' || $itemval == 'Nutrition Drink')
                    {
                        $qty = preg_replace('/[^0-9]/', '', $nutriqntityarr[$kn]);
                        if($qty != "")
                        {
                            $flidcommntar[] = $itemval . ": " . $nutriqntityarr[$kn];
                            $totfluid = $totfluid + $qty;
                        }
                    }
                    $kn++;
                }
                if($totfluid != "0")
                {
                    $fluidcomments = implode(', ', $flidcommntar);
                    $insertflid = mysql_query("INSERT INTO en_resfluidbalance(fb_resid, fb_takedate, fb_intake, fb_intakeunit, fb_output, fb_outputunit, fb_comments, fb_updatedby, fb_updatedon) VALUES('$resval', '$curdate', '$totfluid', 'ml', '0', 'ml', '$fluidcomments', '$updatedby', '$curdate')");
                }
                
                $k++;
            }
            
            if($insrt)
            {
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'added', 'nutrition', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                $success = array('status' => "success", "msg" => "Resident nutrition inserted successfully.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in updating database.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function updateresnutritions()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $nutritionid = $this->_request['nutritionid'];
        $nutritionitems = $this->_request['nutritionitems'];
        $nutritionquantities = $this->_request['nutritionquantities'];
        $comments = $this->_request['comments'];
        $totalcalorie = $this->_request['totalcalorie'];
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        $curdate=date('Y-m-d H:i:s');
        
        if($nutritionitems != "" && $nutritionquantities != "" && $updatedby != "")
        {
            
            $insrt = mysql_query("UPDATE en_residentnutritions SET rn_nutritionitems='$nutritionitems', rn_nutritionquantities='$nutritionquantities',  rn_comments='$comments', rn_updatedby='$updatedby', rn_updatedon='$curdate', rn_totalcalorie='$totalcalorie' WHERE rn_resnutritionid='$nutritionid'");
            if($insrt)
            {
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', 'nutrition', '$curdate', 'Touch', '$deviceid')");
                $success = array('status' => "success", "msg" => "Resident nutrition updated successfully.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in updating database.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getresnutritions()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $curdate=date('Y-m-d');
        if($resid != "")
        {
            $tdyntritions = mysql_query("SELECT * FROM en_residentnutritions WHERE rn_resid='$resid' AND rn_isstatus='0' AND DATE(rn_updatedon)='$curdate'");
            if(mysql_num_rows($tdyntritions)>0)
            {
                while($row = mysql_fetch_array($tdyntritions))
                {
                    $items = array();
                    $itemsar = explode('#', $row['rn_nutritionitems']);
                    $qnties = explode('#', $row['rn_nutritionquantities']);
                    $i = 0;
                    foreach($itemsar as $itmval)
                    {
                        if($itmval != "")
                        {
                            $items[] = array('item' => $itmval, 'qty' => $qnties[$i]);
                        }
                        $i++;
                    }
                    $records[] = array('nutritionid' => $row['rn_resnutritionid'], 'time' => $row['rn_nutritiontime'], 'totalcalorie' => $row['rn_totalcalorie'], 'comments' => $row['rn_comments'], 'items' => $items);
                }
                $success = array('status' => "success", "msg" => $records);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No nutritions updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function resnutritionhistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $predate = "";
            $ntritions = mysql_query("SELECT * FROM en_residentnutritions WHERE rn_resid='$resid' AND rn_isstatus='0' ORDER BY rn_resnutritionid DESC");
            if(mysql_num_rows($ntritions)>0)
            {
                while($row = mysql_fetch_array($ntritions))
                {
                    $upddate = date('Y-m-d', strtotime($row['rn_updatedon']));
                    
                    $assistedbyar = explode(',',$row['rn_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    $items = array();
                    $itemsar = explode('#', $row['rn_nutritionitems']);
                    $qnties = explode('#', $row['rn_nutritionquantities']);
                    $i = 0;
                    foreach($itemsar as $itmval)
                    {
                        if($itmval != "")
                        {
                        $items[] = array('item' => $itmval, 'qty' => $qnties[$i]);
                        }
                        $i++;
                    }
                    $updby = $row['rn_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    $records[] = array('nutritionid' => $row['rn_resnutritionid'], 'time' => $row['rn_nutritiontime'], 'totalcalorie' => $row['rn_totalcalorie'], 'updatedby' => $updname, 'updatedon' => $row['rn_updatedon'], 'comments' => $row['rn_comments'], 'items' => $items, 'assistedby' => $assistenurse);
                }
                $success = array('status' => "success", "msg" => $records);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No nutritions added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function resnutritionhistorypage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        if($resid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $predate = "";
            $ntritions = mysql_query("SELECT * FROM en_residentnutritions WHERE rn_resid='$resid' AND rn_isstatus='0' ORDER BY rn_resnutritionid DESC LIMIT $startno, $limit");
            if(mysql_num_rows($ntritions)>0)
            {
                $count1 = mysql_query("SELECT rn_resnutritionid FROM en_residentnutritions WHERE rn_resid='$resid' AND rn_isstatus='0'");
                $count = mysql_num_rows($count1);
                $pagecount = ceil($count/50);

                while($row = mysql_fetch_array($ntritions))
                {
                    $upddate = date('Y-m-d', strtotime($row['rn_updatedon']));
                    
                    $assistedbyar = explode(',',$row['rn_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                            $assistenursear[] = ucwords(strtolower($name1));
                            //$assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    $items = array();
                    $itemsar = explode('#', $row['rn_nutritionitems']);
                    $qnties = explode('#', $row['rn_nutritionquantities']);
                    $i = 0;
                    foreach($itemsar as $itmval)
                    {
                        if($itmval != "")
                        {
                            $items[] = array('item' => $itmval, 'qty' => $qnties[$i]);
                        }
                        $i++;
                    }
                    $updby = $row['rn_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                    $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    $records[] = array('nutritionid' => $row['rn_resnutritionid'], 'time' => $row['rn_nutritiontime'], 'totalcalorie' => $row['rn_totalcalorie'], 'updatedby' => $updname, 'updatedon' => $row['rn_updatedon'], 'comments' => $row['rn_comments'], 'items' => $items, 'assistedby' => $assistenurse);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $records);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No nutritions added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getpatchoptions()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $ptloc = mysql_query('SELECT * FROM en_patchlocations');
        if(mysql_num_rows($ptloc)>0)
        {
            while($row = mysql_fetch_array($ptloc))
            {
                $types = array();
                $actions = array();
                $ptchtype = mysql_query("SELECT * FROM en_patchtypes");
                while($row1 = mysql_fetch_array($ptchtype))
                {
                    $types[] = $row1['pt_patchtype'];
                }
                $ptchaction = mysql_query("SELECT * FROM en_patchactions");
                while($row2 = mysql_fetch_array($ptchaction))
                {
                    $actions[] = $row2['pa_patchaction'];
                }
                $paoption[] = array('patchlocation' => $row['pl_location'], 'patchimage' => 'http://dev-enursing.demormc.com/public/patches/'.$row['pl_photo'], 'types' => $types, 'actions' => $actions);

            }
            $success = array('status' => "success", "msg" => $paoption);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "No patch options.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getresidentpatch()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $curdate=date('Y-m-d');
        if($resid != "")
        {
            $tdyrespatch = mysql_query("SELECT * FROM en_residentpatchrecords WHERE rp_resid='$resid' AND rp_isactive='0' ORDER BY rp_patchrecordid DESC");
            if(mysql_num_rows($tdyrespatch)>0)
            {
                while($row = mysql_fetch_array($tdyrespatch))
                {
                    $ploc = $row['rp_patchlocation'];
                    //$patchimg = mysql_query("SELECT * FROM en_patchlocations WHERE pl_location='$ploc'");
                    //$row2 = mysql_fetch_array($patchimg);
                    $updby = $row['rp_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                    $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    if($row['rp_notes'] != "")
                    {
                        $pnote = $row['rp_notes'];
                    }
                    else{
                        $pnote = null;
                    }
                    $recrd[] = array('patchid' => $row['rp_patchrecordid'], 'location' => $ploc, 'patchtype' => $row['rp_patchtype'], 'action' => $row['rp_action'], 'addeddate' => $row['rp_patchdate'], 'notes' => $pnote, 'updateddate' => $row['rp_updatedon'], 'updatedby' => $updname);
                }
                $success = array('status' => "success", "msg" => $recrd);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No patches recorded.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getresidentpatchpage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        $curdate=date('Y-m-d');
        if($resid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $tdyrespatch = mysql_query("SELECT * FROM en_residentpatchrecords WHERE rp_resid='$resid' AND rp_isactive='0' ORDER BY rp_patchrecordid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT rp_patchrecordid FROM en_residentpatchrecords WHERE rp_resid='$resid' AND rp_isactive='0'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($tdyrespatch)>0)
            {
                while($row = mysql_fetch_array($tdyrespatch))
                {
                    $ploc = $row['rp_patchlocation'];
                    //$patchimg = mysql_query("SELECT * FROM en_patchlocations WHERE pl_location='$ploc'");
                    //$row2 = mysql_fetch_array($patchimg);
                    $updby = $row['rp_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                    $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    if($row['rp_notes'] != "")
                    {
                        $pnote = $row['rp_notes'];
                    }
                    else{
                        $pnote = null;
                    }
                    $recrd[] = array('patchid' => $row['rp_patchrecordid'], 'location' => $ploc, 'patchtype' => $row['rp_patchtype'], 'action' => $row['rp_action'], 'addeddate' => $row['rp_patchdate'], 'notes' => $pnote, 'updateddate' => $row['rp_updatedon'], 'updatedby' => $updname);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $recrd);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No patches recorded.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addnewrespatch()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $location = $this->_request['location'];
        $patchtype = $this->_request['patchtype'];
        $action = $this->_request['action'];
        $notes = $this->_request['notes'];
        $patchdate = date('Y-m-d H:i:s', strtotime($this->_request['patchdate']));
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        
        $curdate=date('Y-m-d H:i:s');
        if($resid != "" && $location != "" && $patchtype != "" && $action != "" && $patchdate != "" && $updatedby != "")
        {
            $insrt = mysql_query("INSERT INTO en_residentpatchrecords(rp_patchlocation, rp_patchtype, rp_action, rp_patchdate,  rp_updatedby, rp_updatedon, rp_resid, rp_notes) VALUES('$location', '$patchtype', '$action', '$patchdate', '$updatedby', '$patchdate', '$resid', '$notes')");
            if($insrt)
            {
                $lstptchid = mysql_query("SELECT rp_patchrecordid FROM en_residentpatchrecords ORDER BY rp_patchrecordid DESC LIMIT 1");
                $row = mysql_fetch_array($lstptchid);
                $patchid = $row['rp_patchrecordid'];
                
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Patch Report'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $reportdata = "Patches Report - location: " . $location . ", patch type:  " . $patchtype . ", action: " . $action . ", notes: " . $notes;
                    $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$updatedby', '$patchdate', '$resid', 'regular', '1', '1')");

                }
                
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'added', 'patch record', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Patch record inserted successfully.", "patchid" => $patchid);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in updating database.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function updaterespatch()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $patchid = $this->_request['patchid'];
        $location = $this->_request['location'];
        $patchtype = $this->_request['patchtype'];
        $action = $this->_request['action'];
        $notes = $this->_request['notes'];
        $patchdate = date('Y-m-d H:i:s', strtotime($this->_request['patchdate']));
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        
        $curdate=date('Y-m-d H:i:s');
        if($patchid != "" && $location != "" && $patchtype != "" && $action != "" && $patchdate != "" && $updatedby != "")
        {
            $insrt = mysql_query("UPDATE en_residentpatchrecords SET rp_patchlocation='$location', rp_patchtype='$patchtype', rp_action='$action', rp_updatedby='$updatedby', rp_notes='$notes', rp_updatedon='$patchdate' WHERE rp_patchrecordid='$patchid'");
            if($insrt)
            {
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', 'patch record', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Patch record updated successfully.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in updating database.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function bowelchart()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $bwlchrt = mysql_query('SELECT * FROM en_bowelchart');
        if(mysql_num_rows($bwlchrt)>0)
        {
            while($row = mysql_fetch_array($bwlchrt))
            {
                if($row['bc_bowelimage'] != "")
                {
                    $bwlimg = 'http://dev-enursing.demormc.com/public/bowel/'.$row['bc_bowelimage'];
                }
                else{
                    $bwlimg = null;
                }
                
                $recrds[] = array('typeid' => $row['bc_bowelchartid'], 'type' => $row['bc_boweltype'], 'description' => $row['bc_boweldescription'], 'state' => $row['bc_bowelstate'], 'image' => $bwlimg);
            }
            $success = array('status' => "success", "msg" => $recrds);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "No records.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function resbowelrecords()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $curdate=date('Y-m-d');
        
        if($resid != "")
        {
            $rtime = mysql_query("SELECT * FROM en_bowelrecordtime");
            if(mysql_num_rows($rtime)>0)
            {
                while($row = mysql_fetch_array($rtime))
                {
                    $daytimeid = $row['bt_bowelrecordtimeid'];
                    $rsdaybowel = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_bowelrecordtimeid='$daytimeid' AND br_isactive='0' AND DATE(br_recorddate)='$curdate' AND br_isactive='0' ORDER BY br_resbowelrecordid DESC LIMIT 1");
                    if(mysql_num_rows($rsdaybowel)>0)
                    {
                        $row1 = mysql_fetch_array($rsdaybowel);
                        $chrtid = $row1['br_bowelchartid'];
                        $type = mysql_query("SELECT * FROM en_bowelchart WHERE bc_bowelchartid='$chrtid'");
                        $row3 = mysql_fetch_array($type);
                        if($row3['bc_bowelimage'] != "")
                        {
                            $bwlimg = 'http://dev-enursing.demormc.com/public/bowel/'.$row3['bc_bowelimage'];
                        }
                        else{
                            $bwlimg = null;
                        }
                        $bwltyp = array('type' => $row3['bc_boweltype'], 'description' => $row3['bc_boweldescription'], 'state' => $row3['bc_bowelstate'], 'image' => $bwlimg);
                        $resrecords[] = array('timeid' => $row['bt_bowelrecordtimeid'], 'daytime' => $row['bt_daytime'], 'dayinterval' => $row['bt_timeinterval'], 'typeid' => $chrtid, 'recordid' => $row1['br_resbowelrecordid'], 'recordtime' => $row1['br_recorddate'], 'boweltype' => $bwltyp);
                    }
                    else{
                        $resrecords[] = array('timeid' => $row['bt_bowelrecordtimeid'], 'daytime' => $row['bt_daytime'], 'dayinterval' => $row['bt_timeinterval'], 'typeid' => null);
                    }
                }
                $success = array('status' => "success", "msg" => $resrecords);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No bowel records.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addbowelrecord()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $bowelchartid = $this->_request['boweltype'];
        $recordtimeid = $this->_request['boweltime'];
        $note = $this->_request['note'];
        $bowelsize = $this->_request['bowelsize'];
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];

        $isoffline = $this->_request['isoffline'];
        if($isoffline == '1')
        {
            $offlne = "1";
            $curdate=date('Y-m-d H:i:s', strtotime($this->_request['updateddate']));
        }
        else{
            $offlne = "0";
            $curdate=date('Y-m-d H:i:s');
        }
        //$curdate=date('Y-m-d H:i:s');
        
        if($resid !="" && $bowelchartid !="" && $recordtimeid !="" && $updatedby !="")
        {
            $insrt = mysql_query("INSERT INTO en_resbowelrecords(br_resid, br_bowelchartid, br_bowelrecordtimeid, br_bowelnote,  br_recorddate, br_updatedby, br_bowelsize, br_isoffline) VALUES('$resid', '$bowelchartid', '$recordtimeid', '$note', '$curdate', '$updatedby', '$bowelsize', '$offlne')");
            if($insrt)
            {
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Bowel Record'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $reportdata = "Bowel Movement - type: " . $bowelchartid . ", size:  " . $bowelsize . ", time: " . $recordtimeid . ", notes: " . $note;
                    $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated, dr_isoffline) VALUES('1', '$reportdata', '$updatedby', '$curdate', '$resid', 'regular', '1', '1', '$offlne')");

                }

                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'added', 'bowel record', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully added bowel record.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in adding bowel record.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function bowelrecordshistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid !="")
        {
            $insrt = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' ORDER BY br_resbowelrecordid DESC LIMIT 200");
            if(mysql_num_rows($insrt)>0)
            {
                while($row = mysql_fetch_array($insrt))
                {
                    $updby = $row['br_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                    $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    if($row['br_bowelnote'] != "")
                    {
                        $bwnote = $row['br_bowelnote'];
                    }
                    else{
                        $bwnote = null;
                    }
                    $bowelrecords[] = array('bowelid' => $row['br_resbowelrecordid'], 'boweltype' => $row['br_bowelchartid'], 'bowelsize' => $row['br_bowelsize'], 'boweltime' => $row['br_bowelrecordtimeid'], 'note' => $bwnote, 'recordtime' => $row['br_recorddate'], 'updatedby' => $updname);
                }
                $success = array('status' => "success", "msg" => $bowelrecords);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No bowel records added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function bowelrecordshistorypage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        if($resid !="")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $insrt = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' ORDER BY br_resbowelrecordid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT br_resbowelrecordid FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($insrt)>0)
            {
                while($row = mysql_fetch_array($insrt))
                {
                    $updby = $row['br_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                    $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    if($row['br_bowelnote'] != "")
                    {
                        $bwnote = $row['br_bowelnote'];
                    }
                    else{
                        $bwnote = null;
                    }
                    $bowelrecords[] = array('bowelid' => $row['br_resbowelrecordid'], 'boweltype' => $row['br_bowelchartid'], 'bowelsize' => $row['br_bowelsize'], 'boweltime' => $row['br_bowelrecordtimeid'], 'note' => $bwnote, 'recordtime' => $row['br_recorddate'], 'updatedby' => $updname);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $bowelrecords);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No bowel records added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function editbowelrecord()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $recordid = $this->_request['recordid'];
        $typeid = $this->_request['typeid'];
        $note = $this->_request['note'];
        $updatedby = $this->_request['updatedby'];
        $curdate=date('Y-m-d H:i:s');
        $deviceid = $this->_request['deviceid'];
        
        if($recordid != "" && $typeid != "" && $updatedby !="")
        {
            $updte = mysql_query("UPDATE en_resbowelrecords SET br_bowelchartid='$typeid', br_bowelnote='$note', br_updatedby='$updatedby', br_recorddate='$curdate' WHERE br_resbowelrecordid='$recordid'");
            if($updte)
            {
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'updated', 'bowel record', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully updated bowel record.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in updating bowel record.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addpositionchart()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $actiontaken = $this->_request['actiontaken'];
        $carepositionarea = $this->_request['carepositionarea'];
        $passedurine = $this->_request['passedurine'];
        $bowelmovement = $this->_request['bowelmovement'];
        $padchanged = $this->_request['padchanged'];
        $notes = $this->_request['notes'];
        $caredatetime = date('Y-m-d H:i:s', strtotime($this->_request['caredatetime']));
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        $curdate=date('Y-m-d H:i:s');
        if($resid != "" && $actiontaken != "" && $carepositionarea !="" && $updatedby !="" && $caredatetime != "")
        {
            $insrt = mysql_query("INSERT INTO en_residentpositionchart(pc_resid, pc_actiontaken, pc_carepositionarea, pc_passedurine,  pc_bowelmovement, pc_padchanged, pc_notes, pc_caredatetime, pc_updatedby, pc_updatedon) VALUES('$resid', '$actiontaken', '$carepositionarea', '$passedurine', '$bowelmovement', '$padchanged', '$notes', '$caredatetime', '$updatedby', '$curdate')");
            if($insrt)
            {
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Position Chart'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $reportdata = "Position Chart - Action Taken: " . $actiontaken . ", Position Area:  " . $carepositionarea . ", Passed Urine: " . $passedurine . ", Bowel Movement: " . $bowelmovement . ", Pad Changed: " . $padchanged . ", Comments: " . $notes;
                    $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$updatedby', '$caredatetime', '$resid', 'regular', '1', '1')");

                }

                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'added', 'position chart', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully added position chart.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in adding position chart.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addpositionformultipleresidents()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $actiontaken = $this->_request['actiontaken'];
        $carepositionarea = $this->_request['carepositionarea'];
        $passedurine = $this->_request['passedurine'];
        $bowelmovement = $this->_request['bowelmovement'];
        $padchanged = $this->_request['padchanged'];

        $padvalue = $this->_request['padvalue'];
        //$notes = $this->_request['notes'];
        $caredatetime = date('Y-m-d H:i:s', strtotime($this->_request['caredatetime']));
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        $boweltype = $this->_request['boweltype'];
        $bowelsize = $this->_request['bowelsize'];
        $boweltime = $this->_request['boweltime'];
        $curdate=date('Y-m-d H:i:s');
        $notes = $this->_request['notes'];
        
        if($resid != "" && $actiontaken != "" && $carepositionarea !="" && $updatedby !="" && $caredatetime != "")
        {
            $residarr = explode('#', $resid);
            $notesarr = explode('#', $notes);
            $k=0;
            foreach($residarr as $resval)
            {
                if($resval != "")
                {
                    $rsmsg = $notesarr[$k];
                    $insrt = mysql_query("INSERT INTO en_residentpositionchart(pc_resid, pc_actiontaken, pc_carepositionarea, pc_passedurine,  pc_bowelmovement, pc_padchanged, pc_notes, pc_caredatetime, pc_updatedby, pc_updatedon, pc_padvalue) VALUES('$resval', '$actiontaken', '$carepositionarea', '$passedurine', '$bowelmovement', '$padchanged', '$rsmsg', '$caredatetime', '$updatedby', '$curdate', '$padvalue')");

                    if($padvalue != "0,0")
                    {
                        $options = "0#0#0#0#0#0#0#". $padvalue ."#0#";
                        $insrt=mysql_query("INSERT INTO en_residentmorningcare(rm_residentid, rm_optionids, rm_comments, rm_updatedby, rm_updatedtime) VALUES('$resval', '$options', '$rsmsg', '$updatedby', '$curdate')");
                    }

                    if($bowelmovement == 'true')
                    {
                        $insrt1 = mysql_query("INSERT INTO en_resbowelrecords(br_resid, br_bowelchartid, br_bowelrecordtimeid, br_bowelnote,  br_recorddate, br_updatedby, br_bowelsize) VALUES('$resval', '$boweltype', '$boweltime', '$rsmsg', '$curdate', '$updatedby', '$bowelsize')");
                    }
                    
                    $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Position Chart'");
                    $dlrow = mysql_fetch_array($rprt);
                    if($dlrow['to_isdailyreport'] == '1')
                    {
                        $reportdata = "Position Chart - Action Taken: " . $actiontaken . ", Position Area:  " . $carepositionarea . ", Passed Urine: " . $passedurine . ", Bowel Movement: " . $bowelmovement . ", Pad Changed: " . $padchanged . ", Comments: " . $notes;
                        $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$updatedby', '$caredatetime', '$resval', 'regular', '1', '1')");
                        
                    }
                }
                $k++;
            }
            if($insrt)
            {
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'added', 'position chart', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully added position chart.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in adding position chart.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function positioncharthistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $insrt = mysql_query("SELECT * FROM en_residentpositionchart WHERE pc_resid='$resid' AND pc_isactive='0' ORDER BY pc_positionchartid DESC");
            if(mysql_num_rows($insrt)>0)
            {
                while($row = mysql_fetch_array($insrt))
                {
                    $updby = $row['pc_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                    $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    if($row['pc_notes'] != "")
                    {
                        $posnote = $row['pc_notes'];
                    }
                    else{
                        $posnote = null;
                    }
                    $logdate = $row['pc_updatedon'];
                    $bwl = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' AND br_recorddate='$logdate'");
                    if(mysql_num_rows($bwl)>0)
                    {
                        $row2 = mysql_fetch_array($bwl);
                        $boweltype = $row2['br_bowelchartid'];
                        $bowelsize = $row2['br_bowelsize'];
                        $boweltime = $row2['br_bowelrecordtimeid'];
                    }
                    else{
                        $boweltype = "";
                        $bowelsize = "";
                        $boweltime = "";
                    }

                    $padval = $row['pc_padvalue'];
                    $padvla = array();
                    if($padval != "")
                    {
                        $padvla = array();
                        $padvalarr = explode(',', $padval);
                        foreach($padvalarr as $pdvl)
                        {
                            $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions WHERE suboptionid='$pdvl'");
                            if(mysql_num_rows($optns)>0)
                            {
                                $row2 = mysql_fetch_array($optns);
                                $padvla[] = $row2['so_tabsuboptions'];
                            }
                            
                        }
                    }
                    $padvalue = implode(',', $padvla);
                    if($padvalue == "")
                    {
                        $padvalue = "NA";
                    }

                    $msg[] = array("reportid" => $row['pc_positionchartid'], "actiontaken" => $row['pc_actiontaken'], "positionarea" => $row['pc_carepositionarea'], "passedurine" => $row['pc_passedurine'], "bowelmovement" => $row['pc_bowelmovement'], "padchanged" => $row['pc_padchanged'], "notes" => $posnote, "caredatetime" => $row['pc_caredatetime'], "updatedby" => $updname, "boweltype" => $boweltype, "bowelsize" => $bowelsize, "boweltime" => $boweltime, "padvalue" => $padvalue);
                }
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No position chart added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function positioncharthistorypage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        if($resid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $insrt = mysql_query("SELECT * FROM en_residentpositionchart WHERE pc_resid='$resid' AND pc_isactive='0' ORDER BY pc_positionchartid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT pc_positionchartid FROM en_residentpositionchart WHERE pc_resid='$resid' AND pc_isactive='0'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($insrt)>0)
            {
                while($row = mysql_fetch_array($insrt))
                {
                    $updby = $row['pc_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                    $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    if($row['pc_notes'] != "")
                    {
                        $posnote = $row['pc_notes'];
                    }
                    else{
                        $posnote = null;
                    }
                    $logdate = $row['pc_updatedon'];
                    $bwl = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' AND br_recorddate='$logdate'");
                    if(mysql_num_rows($bwl)>0)
                    {
                        $row2 = mysql_fetch_array($bwl);
                        $boweltype = $row2['br_bowelchartid'];
                        $bowelsize = $row2['br_bowelsize'];
                        $boweltime = $row2['br_bowelrecordtimeid'];
                    }
                    else{
                        $boweltype = "";
                        $bowelsize = "";
                        $boweltime = "";
                    }

                    $padval = $row['pc_padvalue'];
                    $padvla = array();
                    if($padval != "")
                    {
                        $padvla = array();
                        $padvalarr = explode(',', $padval);
                        foreach($padvalarr as $pdvl)
                        {
                            $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions WHERE suboptionid='$pdvl'");
                            if(mysql_num_rows($optns)>0)
                            {
                                $row2 = mysql_fetch_array($optns);
                                $padvla[] = $row2['so_tabsuboptions'];
                            }
                            
                        }
                    }
                    $padvalue = implode(',', $padvla);
                    if($padvalue == "")
                    {
                        $padvalue = "NA";
                    }

                    $msg[] = array("reportid" => $row['pc_positionchartid'], "actiontaken" => $row['pc_actiontaken'], "positionarea" => $row['pc_carepositionarea'], "passedurine" => $row['pc_passedurine'], "bowelmovement" => $row['pc_bowelmovement'], "padchanged" => $row['pc_padchanged'], "notes" => $posnote, "caredatetime" => $row['pc_caredatetime'], "updatedby" => $updname, "boweltype" => $boweltype, "bowelsize" => $bowelsize, "boweltime" => $boweltime, "padvalue" => $padvalue);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No position chart added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addressafetychecklist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $location = $this->_request['location'];
        $safetytime = date('H:i:s', strtotime($this->_request['safetytime']));
        $safetydate = date('Y-m-d', strtotime($this->_request['safetydate']));
        $where = $this->_request['where'];
        $bedraildate = date('Y-m-d H:i:s', strtotime($this->_request['bedraildate']));
        $bedrailuse = $this->_request['bedrailuse'];
        $bedrailexpiry = $this->_request['bedrailexpiry'];
        $bedrailexpiryminute = $this->_request['bedrailexpiryminute'];

        $bedrailexpirydate = date('Y-m-d H:i:s', strtotime($bedraildate . ' +'.$bedrailexpiry. ' hours +'.$bedrailexpiryminute. ' minutes'));
        $notes = $this->_request['notes'];
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];
        
        $passedurine = $this->_request['passedurine'];
        $bowelmovement = $this->_request['bowelmovement'];
        $padchanged = $this->_request['padchanged'];
        $residentawake = $this->_request['residentawake'];
        $padvalue = $this->_request['padvalue'];
        
        $boweltype = $this->_request['boweltype'];
        $bowelsize = $this->_request['bowelsize'];
        $boweltime = $this->_request['boweltime'];
        
        $curdate=date('Y-m-d H:i:s');
        
        if($resid != "" && $safetytime !="" && $safetydate !="" &&  $bedrailuse != "")
        {
            $insrt = mysql_query("INSERT INTO en_ressafetychecklists(sc_resid, sc_safetylocation, sc_safetytime, sc_safetydate,  sc_safetywhere, sc_bedrailuse, sc_notes, sc_updatedby, sc_updatedon, sc_passedurine, sc_bowelmovement, sc_padchanged, sc_residentawake, sc_bedrailexpiry, sc_padvalue, sc_bedraildate) VALUES('$resid', '$location', '$safetytime', '$safetydate', '$where', '$bedrailuse', '$notes', '$updatedby', '$curdate', '$passedurine', '$bowelmovement', '$padchanged', '$residentawake', '$bedrailexpirydate', '$padvalue', '$bedraildate')");

            if($padvalue != "0,0")
            {
                $options = "0#0#0#0#0#0#0#". $padvalue ."#0#";
                $insrt=mysql_query("INSERT INTO en_residentmorningcare(rm_residentid, rm_optionids, rm_comments, rm_updatedby, rm_updatedtime) VALUES('$resid', '$options', '$notes', '$updatedby', '$curdate')");
            }
            
            if($bowelmovement == 'yes')
            {
                $insrt1 = mysql_query("INSERT INTO en_resbowelrecords(br_resid, br_bowelchartid, br_bowelrecordtimeid, br_bowelnote,  br_recorddate, br_updatedby, br_bowelsize) VALUES('$resid', '$boweltype', '$boweltime', '$notes', '$curdate', '$updatedby', '$bowelsize')");
            }

            if($insrt)
            {
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Resident Safety Checklist'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $safeme = date('d-M-Y', strtotime($safetydate)) . " " . date('H:i', strtotime($safetytime));

                    $reportdata = "Safety Checklist - Location: " . $location . ", Time:  " . $safeme . ", Bed/Chair: " . $where . ", Bed Rail Use: " . $bedrailuse . ", Passes Urine: " . $passedurine . ", Pad Changed: " . $padchanged . ", Bowel Movement: " . $bowelmovement . ", Comments: " . $notes;
                    $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$updatedby', '$curdate', '$resid', 'regular', '1', '1')");

                }

                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'added', 'safety checklist', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully added resident safety checklist.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error in adding resident safety checklist.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function addresbedraildetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $bedraildate = date('Y-m-d H:i:s', strtotime($this->_request['bedraildate']));
        $bedrailuse = $this->_request['bedrailuse'];
        $bedrailexpiry = $this->_request['bedrailexpiry'];
        $bedrailexpiryminute = $this->_request['bedrailexpiryminute'];
        $bedrailexpirydate = date('Y-m-d H:i:s', strtotime($bedraildate . ' +'.$bedrailexpiry. ' hours +'.$bedrailexpiryminute. ' minutes'));
        $notes = $this->_request['notes'];
        $updatedby = $this->_request['updatedby'];
        $deviceid = $this->_request['deviceid'];

        $curdate=date('Y-m-d H:i:s');
        $safetime = date('H:i:s');
        $safedate = date('Y-m-d');
        
        if($resid != "" && $bedrailuse != "" && $bedrailexpiry !="")
        {
            $insrt = mysql_query("INSERT INTO en_ressafetychecklists(sc_resid, sc_safetytime, sc_safetydate, sc_bedrailuse, sc_notes, sc_updatedby, sc_updatedon, sc_bedrailexpiry, sc_bedraildate, sc_isbedrailform) VALUES('$resid', '$safetime', '$safedate', '$bedrailuse', '$notes', '$updatedby', '$curdate', '$bedrailexpirydate', '$bedraildate', '1')");

            if($insrt)
            {
                /*$rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Resident Safety Checklist'");
                    $dlrow = mysql_fetch_array($rprt);
                    if($dlrow['to_isdailyreport'] == '1')
                    {
                        $safeme = date('d-M-Y', strtotime($safetydate)) . " " . date('H:i', strtotime($safetytime));
                        
                        $reportdata = "Safety Checklist - Location: " . $location . ", Time:  " . $safeme . ", Bed/Chair: " . $where . ", Bed Rail Use: " . $bedrailuse . ", Passes Urine: " . $passedurine . ", Pad Changed: " . $padchanged . ", Bowel Movement: " . $bowelmovement . ", Comments: " . $notes;
                        $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$updatedby', '$curdate', '$resid', 'regular', '1', '1')");
                        
                    }*/
                    
                    $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$updatedby', 'added', 'bedrail details', '1', '$resid', '$curdate', 'Touch', '$deviceid')");

                    $success = array('status' => "success", "msg" => "Successfully added resident bedrail details.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $success = array('status' => "failed", "msg" => "Error in adding resident bedrail details.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }

        private function safetychecklisthistory()
        {
            if ($this->get_request_method() == "GET") {
                $this->response('', 406);
            }
            $resid = $this->_request['resid'];
            if($resid != "")
            {
                $slctchcklst = mysql_query("SELECT * FROM en_ressafetychecklists WHERE sc_resid='$resid' AND sc_isactive='0' ORDER BY sc_safetychecklistid DESC");
                if(mysql_num_rows($slctchcklst)>0)
                {
                    while($row = mysql_fetch_array($slctchcklst))
                    {
                        $updby = $row['sc_updatedby'];
                        $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                        $row2 = mysql_fetch_array($updtdby);
                        $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                        $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        if($row['sc_notes'] != "")
                        {
                            $posnote = $row['sc_notes'];
                        }
                        else{
                            $posnote = null;
                        }

                        $updatedon = $row['sc_updatedon'];
                        $bwl = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' AND br_recorddate='$updatedon'");
                        if(mysql_num_rows($bwl)>0)
                        {
                            $row2 = mysql_fetch_array($bwl);
                            $boweltype = $row2['br_bowelchartid'];
                            $bowelsize = $row2['br_bowelsize'];
                            $boweltime = $row2['br_bowelrecordtimeid'];
                        }
                        else{
                            $boweltype = "";
                            $bowelsize = "";
                            $boweltime = "";
                        }

                        $padval = $row['sc_padvalue'];
                        $padvla = array();
                        if($padval != "")
                        {
                            $padvla = array();
                            $padvalarr = explode(',', $padval);
                            foreach($padvalarr as $pdvl)
                            {
                                $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions WHERE suboptionid='$pdvl'");
                                if(mysql_num_rows($optns)>0)
                                {
                                    $row2 = mysql_fetch_array($optns);
                                    $padvla[] = $row2['so_tabsuboptions'];
                                }

                            }
                        }
                        $padvalue = implode(',', $padvla);


                        $msg[] = array("checklistid" => $row['sc_safetychecklistid'], "location" => $row['sc_safetylocation'], "safetytime" => $row['sc_safetytime'], "safetydate" => $row['sc_safetydate'], "where" => $row['sc_safetywhere'], "bedrailuse" => $row['sc_bedrailuse'], "bedrailexpiry" => $row['sc_bedrailexpiry'], "passedurine" => $row['sc_passedurine'], "bowelmovement" => $row['sc_bowelmovement'], "padchanged" => $row['sc_padchanged'], "residentawake" => $row['sc_residentawake'], "notes" => $posnote, "sc_updatedby" => $updname, "boweltype" => $boweltype, "bowelsize" => $bowelsize, "boweltime" => $boweltime, "padvalue" => $padvalue, "bedraildate" => $row['sc_bedraildate'], 'updateddate' => $row['sc_updatedon']);
                    }
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $success = array('status' => "failed", "msg" => "No history available.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "Resident id cannot be empty.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }

        private function safetychecklisthistorypage()
        {
            if ($this->get_request_method() == "GET") {
                $this->response('', 406);
            }
            $resid = $this->_request['resid'];
            $page = $this->_request['page'];
            if($resid != "")
            {
                $startno = ($page - 1)*50;
                $limit = 50;

                $slctchcklst = mysql_query("SELECT * FROM en_ressafetychecklists WHERE sc_resid='$resid' AND sc_isactive='0' ORDER BY sc_safetychecklistid DESC LIMIT $startno, $limit");
                if(mysql_num_rows($slctchcklst)>0)
                {
                    $count1 = mysql_query("SELECT sc_safetychecklistid FROM en_ressafetychecklists WHERE sc_resid='$resid' AND sc_isactive='0'");
                    $count = mysql_num_rows($count1);
                    $pagecount = ceil($count/50);

                    while($row = mysql_fetch_array($slctchcklst))
                    {
                        $updby = $row['sc_updatedby'];
                        $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                        $row2 = mysql_fetch_array($updtdby);
                        $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                        $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        if($row['sc_notes'] != "")
                        {
                            $posnote = $row['sc_notes'];
                        }
                        else{
                            $posnote = null;
                        }

                        $updatedon = $row['sc_updatedon'];
                        $bwl = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' AND br_recorddate='$updatedon'");
                        if(mysql_num_rows($bwl)>0)
                        {
                            $row2 = mysql_fetch_array($bwl);
                            $boweltype = $row2['br_bowelchartid'];
                            $bowelsize = $row2['br_bowelsize'];
                            $boweltime = $row2['br_bowelrecordtimeid'];
                        }
                        else{
                            $boweltype = "";
                            $bowelsize = "";
                            $boweltime = "";
                        }

                        $padval = $row['sc_padvalue'];
                        $padvla = array();
                        if($padval != "")
                        {
                            $padvla = array();
                            $padvalarr = explode(',', $padval);
                            foreach($padvalarr as $pdvl)
                            {
                                $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions WHERE suboptionid='$pdvl'");
                                if(mysql_num_rows($optns)>0)
                                {
                                    $row2 = mysql_fetch_array($optns);
                                    $padvla[] = $row2['so_tabsuboptions'];
                                }

                            }
                        }
                        $padvalue = implode(',', $padvla);


                        $msg[] = array("checklistid" => $row['sc_safetychecklistid'], "location" => $row['sc_safetylocation'], "safetytime" => $row['sc_safetytime'], "safetydate" => $row['sc_safetydate'], "where" => $row['sc_safetywhere'], "bedrailuse" => $row['sc_bedrailuse'], "bedrailexpiry" => $row['sc_bedrailexpiry'], "passedurine" => $row['sc_passedurine'], "bowelmovement" => $row['sc_bowelmovement'], "padchanged" => $row['sc_padchanged'], "residentawake" => $row['sc_residentawake'], "notes" => $posnote, "sc_updatedby" => $updname, "boweltype" => $boweltype, "bowelsize" => $bowelsize, "boweltime" => $boweltime, "padvalue" => $padvalue, "bedraildate" => $row['sc_bedraildate'], 'updateddate' => $row['sc_updatedon']);
                    }
                    $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $success = array('status' => "failed", "msg" => "No history available.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "Resident id cannot be empty.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }

        private function resbedrailhistory()
        {
            if ($this->get_request_method() == "GET") {
                $this->response('', 406);
            }
            $resid = $this->_request['resid'];
            if($resid != "")
            {
                $bedraildate  = "NA";
                $bedrailexpiry = "NA";
                $slctchcklst = mysql_query("SELECT * FROM en_ressafetychecklists WHERE sc_resid='$resid' AND sc_bedrailuse != 'NA' AND sc_isactive='0'");
                if(mysql_num_rows($slctchcklst)>0)
                {
                    while($row = mysql_fetch_array($slctchcklst))
                    {
                        if($row['sc_bedrailuse'] == 'Yes')
                        {
                            $bedraildate  = $row['sc_bedraildate'];
                            $bedrailexpiry  = $row['sc_bedrailexpiry'];
                        }
                        else if($row['sc_bedrailuse'] == 'No')
                        {
                            $bedraildate  = $row['sc_bedraildate'];
                            $bedrailexpiry = "NA";
                        }
                        $updby = $row['sc_updatedby'];
                        $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                        $row2 = mysql_fetch_array($updtdby);
                        $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                        $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        if($row['sc_notes'] != "")
                        {
                            $posnote = $row['sc_notes'];
                        }
                        else{
                            $posnote = null;
                        }

                        $updatedon = $row['sc_updatedon'];



                        $msg[] = array("checklistid" => $row['sc_safetychecklistid'], "bedrailuse" => $row['sc_bedrailuse'], "bedrailexpiry" => $bedrailexpiry, "notes" => $posnote, "sc_updatedby" => $updname, "bedraildate" => $bedraildate);
                    }

                    $msgg2 = array_reverse($msg);
                    $success = array('status' => "success", "msg" => $msgg2);
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $success = array('status' => "failed", "msg" => "No history available.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "Resident id cannot be empty.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }

        private function updateresidentimage()
        {
            if ($this->get_request_method() == "GET") {
                $this->response('', 406);
            }
            $resid = $this->_request['resid'];
            $curdate=date('Y-m-d H:i:s');
            $userid = $this->_request['userid'];
            $image = $this->_request['resimage'];
            $deviceid = $this->_request['deviceid'];
            if($resid != "" && $userid != "")
            {
                $target_dir = "../public/upload/residentimage/";
            //$temp = explode(".", $_FILES["resimage"]["name"]);
            //$newfilename = round(microtime(true)) . '.' . end($temp);
                $newfilename = round(microtime(true)) . '.jpg';

                $target_file = $target_dir . $newfilename;
            //if (move_uploaded_file($_FILES["resimage"]["tmp_name"], $target_file)) {
                file_put_contents($target_file,base64_decode($image));
                $insrt = mysql_query("INSERT INTO en_resadmimage(resadmid, resadmimage, updateddate, imgupdatedby) VALUES('$resid', '$newfilename', '$curdate', '$userid')");
                if($insrt)
                {
                    $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$userid', 'updated', 'profile image', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                    $rimg = "http://dev-enursing.demormc.com/public/upload/residentimage/".$newfilename;
                    //$rimg = "http://52.17.237.23/public/upload/residentimage/".$newfilename;
                    $success = array('status' => "success", "msg" => "Image uploded successfully.", "newimage" => $rimg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $success = array('status' => "failed", "msg" => "Error in uploading image. Please try again.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            /*}else{
                $success = array('status' => "failed", "msg" => "Error in uploading image. Please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }*/
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function updateuserimage()
    {
        if ($this->get_request_method() == "GET") {
                $this->response('', 406);
            }
            $employeeid = $this->_request['employeeid'];
            $curdate=date('Y-m-d H:i:s');
            $userid = $this->_request['userid'];
            $image = $this->_request['empimage'];
            $deviceid = $this->_request['deviceid'];
            if($employeeid != "" && $userid != "")
            {
                $target_dir = "../public/upload/userimage/";
            //$temp = explode(".", $_FILES["resimage"]["name"]);
            //$newfilename = round(microtime(true)) . '.' . end($temp);
                $newfilename = round(microtime(true)) . '.jpg';

                $target_file = $target_dir . $newfilename;
            //if (move_uploaded_file($_FILES["resimage"]["tmp_name"], $target_file)) {
                file_put_contents($target_file,base64_decode($image));

                $slctph = mysql_query("SELECT * FROM en_tblempphoto WHERE ep_userid='$employeeid'");
                if(mysql_num_rows($slctph)>0)
                {
                    $insrt = mysql_query("UPDATE en_tblempphoto SET ep_imageurl='$newfilename', ep_lastupdatedid='$userid', ep_lastupdateddate='$curdate' WHERE ep_userid='$employeeid'");
                }
                else{
                    $insrt = mysql_query("INSERT INTO en_tblempphoto(ep_userid, ep_imageurl, ep_lastupdatedid, ep_lastupdateddate) VALUES('$employeeid', '$newfilename', '$userid', '$curdate')");
                }
                
                if($insrt)
                {
                    $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, module, logtime, device, deviceid) VALUES('$userid', 'updated', 'employee profile image', 'welcome', '$curdate', 'Touch', '$deviceid')");

                    $rimg = "http://dev-enursing.demormc.com/public/upload/userimage/".$newfilename;
                    //$rimg = "http://52.17.237.23/public/upload/residentimage/".$newfilename;

                    $success = array('status' => "success", "msg" => "Image uploded successfully.", "newimage" => $rimg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $success = array('status' => "failed", "msg" => "Error in uploading image. Please try again.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            /*}else{
                $success = array('status' => "failed", "msg" => "Error in uploading image. Please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }*/
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getresidentrecipedetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        $dates = $this->_request['date'];
        $todaydate = date('d-m-Y');
        if($resid != "" && $userid != "")
        {
            $fudpref = mysql_query("SELECT * FROM en_adlfoodeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatanddrinkid DESC LIMIT 1");
            if(mysql_num_rows($fudpref)>0)
            {
                while($row = mysql_fetch_array($fudpref))
                {
                    /*if($row['fp_specialdietary'] == 'yes')
                    {
                        $spdietryreq = $row['fp_sdreqirenote'];
                    }else{
                        $spdietryreq = "None";
                    }*/
                    $spdietryreq = "";
                    if($row['ed_typeofdiet'] == 'other')
                    {
                        $dietry = $row['ed_specialdietary'];
                    }else{
                        $dietry = $row['ed_typeofdiet'];
                    }
                    $takenmeals = $row['ed_restakemeals'];
                    $assistancereq = $row['ed_assitancerequire'];
                    $likes = $row['ed_likes'];
                    $dislikes = $row['ed_dislikes'];
                    $allergies = $row['ed_allergies'];
                }
            }else{
                $spdietryreq= "";
                $dietry = "";
                $takenmeals = "";
                $assistancereq = "";
                $likes = "";
                $dislikes = "";
                $allergies = "";
            }
            $recipes = mysql_query("SELECT * FROM tblmenu");
            if(mysql_num_rows($recipes) > 0)
            {
                while($row2 = mysql_fetch_array($recipes))
                {
                    $output3 = array();
                    $menuid = $row2['menuid'];
                    
                    
                    /***************************** allergen start ********************************/

                    $slctallrg = mysql_query("SELECT * FROM tblmenuingredients a INNER JOIN tbl_allergen b ON b.productid=a.productid WHERE menuid='$menuid'");
                    while($rows = mysql_fetch_array($slctallrg))
                    {
                        if ($rows['recipeallergenid']) {
                            $rcpallrgid = $rows['recipeallergenid'];
                            $allrgslct = mysql_query("SELECT * FROM tblrecipeallergen WHERE ra_recipeallergenid='$rcpallrgid'");
                            while($alle = mysql_fetch_array($allrgslct))
                            {
                                $flag_val = 0;
                                if ($alle['ra_Crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';

                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Cereals'] == 'CONTAINS') {
                                    if ($alle['ra_Wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sesame_Seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sulphur_Dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }else{
                            $productid = $rows['productid'];
                            $allrgslct = mysql_query("SELECT * FROM tbl_allergen where productid='$productid'");
                            while($alle = mysql_fetch_array($allrgslct))
                            {
                                $flag_val = 0;
                                if ($alle['crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';

                                    array_push($output3, $output2);
                                }
                                if ($alle['eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['cereals'] == 'CONTAINS') {
                                    if ($alle['wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sesame_seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sulphur_dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }
                        //$result = array_unique($output3);
                        //$arr_list = implode($result, "");
                    }
                    $custall = mysql_query("SELECT * FROM tblmenucustom WHERE menuid='$menuid'");
                    while($cstval = mysql_fetch_array($custall))
                    {
                        if ($cstval['recipecustomallergenid']) {
                            $productid = $cstval['recipecustomallergenid'];
                            $custname = mysql_query("SELECT * FROM tblrecipeallergen where ra_recipeallergenid='$productid'");
                            while($alle = mysql_fetch_array($custname))
                            {
                                $flag_val = 0;
                                if ($alle['ra_Crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';

                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Cereals'] == 'CONTAINS') {
                                    if ($alle['ra_Wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sesame_Seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sulphur_Dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }else{
                            $custprid = $cstval['customid'];
                            $cstname = mysql_query("SELECT * FROM tbl_allergen WHERE productid in (SELECT  productid FROM  tblcustomproingr WHERE  customid IN ('$custprid'))");
                            while($alle = mysql_fetch_array($cstname)){
                                $flag_val = 0;
                                if ($alle['crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['cereals'] == 'CONTAINS') {
                                    if ($alle['wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sesame_seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sulphur_dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }
                    }
                    if(isset($output3))
                    {
                        $result = array_unique($output3);
                        $number = count($result);
                        if ($number == 0) {
                            $arr_list = 'Nil';
                        } else {
                            $arr_list = implode(',', $result);
                        }
                    }else{
                        $arr_list = 'Nil';
                    }

                    /******************************* allergen end *************************************/
                    
                    
                    $prdcts = mysql_query("SELECT a.energykcl as calorievalue,b.*,c.* FROM tbl_nutrition1 a INNER JOIN tblmenuingredients b ON b.productid=a.productid INNER JOIN tbl_product c ON c.productid=a.productid WHERE b.menuid = '$menuid'");
                    $custprdcts = mysql_query("SELECT  productid,quentity FROM  tblcustomproingr WHERE customid IN (SELECT customid FROM  tblmenucustom WHERE  menuid ='$menuid')");
                    $fat = 0;
                    $sfa = 0;
                    $carohydrates = 0;
                    $total_sugar = 0;
                    $fiber = 0;
                    $protein = 0;
                    $salt = 0;
                    $sodium = 0;
                    $totalqnty = 0;
                    $alcohol = 0;
                    $caloriekcl = 0;
                    $calkj = 0;
                    $ingrntnme = "";
                    if(mysql_num_rows($custprdcts) > 0)
                    {
                        while($row3 = mysql_fetch_array($custprdcts))
                        {
                            $ingrntnme[] = $row3['ingredientname'];
                            $prdctid = $row3['productid'];
                            $quantity = $row3['quantity'];
                            $totalqnty = $totalqnty + $quantity;
                            $fudcomb = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                            while($row4 = mysql_fetch_array($fudcomb))
                            {
                                $caloriekcl = ($row4['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                $calkj = ($row4['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;
                                $fat = ($row4['fat'] * ($quantity / 100)) + $fat;
                                $sfa = (($row4['sfa'] * 100) / $quantity) + $sfa;
                                $carohydrates = ($row4['carohydrates'] * ($quantity / 100)) + $carohydrates;
                                $total_sugar = ($row4['total_sugar'] * ($quantity / 100)) + $total_sugar;
                                $fiber = ($row4['fibre'] * ($quantity / 100)) + $fiber;
                                $protein = ($row4['protein'] * ($quantity / 100)) + $protein;
                                $salt = ($row4['salt'] * ($quantity / 100)) + $salt;
                                $sodium = ((($row4['sodium'] / 1000) * ($quantity / 100))) + $sodium;
                                $alcohol = ($row4['alcohol'] * ($quantity / 100)) + $alcohol;
                            }
                        }
                    }
                    if(mysql_num_rows($prdcts) > 0)
                    {
                        while($row4 = mysql_fetch_array($prdcts))
                        {
                            $ingrntnme[] = $row4['productname'];
                            $prdctid = $row4['productid'];
                            $quantity = $row4['quantity'];
                            $totalqnty = $totalqnty + $quantity;
                            $fudcomb1 = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                            while($row5 = mysql_fetch_array($fudcomb1))
                            {
                                $caloriekcl = ($row5['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                $calkj = ($row5['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;
                                $fat = ($row5['fat'] * ($quantity / 100)) + $fat;
                                $sfa = (($row5['sfa'] * 100) / $quantity) + $sfa;
                                $carohydrates = ($row5['carohydrates'] * ($quantity / 100)) + $carohydrates;
                                $total_sugar = ($row5['total_sugar'] * ($quantity / 100)) + $total_sugar;
                                $fiber = ($row5['fibre'] * ($quantity / 100)) + $fiber;
                                $protein = ($row5['protein'] * ($quantity / 100)) + $protein;
                                $salt = ($row5['salt'] * ($quantity / 100)) + $salt;
                                $sodium = ((($row5['sodium'] / 1000) * ($quantity / 100))) + $sodium;
                                $alcohol = ($row5['alcohol'] * ($quantity / 100)) + $alcohol;
                            }
                        }
                    }
                    
                    if($row2['finshedweghtvalue'] == 0){
                        $totqnty = $totalqnty;
                    }else{
                        $totqnty = $row2['finshedweghtvalue'];
                    }
                    
                    $calory = round($caloriekcl * 100 / $totqnty, 0);
                    $calkj = round($calkj * 100 / $totqnty, 0);
                    
                    $fat = round($fat * 100 / $totqnty, 2);
                    $sfa = round($sfa * 100 / $totqnty, 2);
                    $carohydrates = round($carohydrates * 100 / $totqnty, 2);
                    $total_sugar = round($total_sugar * 100 / $totqnty, 2);
                    $fiber = round($fiber * 100 / $totqnty, 2);
                    $protein = round($protein * 100 / $totqnty, 2);
                    $salt = round($salt * 100 / $totqnty, 2);
                    $sodium = round($sodium * 100 / $totqnty, 2);
                    $alcohol = round($alcohol * 100 / $totqnty, 2);
                    
                    $totalnutrival = $calory + ($fat*2.25) + $sfa + $carohydrates + $total_sugar + $fiber + $protein + $salt + $sodium + ($alcohol*1.75);
                    $caloryper = round($calory * 100/$totalnutrival, 0);
                    $fatper = round($fat*2.25*100/$totalnutrival, 0);
                    $sfaper = round($sfa*100/$totalnutrival, 0);
                    $carboper = round($carohydrates*100/$totalnutrival, 0);
                    $sugarper = round($total_sugar*100/$totalnutrival, 0);
                    $fiberper = round($fiber*100/$totalnutrival, 0);
                    $proteinper = round($protein*100/$totalnutrival, 0);
                    $saltper = round($salt*100/$totalnutrival, 0);
                    $sodiumper = round($sodium*100/$totalnutrival, 0);
                    $alcoholper = round($alcohol*1.75*100/$totalnutrival, 0);
                    
                    $hstry = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' AND rf_menuids='$menuid' AND rf_mealtime='breakfast' AND rf_days='$dates' ORDER BY rf_foodupdateid DESC");
                    if(mysql_num_rows($hstry) > 0)
                    {
                        $row6 = mysql_fetch_array($hstry);
                        $foodid1 = $row6['rf_foodupdateid'];
                        $slcted1 = "1";
                    }else{
                        $foodid1 = "null";
                        $slcted1 = "0";
                    }
                    
                    $hstry = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' AND rf_menuids='$menuid' AND rf_mealtime='lunch' AND rf_days='$dates' ORDER BY rf_foodupdateid DESC");
                    if(mysql_num_rows($hstry) > 0)
                    {
                        $row6 = mysql_fetch_array($hstry);
                        $foodid2 = $row6['rf_foodupdateid'];
                        $slcted2 = "1";
                    }else{
                        $foodid2 = "null";
                        $slcted2 = "0";
                    }
                    
                    $hstry = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' AND rf_menuids='$menuid' AND rf_mealtime='tea' AND rf_days='$dates' ORDER BY rf_foodupdateid DESC");
                    if(mysql_num_rows($hstry) > 0)
                    {
                        $row6 = mysql_fetch_array($hstry);
                        $foodid3 = $row6['rf_foodupdateid'];
                        $slcted3 = "1";
                    }else{
                        $foodid3 = "null";
                        $slcted3 = "0";
                    }
                    
                    $hstry = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' AND rf_menuids='$menuid' AND rf_mealtime='dinner' AND rf_days='$dates' ORDER BY rf_foodupdateid DESC");
                    if(mysql_num_rows($hstry) > 0)
                    {
                        $row6 = mysql_fetch_array($hstry);
                        $foodid4 = $row6['rf_foodupdateid'];
                        $slcted4 = "1";
                    }else{
                        $foodid4 = "null";
                        $slcted4 = "0";
                    }
                    
                    if($row2['image'] != "" && $row2['image'] != " " && $row2['image'] != null)
                    {
                        $recimg = 'http://dev-enursing.demormc.com/public/kitchen/'.$row2['image'];
                    }
                    else{
                        $recimg = 'http://dev-enursing.demormc.com/assets/img/no_image.png';
                    }
                    
                    $recpsbreak[] = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => $calory, 'energykj' => $calkj, 'energyper' => $caloryper, 'fat' => $fat, 'fatper' => $fatper, 'sfa' => $sfa, 'sfaper' => $sfaper, 'carbohydrates' => $carohydrates,  'carbohydratesper' => $carboper,'total_sugar' => $total_sugar, 'sugarper' => $sugarper, 'fiber' => $fiber, 'fiberper' => $fiberper, 'protein' => $protein, 'proteinper' => $proteinper, 'salt' => $salt, 'saltper' => $saltper, 'sodium' => $sodium, 'sodiumper' => $sodiumper, 'alcohol' => $alcohol, 'alcoholper' => $alcoholper, 'allergen' => $arr_list, 'selected' => $slcted1, 'foodid' => $foodid1);
                    
                    $recpslunch[] = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => $calory, 'energykj' => $calkj, 'energyper' => $caloryper, 'fat' => $fat, 'fatper' => $fatper, 'sfa' => $sfa, 'sfaper' => $sfaper, 'carbohydrates' => $carohydrates,  'carbohydratesper' => $carboper,'total_sugar' => $total_sugar, 'sugarper' => $sugarper, 'fiber' => $fiber, 'fiberper' => $fiberper, 'protein' => $protein, 'proteinper' => $proteinper, 'salt' => $salt, 'saltper' => $saltper, 'sodium' => $sodium, 'sodiumper' => $sodiumper, 'alcohol' => $alcohol, 'alcoholper' => $alcoholper, 'allergen' => $arr_list, 'selected' => $slcted2, 'foodid' => $foodid2);
                    
                    $recpstea[] = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => $calory, 'energykj' => $calkj, 'energyper' => $caloryper, 'fat' => $fat, 'fatper' => $fatper, 'sfa' => $sfa, 'sfaper' => $sfaper, 'carbohydrates' => $carohydrates,  'carbohydratesper' => $carboper,'total_sugar' => $total_sugar, 'sugarper' => $sugarper, 'fiber' => $fiber, 'fiberper' => $fiberper, 'protein' => $protein, 'proteinper' => $proteinper, 'salt' => $salt, 'saltper' => $saltper, 'sodium' => $sodium, 'sodiumper' => $sodiumper, 'alcohol' => $alcohol, 'alcoholper' => $alcoholper, 'allergen' => $arr_list, 'selected' => $slcted3, 'foodid' => $foodid3);
                    
                    
                    
                    $recpsdinner[] = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => $calory, 'energykj' => $calkj, 'energyper' => $caloryper, 'fat' => $fat, 'fatper' => $fatper, 'sfa' => $sfa, 'sfaper' => $sfaper, 'carbohydrates' => $carohydrates,  'carbohydratesper' => $carboper,'total_sugar' => $total_sugar, 'sugarper' => $sugarper, 'fiber' => $fiber, 'fiberper' => $fiberper, 'protein' => $protein, 'proteinper' => $proteinper, 'salt' => $salt, 'saltper' => $saltper, 'sodium' => $sodium, 'sodiumper' => $sodiumper, 'alcohol' => $alcohol, 'alcoholper' => $alcoholper, 'allergen' => $arr_list, 'selected' => $slcted4, 'foodid' => $foodid4);
                }
            }else{
                $recps = "No recipes available.";
            }
            
            $success = array("status" => "success", "specialdietryreq" => $spdietryreq, "dietry" => $dietry, "takenmeals" => $takenmeals, "assistancereq" => $assistancereq, "likes" => $likes, "dislikes" => $dislikes, "allergies" => $allergies, "todaydate" => $todaydate, "breakfast" => $recpsbreak, "lunch" => $recpslunch, "tea" => $recpstea, "dinner" => $recpsdinner);
            $this->response($this->json($success), 200);  
            return true;
            
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function categoryrecipedetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        $dates = date('Y-m-d', strtotime($this->_request['date']));
        $todaydate = date('d-m-Y');
        if($resid != "" && $userid != "")
        {
            
            $categories = mysql_query("SELECT * FROM tblcategory");
            if(mysql_num_rows($categories) > 0)
            {
                $recipebreakarray = array();
                $recipeluncharray = array();
                $recipeteaarray = array();
                $recipedinnerarray = array();
                
                while($catval = mysql_fetch_array($categories))
                {
                    $recpsbreak = array();
                    $recpslunch = array();
                    $recpstea = array();
                    $recpsdinner = array();
                    
                    $catid = $catval['categoryid'];
                    
                    $recipes = mysql_query("SELECT * FROM tblmenu WHERE menucategory = '$catid'");
                    if(mysql_num_rows($recipes) > 0)
                    {
                        while($row2 = mysql_fetch_array($recipes))
                        {
                            $output3 = array();
                            $menuid = $row2['menuid'];
                            
                            /***************************** allergen start ********************************/

                            $slctallrg = mysql_query("SELECT * FROM tblmenuingredients a INNER JOIN tbl_allergen b ON b.productid=a.productid WHERE menuid='$menuid'");
                            while($rows = mysql_fetch_array($slctallrg))
                            {
                                if ($rows['recipeallergenid']) {
                                    $rcpallrgid = $rows['recipeallergenid'];
                                    $allrgslct = mysql_query("SELECT * FROM tblrecipeallergen WHERE ra_recipeallergenid='$rcpallrgid'");
                                    while($alle = mysql_fetch_array($allrgslct))
                                    {
                                        $flag_val = 0;
                                        if ($alle['ra_Crustaceans'] == 'CONTAINS') {
                                            $output2 = 'Crustaceans and their derivates';

                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Eggs'] == 'CONTAINS') {
                                            $output2 = 'Eggs and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Fish'] == 'CONTAINS') {
                                            $output2 = 'Fish and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Milk'] == 'CONTAINS') {
                                            $output2 = 'Milk and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Nuts'] == 'CONTAINS') {
                                            $output2 = 'Nuts and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Cereals'] == 'CONTAINS') {
                                            if ($alle['ra_Wheat'] == 'CONTAINS') {
                                                $output2 = 'Cereals-Wheat';
                                                $flag_val = 1;
                                                $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                            } else {
                                                $output2 = 'Cereals containing gluten and their derivates';
                                            }
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Peanuts'] == 'CONTAINS') {
                                            $output2 = 'Peanuts and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Sesame_Seeds'] == 'CONTAINS') {
                                            $output2 = 'Sesame Seeds and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Sulphur_Dioxide'] == 'CONTAINS') {
                                            $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Soybean'] == 'CONTAINS') {
                                            $output2 = 'Soybeans and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Celery'] == 'CONTAINS') {
                                            $output2 = 'Celery and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Mustard'] == 'CONTAINS') {
                                            $output2 = 'Mustard and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Lupine'] == 'CONTAINS') {
                                            $output2 = 'Lupine and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Molluscs'] == 'CONTAINS') {
                                            $output2 = 'Molluscs and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Wheat'] == 'CONTAINS') {
                                            if ($flag_val != 1) {
                                                $output2 = 'Wheat and its derivates';
                                                array_push($output3, $output2);
                                            }
                                        }
                                    }
                                }else{
                                    $productid = $rows['productid'];
                                    $allrgslct = mysql_query("SELECT * FROM tbl_allergen where productid='$productid'");
                                    while($alle = mysql_fetch_array($allrgslct))
                                    {
                                        $flag_val = 0;
                                        if ($alle['crustaceans'] == 'CONTAINS') {
                                            $output2 = 'Crustaceans and their derivates';

                                            array_push($output3, $output2);
                                        }
                                        if ($alle['eggs'] == 'CONTAINS') {
                                            $output2 = 'Eggs and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['fish'] == 'CONTAINS') {
                                            $output2 = 'Fish and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['milk'] == 'CONTAINS') {
                                            $output2 = 'Milk and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['nuts'] == 'CONTAINS') {
                                            $output2 = 'Nuts and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['cereals'] == 'CONTAINS') {
                                            if ($alle['wheat'] == 'CONTAINS') {
                                                $output2 = 'Cereals-Wheat';
                                                $flag_val = 1;
                                                $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                            } else {
                                                $output2 = 'Cereals containing gluten and their derivates';
                                            }
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['peanuts'] == 'CONTAINS') {
                                            $output2 = 'Peanuts and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['sesame_seeds'] == 'CONTAINS') {
                                            $output2 = 'Sesame Seeds and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['sulphur_dioxide'] == 'CONTAINS') {
                                            $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['soybean'] == 'CONTAINS') {
                                            $output2 = 'Soybeans and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['celery'] == 'CONTAINS') {
                                            $output2 = 'Celery and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['mustard'] == 'CONTAINS') {
                                            $output2 = 'Mustard and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['lupine'] == 'CONTAINS') {
                                            $output2 = 'Lupine and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['molluscs'] == 'CONTAINS') {
                                            $output2 = 'Molluscs and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['wheat'] == 'CONTAINS') {
                                            if ($flag_val != 1) {
                                                $output2 = 'Wheat and its derivates';
                                                array_push($output3, $output2);
                                            }
                                        }
                                    }
                                }
                        //$result = array_unique($output3);
                        //$arr_list = implode($result, "");
                            }
                            $custall = mysql_query("SELECT * FROM tblmenucustom WHERE menuid='$menuid'");
                            while($cstval = mysql_fetch_array($custall))
                            {
                                if ($cstval['recipecustomallergenid']) {
                                    $productid = $cstval['recipecustomallergenid'];
                                    $custname = mysql_query("SELECT * FROM tblrecipeallergen where ra_recipeallergenid='$productid'");
                                    while($alle = mysql_fetch_array($custname))
                                    {
                                        $flag_val = 0;
                                        if ($alle['ra_Crustaceans'] == 'CONTAINS') {
                                            $output2 = 'Crustaceans and their derivates';

                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Eggs'] == 'CONTAINS') {
                                            $output2 = 'Eggs and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Fish'] == 'CONTAINS') {
                                            $output2 = 'Fish and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Milk'] == 'CONTAINS') {
                                            $output2 = 'Milk and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Nuts'] == 'CONTAINS') {
                                            $output2 = 'Nuts and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Cereals'] == 'CONTAINS') {
                                            if ($alle['ra_Wheat'] == 'CONTAINS') {
                                                $output2 = 'Cereals-Wheat';
                                                $flag_val = 1;
                                                $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                            } else {
                                                $output2 = 'Cereals containing gluten and their derivates';
                                            }
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Peanuts'] == 'CONTAINS') {
                                            $output2 = 'Peanuts and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Sesame_Seeds'] == 'CONTAINS') {
                                            $output2 = 'Sesame Seeds and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Sulphur_Dioxide'] == 'CONTAINS') {
                                            $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Soybean'] == 'CONTAINS') {
                                            $output2 = 'Soybeans and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Celery'] == 'CONTAINS') {
                                            $output2 = 'Celery and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Mustard'] == 'CONTAINS') {
                                            $output2 = 'Mustard and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Lupine'] == 'CONTAINS') {
                                            $output2 = 'Lupine and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Molluscs'] == 'CONTAINS') {
                                            $output2 = 'Molluscs and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['ra_Wheat'] == 'CONTAINS') {
                                            if ($flag_val != 1) {
                                                $output2 = 'Wheat and its derivates';
                                                array_push($output3, $output2);
                                            }
                                        }
                                    }
                                }else{
                                    $custprid = $cstval['customid'];
                                    $cstname = mysql_query("SELECT * FROM tbl_allergen WHERE productid in (SELECT  productid FROM  tblcustomproingr WHERE  customid IN ('$custprid'))");
                                    while($alle = mysql_fetch_array($cstname)){
                                        $flag_val = 0;
                                        if ($alle['crustaceans'] == 'CONTAINS') {
                                            $output2 = 'Crustaceans and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['eggs'] == 'CONTAINS') {
                                            $output2 = 'Eggs and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['fish'] == 'CONTAINS') {
                                            $output2 = 'Fish and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['milk'] == 'CONTAINS') {
                                            $output2 = 'Milk and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['nuts'] == 'CONTAINS') {
                                            $output2 = 'Nuts and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['cereals'] == 'CONTAINS') {
                                            if ($alle['wheat'] == 'CONTAINS') {
                                                $output2 = 'Cereals-Wheat';
                                                $flag_val = 1;
                                                $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                            } else {
                                                $output2 = 'Cereals containing gluten and their derivates';
                                            }
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['peanuts'] == 'CONTAINS') {
                                            $output2 = 'Peanuts and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['sesame_seeds'] == 'CONTAINS') {
                                            $output2 = 'Sesame Seeds and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['sulphur_dioxide'] == 'CONTAINS') {
                                            $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['soybean'] == 'CONTAINS') {
                                            $output2 = 'Soybeans and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['celery'] == 'CONTAINS') {
                                            $output2 = 'Celery and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['mustard'] == 'CONTAINS') {
                                            $output2 = 'Mustard and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['lupine'] == 'CONTAINS') {
                                            $output2 = 'Lupine and its derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['molluscs'] == 'CONTAINS') {
                                            $output2 = 'Molluscs and their derivates';
                                            array_push($output3, $output2);
                                        }
                                        if ($alle['wheat'] == 'CONTAINS') {
                                            if ($flag_val != 1) {
                                                $output2 = 'Wheat and its derivates';
                                                array_push($output3, $output2);
                                            }
                                        }
                                    }
                                }
                            }
                            if(isset($output3))
                            {
                                $result = array_unique($output3);
                                $number = count($result);
                                if ($number == 0) {
                                    $arr_list = 'Nil';
                                } else {
                                    $arr_list = implode(',', $result);
                                }
                            }else{
                                $arr_list = 'Nil';
                            }

                            /******************************* allergen end *************************************/
                            
                            $prdcts = mysql_query("SELECT a.energykcl as calorievalue,b.*,c.* FROM tbl_nutrition1 a INNER JOIN tblmenuingredients b ON b.productid=a.productid INNER JOIN tbl_product c ON c.productid=a.productid WHERE b.menuid = '$menuid'");
                            $custprdcts = mysql_query("SELECT  productid,quentity FROM  tblcustomproingr WHERE customid IN (SELECT customid FROM  tblmenucustom WHERE  menuid ='$menuid')");
                            $fat = 0;
                            $sfa = 0;
                            $carohydrates = 0;
                            $total_sugar = 0;
                            $fiber = 0;
                            $protein = 0;
                            $salt = 0;
                            $sodium = 0;
                            $totalqnty = 0;
                            $alcohol = 0;
                            $caloriekcl = 0;
                            $calkj = 0;
                            $ingrntnme = "";
                            if(mysql_num_rows($custprdcts) > 0)
                            {
                                while($row3 = mysql_fetch_array($custprdcts))
                                {
                                    $ingrntnme[] = "Custom";
                                    $prdctid = $row3['productid'];
                                    $quantity = $row3['quentity'];
                                    $totalqnty = $totalqnty + $quantity;
                                    $fudcomb = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                                    while($row4 = mysql_fetch_array($fudcomb))
                                    {
                                        $caloriekcl = ($row4['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                        $calkj = ($row4['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;
                                        $fat = ($row4['fat'] * ($quantity / 100)) + $fat;
                                        $sfa = (($row4['sfa'] * 100) / $quantity) + $sfa;
                                        $carohydrates = ($row4['carohydrates'] * ($quantity / 100)) + $carohydrates;
                                        $total_sugar = ($row4['total_sugar'] * ($quantity / 100)) + $total_sugar;
                                        $fiber = ($row4['fibre'] * ($quantity / 100)) + $fiber;
                                        $protein = ($row4['protein'] * ($quantity / 100)) + $protein;
                                        $salt = ($row4['salt'] * ($quantity / 100)) + $salt;
                                        $sodium = ((($row4['sodium'] / 1000) * ($quantity / 100))) + $sodium;
                                        $alcohol = ($row4['alcohol'] * ($quantity / 100)) + $alcohol;
                                    }
                                }
                            }
                            if(mysql_num_rows($prdcts) > 0)
                            {
                                while($row4 = mysql_fetch_array($prdcts))
                                {
                                    $ingrntnme[] = $row4['productname'];
                                    $prdctid = $row4['productid'];
                                    $quantity = $row4['quantity'];
                                    $totalqnty = $totalqnty + $quantity;
                                    $fudcomb1 = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                                    while($row5 = mysql_fetch_array($fudcomb1))
                                    {
                                        $caloriekcl = ($row5['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                        $calkj = ($row5['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;
                                        $fat = ($row5['fat'] * ($quantity / 100)) + $fat;
                                        $sfa = (($row5['sfa'] * 100) / $quantity) + $sfa;
                                        $carohydrates = ($row5['carohydrates'] * ($quantity / 100)) + $carohydrates;
                                        $total_sugar = ($row5['total_sugar'] * ($quantity / 100)) + $total_sugar;
                                        $fiber = ($row5['fibre'] * ($quantity / 100)) + $fiber;
                                        $protein = ($row5['protein'] * ($quantity / 100)) + $protein;
                                        $salt = ($row5['salt'] * ($quantity / 100)) + $salt;
                                        $sodium = ((($row5['sodium'] / 1000) * ($quantity / 100))) + $sodium;
                                        $alcohol = ($row5['alcohol'] * ($quantity / 100)) + $alcohol;
                                    }
                                }
                            }
                            
                            if($row2['finshedweghtvalue'] == 0){
                                $totqnty = $totalqnty;
                            }else{
                                $totqnty = $row2['finshedweghtvalue'];
                            }
                            
                            $calory = round($caloriekcl * 100 / $totqnty, 0);
                            $calkj = round($calkj * 100 / $totqnty, 0);
                            
                            $fat = round($fat * 100 / $totqnty, 2);
                            $sfa = round($sfa * 100 / $totqnty, 2);
                            $carohydrates = round($carohydrates * 100 / $totqnty, 2);
                            $total_sugar = round($total_sugar * 100 / $totqnty, 2);
                            $fiber = round($fiber * 100 / $totqnty, 2);
                            $protein = round($protein * 100 / $totqnty, 2);
                            $salt = round($salt * 100 / $totqnty, 2);
                            $sodium = round($sodium * 100 / $totqnty, 2);
                            $alcohol = round($alcohol * 100 / $totqnty, 2);
                            
                            $totalnutrival = $calory + ($fat*2.25) + $sfa + $carohydrates + $total_sugar + $fiber + $protein + $salt + $sodium + ($alcohol*1.75);
                            $caloryper = round($calory * 100/$totalnutrival, 0);
                            $fatper = round($fat*2.25*100/$totalnutrival, 0);
                            $sfaper = round($sfa*100/$totalnutrival, 0);
                            $carboper = round($carohydrates*100/$totalnutrival, 0);
                            $sugarper = round($total_sugar*100/$totalnutrival, 0);
                            $fiberper = round($fiber*100/$totalnutrival, 0);
                            $proteinper = round($protein*100/$totalnutrival, 0);
                            $saltper = round($salt*100/$totalnutrival, 0);
                            $sodiumper = round($sodium*100/$totalnutrival, 0);
                            $alcoholper = round($alcohol*1.75*100/$totalnutrival, 0);
                            
                            $hstry = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' AND rf_menuids='$menuid' AND rf_mealtime='breakfast' AND rf_days='$dates' ORDER BY rf_foodupdateid DESC");
                            if(mysql_num_rows($hstry) > 0)
                            {
                                $row6 = mysql_fetch_array($hstry);
                                $foodid1 = $row6['rf_foodupdateid'];
                                $slcted1 = "1";
                            }else{
                                $foodid1 = "null";
                                $slcted1 = "0";
                            }
                            
                            $hstry = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' AND rf_menuids='$menuid' AND rf_mealtime='lunch' AND rf_days='$dates' ORDER BY rf_foodupdateid DESC");
                            if(mysql_num_rows($hstry) > 0)
                            {
                                $row6 = mysql_fetch_array($hstry);
                                $foodid2 = $row6['rf_foodupdateid'];
                                $slcted2 = "1";
                            }else{
                                $foodid2 = "null";
                                $slcted2 = "0";
                            }
                            
                            $hstry = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' AND rf_menuids='$menuid' AND rf_mealtime='tea' AND rf_days='$dates' ORDER BY rf_foodupdateid DESC");
                            if(mysql_num_rows($hstry) > 0)
                            {
                                $row6 = mysql_fetch_array($hstry);
                                $foodid3 = $row6['rf_foodupdateid'];
                                $slcted3 = "1";
                            }else{
                                $foodid3 = "null";
                                $slcted3 = "0";
                            }
                            
                            $hstry = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' AND rf_menuids='$menuid' AND rf_mealtime='dinner' AND rf_days='$dates' ORDER BY rf_foodupdateid DESC");
                            if(mysql_num_rows($hstry) > 0)
                            {
                                $row6 = mysql_fetch_array($hstry);
                                $foodid4 = $row6['rf_foodupdateid'];
                                $slcted4 = "1";
                            }else{
                                $foodid4 = "null";
                                $slcted4 = "0";
                            }
                            
                            if($row2['image'] != "" && $row2['image'] != " " && $row2['image'] != null)
                            {
                                $recimg = 'http://dev-enursing.demormc.com/public/kitchen/'.$row2['image'];
                            }
                            else{
                                $recimg = 'http://dev-enursing.demormc.com/assets/img/no_image.png';
                            }
                            
                            $recpsbreak[] = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'categoryid' => $catval['categoryid'], 'categoryname' => $catval['categoryname'], 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => $calory, 'energykj' => $calkj, 'energyper' => $caloryper, 'fat' => $fat, 'fatper' => $fatper, 'sfa' => $sfa, 'sfaper' => $sfaper, 'carbohydrates' => $carohydrates,  'carbohydratesper' => $carboper,'total_sugar' => $total_sugar, 'sugarper' => $sugarper, 'fiber' => $fiber, 'fiberper' => $fiberper, 'protein' => $protein, 'proteinper' => $proteinper, 'salt' => $salt, 'saltper' => $saltper, 'sodium' => $sodium, 'sodiumper' => $sodiumper, 'alcohol' => $alcohol, 'alcoholper' => $alcoholper, 'allergen' => $arr_list, 'selected' => $slcted1, 'foodid' => $foodid1);
                            
                            $recpslunch[] = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'categoryid' => $catval['categoryid'], 'categoryname' => $catval['categoryname'], 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => $calory, 'energykj' => $calkj, 'energyper' => $caloryper, 'fat' => $fat, 'fatper' => $fatper, 'sfa' => $sfa, 'sfaper' => $sfaper, 'carbohydrates' => $carohydrates,  'carbohydratesper' => $carboper,'total_sugar' => $total_sugar, 'sugarper' => $sugarper, 'fiber' => $fiber, 'fiberper' => $fiberper, 'protein' => $protein, 'proteinper' => $proteinper, 'salt' => $salt, 'saltper' => $saltper, 'sodium' => $sodium, 'sodiumper' => $sodiumper, 'alcohol' => $alcohol, 'alcoholper' => $alcoholper, 'allergen' => $arr_list, 'selected' => $slcted2, 'foodid' => $foodid2);
                            
                            $recpstea[] = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'categoryid' => $catval['categoryid'], 'categoryname' => $catval['categoryname'], 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => $calory, 'energykj' => $calkj, 'energyper' => $caloryper, 'fat' => $fat, 'fatper' => $fatper, 'sfa' => $sfa, 'sfaper' => $sfaper, 'carbohydrates' => $carohydrates,  'carbohydratesper' => $carboper,'total_sugar' => $total_sugar, 'sugarper' => $sugarper, 'fiber' => $fiber, 'fiberper' => $fiberper, 'protein' => $protein, 'proteinper' => $proteinper, 'salt' => $salt, 'saltper' => $saltper, 'sodium' => $sodium, 'sodiumper' => $sodiumper, 'alcohol' => $alcohol, 'alcoholper' => $alcoholper, 'allergen' => $arr_list, 'selected' => $slcted3, 'foodid' => $foodid3);
                            
                            
                            
                            $recpsdinner[] = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'categoryid' => $catval['categoryid'], 'categoryname' => $catval['categoryname'], 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => $calory, 'energykj' => $calkj, 'energyper' => $caloryper, 'fat' => $fat, 'fatper' => $fatper, 'sfa' => $sfa, 'sfaper' => $sfaper, 'carbohydrates' => $carohydrates,  'carbohydratesper' => $carboper,'total_sugar' => $total_sugar, 'sugarper' => $sugarper, 'fiber' => $fiber, 'fiberper' => $fiberper, 'protein' => $protein, 'proteinper' => $proteinper, 'salt' => $salt, 'saltper' => $saltper, 'sodium' => $sodium, 'sodiumper' => $sodiumper, 'alcohol' => $alcohol, 'alcoholper' => $alcoholper, 'allergen' => $arr_list, 'selected' => $slcted4, 'foodid' => $foodid4);

                        }
                        
                        $recipebreakarray[] = array("categoryname" => $catval['categoryname'], "recipes" => $recpsbreak);
                        $recipeluncharray[] = array("categoryname" => $catval['categoryname'], "recipes" => $recpslunch);
                        $recipeteaarray[] = array("categoryname" => $catval['categoryname'], "recipes" => $recpstea);
                        $recipedinnerarray[] = array("categoryname" => $catval['categoryname'], "recipes" => $recpsdinner);
                    }
                }
                $success = array("status" => "success", "todaydate" => $todaydate, "breakfast" => $recipebreakarray, "lunch" => $recipeluncharray, "tea" => $recipeteaarray, "dinner" => $recipedinnerarray);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No categories added.");
                $this->response($this->json($success), 200);  
                return true;
            }

        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addresidentrecipe()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        $curdate = date('Y-m-d H:i:s');
        $menuid = $this->_request['menuid'];
        $mealtime = $this->_request['mealtime'];
        $week = $this->_request['week'];
        $notes = $this->_request['notes'];
        $deviceid = $this->_request['deviceid'];
        
        $portionsize = $this->_request['portionsize'];
        $isallergic = $this->_request['isallergic'];
        
        $days = date('Y-m-d', strtotime($this->_request['date']));
        if($resid != "" && $userid != "" && $menuid != "")
        {
            $insrt = mysql_query("INSERT INTO en_residentfoodupdate(rf_resid, rf_menuids, rf_mealtime, rf_week, rf_days, rf_updatedby, rf_notes, rf_updatedon, rf_portionsize, rf_isallergic) VALUES('$resid', '$menuid', '$mealtime', '$week', '$days', '$userid', '$notes', '$curdate', '$portionsize', '$isallergic')");
            if($insrt)
            {
                $slct = mysql_query("SELECT rf_foodupdateid FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_menuids='$menuid' AND rf_mealtime = '$mealtime' AND rf_days = '$days' ORDER BY rf_foodupdateid DESC");
                $row = mysql_fetch_array($slct);
                $foodid = $row['rf_foodupdateid'];
                $success = array('status' => "success", "msg" => "Successfully updated.", "foodid" => $foodid);
                
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$userid', 'added', 'recipe', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $this->response($this->json($success), 200);  
                return true;
            }else{
                $success = array('status' => "failed", "msg" => "Error in updating food details.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getresidentfuddet()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        $week = $this->_request['week'];
        $days = date('Y-m-d', strtotime($this->_request['date']));
        if($resid != "" && $userid != "" && $week != "" && $days != "")
        {
            $slct = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' AND rf_days = '$days'");
            if(mysql_num_rows($slct) > 0)
            {
                $dtabreak = array();
                $dtalunch = array();
                $dtatea = array();
                $dtadinner = array();
                
                while($row = mysql_fetch_array($slct))
                {
                    $output3 = array();
                    $mealtime = $row['rf_mealtime'];
                    $menuid = $row['rf_menuids'];
                    $recipes = mysql_query("SELECT * FROM tblmenu WHERE menuid='$menuid'");
                    $row2 = mysql_fetch_array($recipes);
                    
                    $slctallrg = mysql_query("SELECT * FROM tblmenuingredients a INNER JOIN tbl_allergen b ON b.productid=a.productid WHERE menuid='$menuid'");
                    while($rows = mysql_fetch_array($slctallrg))
                    {
                        if ($rows['recipeallergenid']) {
                            $rcpallrgid = $rows['recipeallergenid'];
                            $allrgslct = mysql_query("SELECT * FROM tblrecipeallergen WHERE ra_recipeallergenid='$rcpallrgid'");
                            while($alle = mysql_fetch_array($allrgslct))
                            {
                                $flag_val = 0;
                                if ($alle['ra_Crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';

                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Cereals'] == 'CONTAINS') {
                                    if ($alle['ra_Wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sesame_Seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sulphur_Dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }else{
                            $productid = $rows['productid'];
                            $allrgslct = mysql_query("SELECT * FROM tbl_allergen where productid='$productid'");
                            while($alle = mysql_fetch_array($allrgslct))
                            {
                                $flag_val = 0;
                                if ($alle['crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';

                                    array_push($output3, $output2);
                                }
                                if ($alle['eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['cereals'] == 'CONTAINS') {
                                    if ($alle['wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sesame_seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sulphur_dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }
                        //$result = array_unique($output3);
                        //$arr_list = implode($result, "");
                    }
                    $custall = mysql_query("SELECT * FROM tblmenucustom WHERE menuid='$menuid'");
                    while($cstval = mysql_fetch_array($custall))
                    {
                        if ($cstval['recipecustomallergenid']) {
                            $productid = $cstval['recipecustomallergenid'];
                            $custname = mysql_query("SELECT * FROM tblrecipeallergen where ra_recipeallergenid='$productid'");
                            while($alle = mysql_fetch_array($custname))
                            {
                                $flag_val = 0;
                                if ($alle['ra_Crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';

                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Cereals'] == 'CONTAINS') {
                                    if ($alle['ra_Wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sesame_Seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sulphur_Dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }else{
                            $custprid = $cstval['customid'];
                            $cstname = mysql_query("SELECT * FROM tbl_allergen WHERE productid in (SELECT  productid FROM  tblcustomproingr WHERE  customid IN ('$custprid'))");
                            while($alle = mysql_fetch_array($cstname)){
                                $flag_val = 0;
                                if ($alle['crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['cereals'] == 'CONTAINS') {
                                    if ($alle['wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sesame_seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sulphur_dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }
                    }
                    if(isset($output3))
                    {
                        $result = array_unique($output3);
                        $number = count($result);
                        if ($number == 0) {
                            $arr_list = 'Nil';
                        } else {
                            $arr_list = implode(',', $result);
                        }
                    }else{
                        $arr_list = 'Nil';
                    }
                    
                    
                    $prdcts = mysql_query("SELECT a.energykcl as calorievalue,b.*,c.* FROM tbl_nutrition1 a INNER JOIN tblmenuingredients b ON b.productid=a.productid INNER JOIN tbl_product c ON c.productid=a.productid WHERE b.menuid = '$menuid'");
                    $custprdcts = mysql_query("SELECT  productid,quentity FROM  tblcustomproingr WHERE customid IN (SELECT customid FROM  tblmenucustom WHERE  menuid ='$menuid')");
                    $caloriekcl = 0;
                    $calkj = 0;
                    $ingrntnme = "";
                    $totalqnty = 0;
                    if(mysql_num_rows($custprdcts) > 0)
                    {
                        while($row3 = mysql_fetch_array($custprdcts))
                        {
                            $ingrntnme[] = $row3['ingredientname'];
                            $prdctid = $row3['productid'];
                            $quantity = $row3['quantity'];
                            $totalqnty = $totalqnty + $quantity;
                            $fudcomb = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                            while($row4 = mysql_fetch_array($fudcomb))
                            {
                                $caloriekcl = ($row4['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                $calkj = ($row4['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;
                                
                            }
                        }
                    }
                    if(mysql_num_rows($prdcts) > 0)
                    {
                        while($row4 = mysql_fetch_array($prdcts))
                        {
                            $ingrntnme[] = $row4['productname'];
                            $prdctid = $row4['productid'];
                            $quantity = $row4['quantity'];
                            $totalqnty = $totalqnty + $quantity;
                            $fudcomb1 = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                            while($row5 = mysql_fetch_array($fudcomb1))
                            {
                                $caloriekcl = ($row5['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                $calkj = ($row5['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;
                                
                            }
                        }
                    }
                    
                    if($row2['finshedweghtvalue'] == 0){
                        $totqnty = $totalqnty;
                    }else{
                        $totqnty = $row2['finshedweghtvalue'];
                    }
                    
                    $calory = round($caloriekcl * 100 / $totqnty, 0);
                    $calkj = round($calkj * 100 / $totqnty, 0);
                    
                    if($row2['image'] != "" && $row2['image'] != " " && $row2['image'] != null)
                    {
                        $recimg = 'http://dev-enursing.demormc.com/public/kitchen/'.$row2['image'];
                    }
                    else{
                        $recimg = 'http://dev-enursing.demormc.com/assets/img/no_image.png';
                    }

                    $recp = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => "$calory", 'energykj' => "$calkj", 'portionsize' => $row2['portionsize'], 'allergens' => $arr_list, 'takenportionsize' => $row['rf_portionsize'], 'isallergic' => $row['rf_isallergic'], 'notes' => $row['rf_notes']);
                    
                    
                    if($mealtime == 'breakfast')
                    {
                        $dtabreak[] = array('foodid' => $row['rf_foodupdateid'],'menuid' => $menuid, 'recipe' => $recp);
                    }
                    if($mealtime == 'lunch')
                    {
                        $dtalunch[] = array('foodid' => $row['rf_foodupdateid'],'menuid' => $menuid, 'recipe' => $recp);
                    }
                    if($mealtime == 'tea')
                    {
                        $dtatea[] = array('foodid' => $row['rf_foodupdateid'],'menuid' => $menuid, 'recipe' => $recp);
                    }
                    if($mealtime == 'dinner')
                    {
                        $dtadinner[] = array('foodid' => $row['rf_foodupdateid'],'menuid' => $menuid, 'recipe' => $recp);
                    }
                }
                //$dta = array("breakfast" => $dtabreak, "lunch" => $dtalunch, "tea" => $dtatea, "dinner" => $dtadinner);
                $success = array('status' => "success", "breakfast" => $dtabreak, "lunch" => $dtalunch, "tea" => $dtatea, "dinner" => $dtadinner);
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "No food details updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function getresidentfuddetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
      
        if($resid != "" && $userid != "")
        {
            $slct = mysql_query("SELECT * FROM en_residentfoodupdate WHERE rf_resid='$resid' AND rf_isactive='0' ORDER BY rf_days DESC");
            if(mysql_num_rows($slct) > 0)
            {
                $dtabreak = array();
                $dtalunch = array();
                $dtatea = array();
                $dtadinner = array();
                
                while($row = mysql_fetch_array($slct))
                {
                    $output3 = array();
                    $mealtime = $row['rf_mealtime'];
                    $menuid = $row['rf_menuids'];
                    $day = $row['rf_days'];
                    $week = $row['rf_week'];
                    $recipes = mysql_query("SELECT * FROM tblmenu WHERE menuid='$menuid'");
                    $row2 = mysql_fetch_array($recipes);
                    
                    $slctallrg = mysql_query("SELECT * FROM tblmenuingredients a INNER JOIN tbl_allergen b ON b.productid=a.productid WHERE menuid='$menuid'");
                    while($rows = mysql_fetch_array($slctallrg))
                    {
                        if ($rows['recipeallergenid']) {
                            $rcpallrgid = $rows['recipeallergenid'];
                            $allrgslct = mysql_query("SELECT * FROM tblrecipeallergen WHERE ra_recipeallergenid='$rcpallrgid'");
                            while($alle = mysql_fetch_array($allrgslct))
                            {
                                $flag_val = 0;
                                if ($alle['ra_Crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';

                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Cereals'] == 'CONTAINS') {
                                    if ($alle['ra_Wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sesame_Seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sulphur_Dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }else{
                            $productid = $rows['productid'];
                            $allrgslct = mysql_query("SELECT * FROM tbl_allergen where productid='$productid'");
                            while($alle = mysql_fetch_array($allrgslct))
                            {
                                $flag_val = 0;
                                if ($alle['crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';

                                    array_push($output3, $output2);
                                }
                                if ($alle['eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['cereals'] == 'CONTAINS') {
                                    if ($alle['wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sesame_seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sulphur_dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }
                        //$result = array_unique($output3);
                        //$arr_list = implode($result, "");
                    }
                    $custall = mysql_query("SELECT * FROM tblmenucustom WHERE menuid='$menuid'");
                    while($cstval = mysql_fetch_array($custall))
                    {
                        if ($cstval['recipecustomallergenid']) {
                            $productid = $cstval['recipecustomallergenid'];
                            $custname = mysql_query("SELECT * FROM tblrecipeallergen where ra_recipeallergenid='$productid'");
                            while($alle = mysql_fetch_array($custname))
                            {
                                $flag_val = 0;
                                if ($alle['ra_Crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';

                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Cereals'] == 'CONTAINS') {
                                    if ($alle['ra_Wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sesame_Seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Sulphur_Dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['ra_Wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }else{
                            $custprid = $cstval['customid'];
                            $cstname = mysql_query("SELECT * FROM tbl_allergen WHERE productid in (SELECT  productid FROM  tblcustomproingr WHERE  customid IN ('$custprid'))");
                            while($alle = mysql_fetch_array($cstname)){
                                $flag_val = 0;
                                if ($alle['crustaceans'] == 'CONTAINS') {
                                    $output2 = 'Crustaceans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['eggs'] == 'CONTAINS') {
                                    $output2 = 'Eggs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['fish'] == 'CONTAINS') {
                                    $output2 = 'Fish and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['milk'] == 'CONTAINS') {
                                    $output2 = 'Milk and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['nuts'] == 'CONTAINS') {
                                    $output2 = 'Nuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['cereals'] == 'CONTAINS') {
                                    if ($alle['wheat'] == 'CONTAINS') {
                                        $output2 = 'Cereals-Wheat';
                                        $flag_val = 1;
                                        $output3 = array_diff($output3, array('Cereals', 'Wheat'));
                                    } else {
                                        $output2 = 'Cereals containing gluten and their derivates';
                                    }
                                    array_push($output3, $output2);
                                }
                                if ($alle['peanuts'] == 'CONTAINS') {
                                    $output2 = 'Peanuts and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sesame_seeds'] == 'CONTAINS') {
                                    $output2 = 'Sesame Seeds and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['sulphur_dioxide'] == 'CONTAINS') {
                                    $output2 = 'Sulphur Dioxide and Sulphites and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['soybean'] == 'CONTAINS') {
                                    $output2 = 'Soybeans and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['celery'] == 'CONTAINS') {
                                    $output2 = 'Celery and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['mustard'] == 'CONTAINS') {
                                    $output2 = 'Mustard and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['lupine'] == 'CONTAINS') {
                                    $output2 = 'Lupine and its derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['molluscs'] == 'CONTAINS') {
                                    $output2 = 'Molluscs and their derivates';
                                    array_push($output3, $output2);
                                }
                                if ($alle['wheat'] == 'CONTAINS') {
                                    if ($flag_val != 1) {
                                        $output2 = 'Wheat and its derivates';
                                        array_push($output3, $output2);
                                    }
                                }
                            }
                        }
                    }
                    if(isset($output3))
                    {
                        $result = array_unique($output3);
                        $number = count($result);
                        if ($number == 0) {
                            $arr_list = 'Nil';
                        } else {
                            $arr_list = implode(',', $result);
                        }
                    }else{
                        $arr_list = 'Nil';
                    }
                    
                    
                    $prdcts = mysql_query("SELECT a.energykcl as calorievalue,b.*,c.* FROM tbl_nutrition1 a INNER JOIN tblmenuingredients b ON b.productid=a.productid INNER JOIN tbl_product c ON c.productid=a.productid WHERE b.menuid = '$menuid'");
                    $custprdcts = mysql_query("SELECT  productid,quentity FROM  tblcustomproingr WHERE customid IN (SELECT customid FROM  tblmenucustom WHERE  menuid ='$menuid')");
                    $caloriekcl = 0;
                    $calkj = 0;
                    $ingrntnme = "";
                    $totalqnty = 0;
                    if(mysql_num_rows($custprdcts) > 0)
                    {
                        while($row3 = mysql_fetch_array($custprdcts))
                        {
                            $ingrntnme[] = $row3['ingredientname'];
                            $prdctid = $row3['productid'];
                            $quantity = $row3['quantity'];
                            $totalqnty = $totalqnty + $quantity;
                            $fudcomb = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                            while($row4 = mysql_fetch_array($fudcomb))
                            {
                                $caloriekcl = ($row4['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                $calkj = ($row4['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;
                                
                            }
                        }
                    }
                    if(mysql_num_rows($prdcts) > 0)
                    {
                        while($row4 = mysql_fetch_array($prdcts))
                        {
                            $ingrntnme[] = $row4['productname'];
                            $prdctid = $row4['productid'];
                            $quantity = $row4['quantity'];
                            $totalqnty = $totalqnty + $quantity;
                            $fudcomb1 = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                            while($row5 = mysql_fetch_array($fudcomb1))
                            {
                                $caloriekcl = ($row5['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                $calkj = ($row5['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;
                                
                            }
                        }
                    }
                    
                    if($row2['finshedweghtvalue'] == 0){
                        $totqnty = $totalqnty;
                    }else{
                        $totqnty = $row2['finshedweghtvalue'];
                    }
                    
                    $calory = round($caloriekcl * 100 / $totqnty, 0);
                    $calkj = round($calkj * 100 / $totqnty, 0);
                    
                    if($row2['image'] != "" && $row2['image'] != " " && $row2['image'] != null)
                    {
                        $recimg = 'http://dev-enursing.demormc.com/public/kitchen/'.$row2['image'];
                    }
                    else{
                        $recimg = 'http://dev-enursing.demormc.com/assets/img/no_image.png';
                    }

                    $recp = array('menuid' => $menuid, 'name' => $row2['menuname'], 'image' => $recimg, 'ingredients' => implode(', ', $ingrntnme), 'energykcl' => "$calory", 'energykj' => "$calkj", 'portionsize' => $row2['portionsize'], 'allergens' => $arr_list, 'takenportionsize' => $row['rf_portionsize'], 'isallergic' => $row['rf_isallergic'], 'notes' => $row['rf_notes']);
                    
                    
                    if($mealtime == 'breakfast')
                    {
                        $dtabreak[] = array('foodid' => $row['rf_foodupdateid'],'menuid' => $menuid, 'day' => $day, 'week' => $week, 'recipe' => $recp);
                    }
                    if($mealtime == 'lunch')
                    {
                        $dtalunch[] = array('foodid' => $row['rf_foodupdateid'],'menuid' => $menuid, 'day' => $day, 'week' => $week, 'recipe' => $recp);
                    }
                    if($mealtime == 'tea')
                    {
                        $dtatea[] = array('foodid' => $row['rf_foodupdateid'],'menuid' => $menuid, 'day' => $day, 'week' => $week, 'recipe' => $recp);
                    }
                    if($mealtime == 'dinner')
                    {
                        $dtadinner[] = array('foodid' => $row['rf_foodupdateid'],'menuid' => $menuid, 'day' => $day, 'week' => $week, 'recipe' => $recp);
                    }
                }
                //$dta = array("breakfast" => $dtabreak, "lunch" => $dtalunch, "tea" => $dtatea, "dinner" => $dtadinner);
                $success = array('status' => "success", "breakfast" => $dtabreak, "lunch" => $dtalunch, "tea" => $dtatea, "dinner" => $dtadinner);
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "No food details updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function deleteresrecipe()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        $foodid = $this->_request['foodid'];
        $menuid = $this->_request['menuid'];
        $deviceid = $this->_request['deviceid'];
        $curdate = date('Y-m-d H:i:s');
        if($resid != "" && $userid != "" && $foodid != "")
        {
            $delt = mysql_query("DELETE FROM en_residentfoodupdate WHERE rf_foodupdateid='$foodid' AND rf_resid='$resid'");
            if($delt)
            {
                $success = array('status' => "success", "msg" => "Successfully deleted.");
                
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$userid', 'deleted', 'recipe', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $this->response($this->json($success), 200);  
                return true;
            }else{
                $success = array('status' => "failed", "msg" => "Error in deleting recipe.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function edirresidentfuddet()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        $foodupdateid = $this->_request['foodupdateid'];
        $menuids = $this->_request['menuids'];
        $notes = $this->_request['notes'];
        $curdate = date('Y-m-d H:i:s');
        $deviceid = $this->_request['deviceid'];
        if($resid != "" && $userid != "" && $foodupdateid != "" && $menuids != "")
        {
            $updte = mysql_query("UPDATE en_residentfoodupdate SET rf_menuids='$menuids', rf_updatedby='$userid', rf_updatedon='$curdate', rf_notes='$notes' WHERE rf_foodupdateid='$foodupdateid'");
            if($updte)
            {
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$userid', 'updated', 'recipe', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully updated.");
                $this->response($this->json($success), 200);  
                return true;
            }else{
                $success = array('status' => "failed", "msg" => "Error in updating food details.");
                $this->response($this->json($success), 200);  
                return true;
            }
            
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function residentselectedrecipe()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        $date = date('Y-m-d', strtotime($this->_request['date']));
        
        if($resid != "" && $date != "")
        {
            $recipes = mysql_query("SELECT * FROM en_residentfoodupdate a LEFT JOIN tblmenu b ON b.menuid=a.rf_menuids WHERE a.rf_resid='$resid' AND a.rf_isactive='0' AND a.rf_days='$date'");
            //echo mysql_num_rows($recipes);
            if(mysql_num_rows($recipes)>0)
            {
                while($row = mysql_fetch_array($recipes))
                {
                    $menuid = $row['rf_menuids'];
                    $prdcts = mysql_query("SELECT a.energykcl as calorievalue,b.*,c.* FROM tbl_nutrition1 a INNER JOIN tblmenuingredients b ON b.productid=a.productid INNER JOIN tbl_product c ON c.productid=a.productid WHERE b.menuid = '$menuid'");
                    $custprdcts = mysql_query("SELECT  productid,quentity FROM  tblcustomproingr WHERE customid IN (SELECT customid FROM  tblmenucustom WHERE  menuid ='$menuid')");

                    $caloriekcl = 0;
                    $calkj = 0;
                    $ingrntnme = "";
                    if(mysql_num_rows($custprdcts) > 0)
                    {
                        while($row3 = mysql_fetch_array($custprdcts))
                        {
                            $ingrntnme[] = "Custom";
                            $prdctid = $row3['productid'];
                            $quantity = $row3['quentity'];
                            $totalqnty = $totalqnty + $quantity;
                            $fudcomb = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                            while($row4 = mysql_fetch_array($fudcomb))
                            {
                                $caloriekcl = ($row4['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                $calkj = ($row4['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;

                            }
                        }
                    }
                    if(mysql_num_rows($prdcts) > 0)
                    {
                        while($row4 = mysql_fetch_array($prdcts))
                        {
                            $ingrntnme[] = $row4['productname'];
                            $prdctid = $row4['productid'];
                            $quantity = $row4['quantity'];
                            $totalqnty = $totalqnty + $quantity;
                            $fudcomb1 = mysql_query("SELECT * FROM tbl_nutrition1 WHERE productid='$prdctid'");
                            while($row5 = mysql_fetch_array($fudcomb1))
                            {
                                $caloriekcl = ($row5['energykcl'] * ($quantity / 100)) + $caloriekcl;
                                $calkj = ($row5['energykcl'] * 4.18 * ($quantity / 100)) + $calkj;

                            }
                        }
                    }

                    if($row['finshedweghtvalue'] == 0){
                        $totqnty = $totalqnty;
                    }else{
                        $totqnty = $row['finshedweghtvalue'];
                    }

                    $calory = round($caloriekcl * 100 / $totqnty, 0);
                    $calkj = round($calkj * 100 / $totqnty, 0);
                    
                    if($row['image'] != "" && $row['image'] != " " && $row['image'] != null)
                    {
                        $recimg = 'http://dev-enursing.demormc.com/public/kitchen/'.$row['image'];
                    }
                    else{
                        $recimg = 'http://dev-enursing.demormc.com/assets/img/no_image.png';
                    }
                    $recip[] = array("foodid" => $row['rf_foodupdateid'], "menuid" => $row['rf_menuids'], "mealtime" => $row['rf_mealtime'], "recipename" => $row['menuname'], "image" => $recimg, "energykj" => $calkj, "energykcl" => $calory); 
                }
                $success = array('status' => "success", "msg" => $recip);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No recipes selected.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getalluserlist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $usrs = mysql_query("SELECT * FROM en_tabluser a LEFT JOIN en_tbluertype b ON b.en_uertypeid=a.en_usertype WHERE a.en_usertype != '13' && a.en_isactive =  '0'");
            while($row = mysql_fetch_array($usrs))
            {
                $byid = $row['en_userid'];
                $usrimg = mysql_query("SELECT * FROM en_tblempphoto WHERE ep_userid='$byid' ORDER BY ep_empphotoid DESC");
                if(mysql_num_rows($usrimg)!=0)
                {
                    $row2 = mysql_fetch_array($usrimg);
                    $empimage = "http://dev-enursing.demormc.com/public/upload/userimage/".$row2['ep_imageurl'];
                    
                }
                else{
                    $empimage = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                }
                $name1 = htmlentities($row['en_firstname'] . " " . $row['en_lastname']);
                $name = ucwords(strtolower($name1));
                //$frstname = ucfirst(preg_replace('/[^A-Za-z0-9\-\']/', '', $row['en_firstname']));
                //$name = $frstname . " " . preg_replace('/[^A-Za-z0-9\-\']/', '', $row['en_lastname']);
                $userlist[] = array("userid" => $row['en_userid'], "name" => $name, "image" => $empimage, "typeid" => $row['en_usertype'], "usertype" => $row['en_usertypename'], "dob" => $row['en_dob']);
            }
            $success = array('status' => "success", "userlist" => $userlist);
            $this->response($this->json($success), 200);  
            return true;
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addcareintervention()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $namednurse = $this->_request['namednurse'];
        $namedhca = $this->_request['namedhca'];
        
        $hcagenderprefer = $this->_request['hcagenderprefer'];
        
        $preferredbedtime = $this->_request['preferredbedtime'];
        $timetogetup = $this->_request['timetogetup'];
        $bedrestduringday = $this->_request['bedrestduringday'];
        $bedrestdaytime = $this->_request['bedrestdaytime'];
        $bedrestdayduration = $this->_request['bedrestdayduration'];
        
        $personalhygieneass = $this->_request['personalhygieneass'];
        
        $mobilityassistnce = $this->_request['mobilityassistnce'];
        
        $hoist = $this->_request['hoist'];
        
        $aids = $this->_request['aids'];
        $otheraids = $this->_request['otheraids'];
        
        $continence = $this->_request['continence'];
        $padsize = $this->_request['padsize'];
        $socialcareintervention = $this->_request['socialcareintervention'];
        
        $challengingbehaviour = $this->_request['challengingbehaviour'];
        $confusion = $this->_request['confusion'];
        $memoryloss = $this->_request['memoryloss'];
        $dementia = $this->_request['dementia'];
        $nutritionval = $this->_request['nutritionval'];
        $nutritiondiet = $this->_request['nutritiondiet'];
        $nutritionother = $this->_request['nutritionother'];
        $assistancewithmeal = $this->_request['assistancewithmeal'];
        $assistancewithfluid = $this->_request['assistancewithfluid'];
        $falls = $this->_request['falls'];
        $pressuresore = $this->_request['pressuresore'];
        $aggression = $this->_request['aggression'];
        $wandering = $this->_request['wandering'];
        $selfharm = $this->_request['selfharm'];
        $malnutrition = $this->_request['malnutrition'];
        
        $dehydration = $this->_request['dehydration'];
        $safetymeasures = $this->_request['safetymeasures'];
        $typeofsafetymeasure = $this->_request['typeofsafetymeasure'];
        $restraintmeasure = $this->_request['restraintmeasure'];
        $restrainttype = $this->_request['restrainttype'];
        $restraintduration = $this->_request['restraintduration'];
        $whatpurpose = $this->_request['whatpurpose'];
        
        $riskpreventative = $this->_request['riskpreventative'];
        $preventrisks = $this->_request['preventrisks'];
        
        $nursesign = $this->_request['nursesign'];
        $nursesigndate =  date('Y-m-d', strtotime($this->_request['nursesigndate']));
        $reviewdate1 = date('Y-m-d', strtotime($this->_request['reviewdate1']));
        $reviewby1 = $this->_request['reviewby1'];
        $reviewdate2 = date('Y-m-d', strtotime($this->_request['reviewdate2']));
        $reviewby2 = $this->_request['reviewby2'];
        $curdate = date('Y-m-d H:i:s');
        
        $deviceid = $this->_request['deviceid'];
        
        if($userid != "" && $resid != "")
        {
            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device) VALUES('$userid', 'added', 'care intervention', '1', '$resid', '$curdate', 'Touch')");
            
            $insrt = mysql_query("INSERT INTO en_rescareintervention(ci_resid, ci_namednurse, ci_namedhca, ci_riskpreventivemeasure, ci_preventiverisks, ci_nursesign, ci_signdate, ci_reviewdate1, ci_reviewby1, ci_reviewdate2, ci_reviewby2, ci_updatedby, ci_uodatedon) VALUES('$resid', '$namednurse', '$namedhca', '$riskpreventative', '$preventrisks', '$nursesign', '$nursesigndate', '$reviewdate1', '$reviewby1', '$reviewdate2', '$reviewby2', '$userid', '$curdate')");
            
            $lst = mysql_query("SELECT ci_careinterventionid FROM en_rescareintervention ORDER BY ci_careinterventionid DESC LIMIT 1");
            $rw = mysql_fetch_array($lst);
            $careidd = $rw['ci_careinterventionid'];
            
            $insrt2 = mysql_query("INSERT INTO en_personalcareintervention(pi_careinterventionid, pi_expressedgender, pi_preferredtimetogetup, pi_preferredbedtime, pi_bedrestduringday, pi_bedrestdaytime, pi_bedrestdayduration, pi_personalhygiene, pi_mobilityassistance, pi_hoist, pi_aids, pi_aidsother, pi_continenece, pi_padsize, pi_specificpersonalcare) VALUES('$careidd', '$hcagenderprefer', '$timetogetup', '$preferredbedtime', '$bedrestduringday', '$bedrestdaytime', '$bedrestdayduration', '$personalhygieneass', '$mobilityassistnce', '$hoist', '$aids', '$otheraids', '$continence', '$padsize', '$socialcareintervention')");
            
            $insrt3 = mysql_query("INSERT INTO en_cognitiveability(ca_careinterventionid, ca_challengingbehaviour, ca_confusion, ca_memoryloss, ca_dementia, ca_nutritionval, ca_nutrition, ca_nutritionother, ca_requireassistancemeals, ca_requireassistancefluids) VALUES('$careidd', '$challengingbehaviour', '$confusion', '$memoryloss', '$dementia', '$nutritionval', '$nutritiondiet', '$nutritionother', '$assistancewithmeal', '$assistancewithfluid')");
            
            $insrt4 = mysql_query("INSERT INTO en_riskfactorsintervention(rf_careinterventionid, rf_falls, rf_pressuresores, rf_aggression, rf_wandering, rf_selfharm, rf_malnutrition, rf_dehydration, rf_consentedsafety, rf_typeofsafetymeasure, rf_consentedrestraint, rf_restrainttype, rf_restraintduration, rf_forwhatpurpose) VALUES('$careidd', '$falls', '$pressuresore', '$aggression', '$wandering', '$selfharm', '$malnutrition', '$dehydration', '$safetymeasures', '$typeofsafetymeasure', '$restraintmeasure', '$restrainttype', '$restraintduration', '$whatpurpose')");
            
            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$userid', 'added', 'careintervention', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
            
            $success = array('status' => "success", "msg" => "Successfully added.");
            $this->response($this->json($success), 200);  
            return true;
            
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function viewcareintervention()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($userid != "" && $resid != "")
        {
            $slct = mysql_query("SELECT * FROM en_rescareintervention a INNER JOIN en_personalcareintervention b ON b.pi_careinterventionid=a.ci_careinterventionid INNER JOIN en_cognitiveability c ON c.ca_careinterventionid=a.ci_careinterventionid INNER JOIN en_riskfactorsintervention d ON d.rf_careinterventionid=a.ci_careinterventionid WHERE a.ci_resid='$resid' AND a.ci_isactive='0' ORDER BY a.ci_careinterventionid DESC LIMIT 1");
            if(mysql_num_rows($slct) > 0)
            {
                $row = mysql_fetch_array($slct);
                
                $nursesign = $row['ci_nursesign'];
                $nurse = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$nursesign'");
                $row1 = mysql_fetch_array($nurse);
                $name1 = htmlentities($row1['en_firstname'] . " " . $row1['en_lastname']);
                $nursesignname = ucwords(strtolower($name1));
                //$nursesignname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row1['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row1['en_lastname']);
                
                $reviewby1 = $row['ci_reviewby1'];
                $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$reviewby1'");
                $row2 = mysql_fetch_array($nurse1);
                $name2 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                $reviewby1name = ucwords(strtolower($name2));
                //$reviewby1name = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                
                $reviewby2 = $row['ci_reviewby2'];
                $nurse2 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$reviewby2'");
                $row3 = mysql_fetch_array($nurse2);
                $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                $reviewby2name = ucwords(strtolower($name3));
                //$reviewby2name = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                
                $updatedby = $row['ci_updatedby'];
                $nurse3 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$updatedby'");
                $row4 = mysql_fetch_array($nurse3);
                $name4 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                $updatedbyname = ucwords(strtolower($name4));
                //$updatedbyname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                
                $msg = array("interventionid" => $row['ci_careinterventionid'], "namednurse" => $row['ci_namednurse'], "namedhca" => $row['ci_namedhca'], "riskpreventivemeasure" => $row['ci_riskpreventivemeasure'], "preventiverisks" => $row['ci_preventiverisks'], "nursesign" => $nursesignname, "signdate" => $row['ci_signdate'], "reviewdate1" => $row['ci_reviewdate1'], "reviewby1" => $reviewby1name, "reviewdate2" => $row['ci_reviewdate2'], "reviewby2" => $reviewby2name, "updatedby" => $updatedbyname, "updatedon" => $row['ci_uodatedon'], "expressedgender" => $row['pi_expressedgender'], "preferredtimetogetup" => $row['pi_preferredtimetogetup'], "preferredbedtime" => $row['pi_preferredbedtime'], "bedrestduringday" => $row['pi_bedrestduringday'], "bedrestdaytime" => $row['pi_bedrestdaytime'], "bedrestdayduration" => $row['pi_bedrestdayduration'], "personalhygiene" => $row['pi_personalhygiene'], "mobilityassistance" => $row['pi_mobilityassistance'], "hoist" => $row['pi_hoist'], "aids" => $row['pi_aids'], "aidsother" => $row['pi_aidsother'], "continenece" => $row['pi_continenece'], "padsize" => $row['pi_padsize'], "specificpersonalcare" => $row['pi_specificpersonalcare'], "challengingbehaviour" => $row['ca_challengingbehaviour'], "confusion" => $row['ca_confusion'], "memoryloss" => $row['ca_memoryloss'], "dementia" => $row['ca_dementia'], "nutritionval" => $row['ca_nutritionval'], "nutrition" => $row['ca_nutrition'], "nutritionother" => $row['ca_nutritionother'], "requireassistancemeals" => $row['ca_requireassistancemeals'], "requireassistancefluids" => $row['ca_requireassistancefluids'], "falls" => $row['rf_falls'], "pressuresores" => $row['rf_pressuresores'], "aggression" => $row['rf_aggression'], "wandering" => $row['rf_wandering'], "selfharm" => $row['rf_selfharm'], "malnutrition" => $row['rf_malnutrition'], "dehydration" => $row['rf_dehydration'], "consentedsafety" => $row['rf_consentedsafety'], "typeofsafetymeasure" => $row['rf_typeofsafetymeasure'], "consentedrestraint" => $row['rf_consentedrestraint'], "restrainttype" => $row['rf_restrainttype'], "restraintduration" => $row['rf_restraintduration'], "forwhatpurpose" => $row['rf_forwhatpurpose']);
                
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "No intervention added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function hoistlocations()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $selct = mysql_query("SELECT * FROM en_hoistlocations WHERE hl_isactive='0'");
            if(mysql_num_rows($selct) > 0)
            {
                while($row = mysql_fetch_array($selct))
                {
                    $actlc[] = array("locationid" => $row['hl_hoistlocationid'], "location" => $row['hl_location'], "description" => $row['hl_description']);
                }
                $success = array('status' => "success", "msg" => $actlc);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No hoist locations added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
        
    }
    
    private function addhoistsafetychecklist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $curdate = date('Y-m-d H:i:s');
        
        $date = date('Y-m-d', strtotime($this->_request['date']));
        $time = date('H:i:s', strtotime($this->_request['time']));
        $location = $this->_request['location'];
        if($location == 0)
        {
            $otherlocation = $this->_request['otherlocation'];
        }
        else{
            $otherlocation = "";
        }
        $assistedby = $this->_request['assistedby'];
        $equipmentintact = $this->_request['equipmentintact'];
        $batterycharged = $this->_request['batterycharged'];
        $brakesworking = $this->_request['brakesworking'];
        $correctslingsize = $this->_request['correctslingsize'];
        $recievetraining = $this->_request['recievetraining'];
        $message = $this->_request['message'];
        $deviceid = $this->_request['deviceid'];
        
        if($userid != "" && $resid != "" && $date != "" && $time != "" && $location != "")
        {
            $insert = mysql_query("INSERT INTO en_hoistsafetychecklist(hs_resid, hs_hoistdate, hs_hoisttime, hs_location, hs_assistedby, hs_equipmentintact, hs_batterycharged, hs_brakesworking, hs_correctslingsize, hs_recievetraining, hs_message, hs_updatedby, hs_updatedon, hs_otherlocation) VALUES('$resid', '$date', '$time', '$location', '$assistedby', '$equipmentintact', '$batterycharged', '$brakesworking', '$correctslingsize', '$recievetraining', '$message', '$userid', '$curdate', '$otherlocation')");
            if($insert)
            {
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Hoist Safety Checklist'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $safeme = date('d-M-Y', strtotime($date)) . " " . date('H:i', strtotime($time));

                    $reportdata = "Hoist Safety Checklist - Location: " . $location . ", Time:  " . $safeme . ",    Equipment Intact: " . $equipmentintact . ", Battery Charged: " . $batterycharged . ", Brakes Working: " . $brakesworking . ", Correct Sling Size: " . $correctslingsize . ", Receive Training: " . $recievetraining . ", Comments: " . $message;
                    $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$userid', '$curdate', '$resid', 'regular', '1', '1')");

                }

                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$userid', 'added', 'hoist safety checklist', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully added Hoist safety checklist information.");
                $this->response($this->json($success), 200);  
                return true;
            }else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function hoistsafetychecklisthistory()
    {
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $slct = mysql_query("SELECT * FROM en_hoistsafetychecklist WHERE hs_resid = '$resid' AND hs_isactive = '0' ORDER BY hs_hoistsafetyid DESC");
            if(mysql_num_rows($slct) > 0)
            {
                while($row = mysql_fetch_array($slct))
                {
                    $updtdby = $row['hs_updatedby'];
                    $nurse = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$updtdby'");
                    $row1 = mysql_fetch_array($nurse);
                    $name1 = htmlentities($row1['en_firstname'] . " " . $row1['en_lastname']);
                    $updatednurse = ucwords(strtolower($name1));
                    //$updatednurse = preg_replace('/[^A-Za-z0-9\-\']/', '',$row1['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row1['en_lastname']);
                    
                    $assistedbyar = explode(',',$row['hs_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $name2 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                            $assistenursear[] = ucwords(strtolower($name2));
                            //$assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    if($row['hs_location'] != '0')
                    {
                        
                        $locid = $row['hs_location'];
                        if (is_numeric($locid)) {
                            $slctloc = mysql_query("SELECT * FROM en_hoistlocations WHERE hl_hoistlocationid='$locid'");
                            $locrw = mysql_fetch_array($slctloc);
                            $location = $locrw['hl_location'];
                        }
                        else{
                            $location = $locid;
                        }
                    }
                    else{
                        $location = $row['hs_otherlocation'];
                    }
                    
                    $chklists[] = array("hoistid" => $row['hs_hoistsafetyid'],"hoistdate" => $row['hs_hoistdate'], "hoisttime" => $row['hs_hoisttime'], "location" => $location, "assitedby" => $assistenurse, "equipmentintact" => $row['hs_equipmentintact'], "batterycharged" => $row['hs_batterycharged'], "brakesworking" => $row['hs_brakesworking'], "correctslingsize" => $row['hs_correctslingsize'], "recievetraining" => $row['hs_recievetraining'], "message" => $row['hs_message'], "updatednurse" => $updatednurse);
                }
                $success = array('status' => "success", "msg" => $chklists);
                $this->response($this->json($success), 200);  
                return true;
            }else{
                $success = array('status' => "failed", "msg" => "No hoist safety checklist added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function hoistsafetychecklisthistorypage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        if($resid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $slct = mysql_query("SELECT * FROM en_hoistsafetychecklist WHERE hs_resid = '$resid' AND hs_isactive = '0' ORDER BY hs_hoistsafetyid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT hs_hoistsafetyid FROM en_hoistsafetychecklist WHERE hs_resid='$resid' AND hs_isactive='0'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($slct) > 0)
            {
                while($row = mysql_fetch_array($slct))
                {
                    $updtdby = $row['hs_updatedby'];
                    $nurse = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$updtdby'");
                    $row1 = mysql_fetch_array($nurse);
                    $name1 = htmlentities($row1['en_firstname'] . " " . $row1['en_lastname']);
                    $updatednurse = ucwords(strtolower($name1));
                    //$updatednurse = preg_replace('/[^A-Za-z0-9\-\']/', '',$row1['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row1['en_lastname']);
                    
                    $assistedbyar = explode(',',$row['hs_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $name2 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                            $assistenursear[] = ucwords(strtolower($name2));
                            //$assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    if($row['hs_location'] != '0')
                    {
                        
                        $locid = $row['hs_location'];
                        if (is_numeric($locid)) {
                            $slctloc = mysql_query("SELECT * FROM en_hoistlocations WHERE hl_hoistlocationid='$locid'");
                            $locrw = mysql_fetch_array($slctloc);
                            $location = $locrw['hl_location'];
                        }
                        else{
                            $location = $locid;
                        }
                    }
                    else{
                        $location = $row['hs_otherlocation'];
                    }
                    
                    $chklists[] = array("hoistid" => $row['hs_hoistsafetyid'],"hoistdate" => $row['hs_hoistdate'], "hoisttime" => $row['hs_hoisttime'], "location" => $location, "assitedby" => $assistenurse, "equipmentintact" => $row['hs_equipmentintact'], "batterycharged" => $row['hs_batterycharged'], "brakesworking" => $row['hs_brakesworking'], "correctslingsize" => $row['hs_correctslingsize'], "recievetraining" => $row['hs_recievetraining'], "message" => $row['hs_message'], "updatednurse" => $updatednurse);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $chklists);
                $this->response($this->json($success), 200);  
                return true;
            }else{
                $success = array('status' => "failed", "msg" => "No hoist safety checklist added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function activitylocations()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $selct = mysql_query("SELECT * FROM en_activitylocations WHERE al_isactive='0'");
            if(mysql_num_rows($selct) > 0)
            {
                while($row = mysql_fetch_array($selct))
                {
                    $actlc[] = array("locationid" => $row['al_actlocationid'], "location" => $row['al_location'], "description" => $row['al_description']);
                }
                $success = array('status' => "success", "msg" => $actlc);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No activity locations added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function socialactivities()
    {
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $selct = mysql_query("SELECT * FROM en_socialactivities WHERE sa_isactive='0'");
            if(mysql_num_rows($selct) > 0)
            {
                $sunar = array();
                $monar = array();
                $tuear = array();
                $wedar = array();
                $thuar = array();
                $friar = array();
                $satar = array();
                while($row = mysql_fetch_array($selct))
                {
                    //$acttime = date('H:i', strtotime($row['sa_time']));
                    $upddate = date('d-M-Y H:i', strtotime($row['sa_updatedon']));
                    $activity = preg_replace('/&[^A-Za-z0-9\-\']/', ' ', $row['sa_activity']);
                    $description = preg_replace('/[^A-Za-z0-9\-\']/', ' ', $row['sa_description']);
                    $sunar[] = array("activityid" => $row['sa_socialactivityid'], "activity" => $activity, "activitycode" => $row['sa_activitycode'], "description" => $description, "updateddate" => $upddate);
                    /*if($row['sa_day'] == 'Sunday')
                    {
                        
                        $sunar[] = array("activityid" => $row['sa_socialactivityid'], "serialno" => $row['sa_serialnumber'], "time" => $acttime, "activity" => $activity, "activitycode" => $row['sa_activitycode'], "description" => $description, "updateddate" => $upddate);
                    }
                    if($row['sa_day'] == 'Monday')
                    {
                        
                        $monar[] = array("activityid" => $row['sa_socialactivityid'], "serialno" => $row['sa_serialnumber'], "time" => $acttime, "activity" => $activity, "activitycode" => $row['sa_activitycode'], "description" => $description, "updateddate" => $upddate);
                    }
                    if($row['sa_day'] == 'Tuesday')
                    {
                        
                        $tuear[] = array("activityid" => $row['sa_socialactivityid'], "serialno" => $row['sa_serialnumber'], "time" => $acttime, "activity" => $activity, "activitycode" => $row['sa_activitycode'], "description" => $description, "updateddate" => $upddate);
                    }
                    if($row['sa_day'] == 'Wednesday')
                    {
                        
                        $wedar[] = array("activityid" => $row['sa_socialactivityid'], "serialno" => $row['sa_serialnumber'], "time" => $acttime, "activity" => $activity, "activitycode" => $row['sa_activitycode'], "description" => $description, "updateddate" => $upddate);
                    }
                    if($row['sa_day'] == 'Thursday')
                    {
                        
                        $thuar[] = array("activityid" => $row['sa_socialactivityid'], "serialno" => $row['sa_serialnumber'], "time" => $acttime, "activity" => $activity, "activitycode" => $row['sa_activitycode'], "description" => $description, "updateddate" => $upddate);
                    }
                    if($row['sa_day'] == 'Friday')
                    {
                        
                        $friar[] = array("activityid" => $row['sa_socialactivityid'], "serialno" => $row['sa_serialnumber'], "time" => $acttime, "activity" => $activity, "activitycode" => $row['sa_activitycode'], "description" => $description, "updateddate" => $upddate);
                    }
                    if($row['sa_day'] == 'Saturday')
                    {
                        
                        $satar[] = array("activityid" => $row['sa_socialactivityid'], "serialno" => $row['sa_serialnumber'], "time" => $acttime, "activity" => $activity, "activitycode" => $row['sa_activitycode'], "description" => $description, "updateddate" => $upddate);
                    }*/
                }
                
                $success = array('status' => "success", "msg" => $sunar);
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "No activities added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addressocialactivity()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $activityid = $this->_request['activityid'];
        $participationlevel = $this->_request['participationlevel'];
        $day = $this->_request['day'];
        $date = date('Y-m-d H:i:s', strtotime($this->_request['date']));
        
        $resmessage = $this->_request['resmessage'];
        
        $message = $this->_request['message'];
        $location = $this->_request['location'];
        if($location == 0)
        {
            $otherlocation = $this->_request['otherlocation'];
        }else{
            $otherlocation = "";
        }
        $deviceid = $this->_request['deviceid'];
        $groupid = $this->_request['groupid'];
        $groupmessage = $this->_request['groupmessage'];
        
        $curdate = date('Y-m-d H:i:s');
        if($userid != "" && $activityid != "" && $date != "")
        {
            if($resid != "")
            {
                $insrt = mysql_query("INSERT INTO en_ressocialactivity(ra_resids, ra_activityids, ra_day, ra_date, ra_userid, ra_updatedon, ra_message, ra_location, ra_otherlocation, ra_resmessage, ra_participationlevel) VALUES('$resid', '$activityid', '$day', '$date', '$userid', '$curdate', '$message', '$location', '$otherlocation', '$resmessage', '$participationlevel')");
            }
            if($groupid != "")
            {
                $groupidarr = explode(',', $groupid);
                $groupmessagearr = explode('#', $groupmessage);
                $k=0;
                foreach($groupidarr as $grpval)
                {
                    $grpdet = mysql_query("SELECT * FROM en_socialresgroup WHERE srg_resgroupid='$grpval'");
                    while($row = mysql_fetch_array($grpdet))
                    {
                        $residval = $row['srg_resids'];
                        $residarr = explode(',', $row['srg_resids']);
                        $messgearr = array();
                        foreach($residarr as $grsval)
                        {
                            $messgearr[] = $groupmessagearr[$k];
                        }
                        $grpmessage = implode('#', $messgearr);
                        $insrt = mysql_query("INSERT INTO en_ressocialactivity(ra_resids, ra_activityids, ra_day, ra_date, ra_userid, ra_updatedon, ra_message, ra_location, ra_otherlocation, ra_participationlevel) VALUES('$residval', '$activityid', '$day', '$date', '$userid', '$curdate', '$groupmessagearr[$k]', '$location', '$otherlocation', '$participationlevel')");
                    }
                    $k++;
                }
            }
            
            if($insrt)
            {
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, activityfor, logtime, device, deviceid) VALUES('$userid', 'added', 'social activity', '1', '$resid', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully updated resident activities.");
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function ressocialactivityhistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $todaydate = date('Y-m-d');
        if($userid != "")
        {
            $days_ago = date('Y-m-d', strtotime('-7 days', strtotime($todaydate)));
            $getact = mysql_query("SELECT * FROM en_ressocialactivity WHERE ra_date>='$days_ago' ORDER BY ra_date ASC");
            if(mysql_num_rows($getact)>0)
            {
                $predate = "";
                $k = 1;
                while($row = mysql_fetch_array($getact))
                {
                    $resids = $row['ra_resids'];
                    $locid = $row['ra_location'];
                    $resmessage = $row['ra_resmessage'];
                    $participationlevel = $row['ra_participationlevel'];
                    
                    $updby = $row['ra_userid'];
                    $userdet = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$updby'");
                    $row6 = mysql_fetch_array($userdet);
                    $name2 = htmlentities($row6['en_firstname'] . " " . $row6['en_lastname']);
                    $updatedby = ucwords(strtolower($name2));
                    //$updatedby = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row6['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row6['en_lastname']);
                    
                    if($locid == 0)
                    {
                        $location = $row['ra_otherlocation'];
                    }
                    else{
                        $actloc = mysql_query("SELECT * FROM en_activitylocations WHERE al_actlocationid='$locid'");
                        $row5 = mysql_fetch_array($actloc);
                        $location = $row5['al_location'];
                    }
                    
                    if($row['ra_date'] != $predate)
                    {
                        if($k >1)
                        {
                            //echo $k . "<br/>";
                            $actvtes[] = $resactvity;
                        }
                        $resactvity = array();
                        $act = array();
                        $actid = array();
                        $residar = array();
                        
                    }else{
                        
                    }
                    $activityids = explode(',',$row['ra_activityids']);
                    $resmessages = explode('#', $resmessage);
                    $partlevels = explode('#', $participationlevel);
                    
                    $resarray = explode(',', $resids);
                    $msg = 0;
                    foreach($resarray as $resval)
                    {
                        
                        if($row['ra_date'] != $predate)
                        {
                            ${"act" . $resval} = array();
                            ${"actid" . $resval} = array();
                        }
                        $key = array_search($resval,$residar);
                        //print_r($residar);
                        //echo "<br/>" . $row['ra_date'];
                        
                        //echo($resval) . "<br/>";
                        //print_r($residar);
                        
                        if(isset($resmessages[$msg]))
                        {
                            $rsmsg = $resmessages[$msg];
                        }
                        else{
                            $rsmsg = "";
                        }
                        if(isset($partlevels[$msg]))
                        {
                            $rslevel = $partlevels[$msg];
                        }
                        else{
                            $rslevel = "";
                        }
                        
                        if(!in_array($resval, $residar))
                        {
                            ${"act" . $resval} = array();
                            ${"actid" . $resval} = array();
                            foreach($activityids as $actval)
                            {
                                $actvtyarr = explode('#', $actval);
                                ${"actid" . $resval}[] = $actvtyarr[0];
                                if(is_numeric($actvtyarr[0]))
                                {
                                    $actvtyid = $actvtyarr[0];
                                    $actdet = mysql_query("SELECT * FROM en_socialactivities WHERE sa_socialactivityid='$actval'");
                                    $row2 = mysql_fetch_array($actdet);
                                    $activity = preg_replace('/&[^A-Za-z0-9\-\']/', ' ', $row2['sa_activity']);
                                    $actcode = $row2['sa_activitycode'];
                                }else{
                                    $activity = $actvtyarr[0];
                                    $actcode = $actvtyarr[0];
                                }
                                
                                ${"act" . $resval}[] = array("day" => $row['ra_day'], "date" => $row['ra_date'], "activityid" => $actvtyarr[0], "activity" => $activity, "activitycode" => $actcode, "activitytime" => $actvtyarr[1], "location" => $location, "resmessage" => $rsmsg, "participationlevel" => $rslevel, "note" => $row['ra_message'], "updatedby" => $updatedby);
                                
                            }
                            $resdet = mysql_query("SELECT * FROM en_resbasicinfo WHERE residentadmissionid='$resval'");
                            $row3 = mysql_fetch_array($resdet);

                            $ward = mysql_query("SELECT * FROM en_wardbeds wb INNER JOIN en_wards w ON wb.wardid=w.wardid  WHERE wb.residentid='$resval'");
                            $wrdcnt = mysql_num_rows($ward);
                            if($wrdcnt>0)
                            {
                                $wrow = mysql_fetch_array($ward);
                                $wardname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$wrow['wardname']);
                                $bednumber = $wrow['bedno'];
                            }
                            else{
                                $wardname = "Not assigned";
                                $bednumber = "Not assigned";
                            }
                            $name3 = htmlentities($row3['res_firstname'] . " " . $row3['res_surname']);
                            $resname = ucwords(strtolower($name3));
                        //$resname =  preg_replace('/[^A-Za-z0-9\-\']/', ' ', $row3['res_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', ' ', $row3['res_surname']);
                            $resactvity[] = array("resid" => $resval, "name" => $resname, "ward" => $wardname, "bed" => $bednumber, "activities" => ${"act" . $resval});
                            //print_r($resactvity);
                            //echo "<br/>";
                            $residar[] = $resval;
                        }else{
                            //echo $resval;
                            foreach($activityids as $actval)
                            {
                                if(!in_array($actval, ${"actid" . $resval}))
                                {
                                    $actvtyarr = explode('#', $actval);
                                    ${"actid" . $resval}[] = $actvtyarr[0];
                                    if(is_numeric($actvtyarr[0]))
                                    {
                                        $actvtyid = $actvtyarr[0];
                                        $actdet = mysql_query("SELECT * FROM en_socialactivities WHERE sa_socialactivityid='$actval'");
                                        $row2 = mysql_fetch_array($actdet);
                                        $activity = preg_replace('/&[^A-Za-z0-9\-\']/', ' ', $row2['sa_activity']);
                                        $actcode = $row2['sa_activitycode'];
                                    }
                                    else{
                                        $activity = $actvtyarr[0];
                                        $actcode = $actvtyarr[0];
                                    }
                                    ${"act" . $resval}[] = array("day" => $row['ra_day'], "date" => $row['ra_date'], "activityid" => $actvtyarr[0], "activity" => $activity, "activitycode" => $actcode, "activitytime" => $actvtyarr[1], "location" => $location, "resmessage" => $rsmsg,  "participationlevel" => $rslevel, "note" => $row['ra_message'], "updatedby" => $updatedby);
                                }
                            }
                            //print_r(${"act" . $resval});
                            $resactvity[$key]['activities'] = ${"act" . $resval};
                        }
                        
                        $predate = $row['ra_date']; 
                        $msg++;
                    }
                    //echo $predate . "--";
                    //echo $row['ra_date'];
                    if(mysql_num_rows($getact) == $k)
                    {
                        $actvtes[] = $resactvity;
                    }
                    $predate = $row['ra_date']; 
                    $preday = $row['ra_day'];
                    $k++;
                }
                $reslastary = array();
                foreach($actvtes as $lstval)
                {
                    foreach($lstval as $scndval)
                    {
                        //print_r($scndval);
                        if(!in_array($scndval['resid'], $reslastary))
                        {
                            
                            $reslastary[] = $scndval['resid'];
                            $newarray[] = $scndval;
                        }else{
                            $key = array_search($scndval['resid'],$reslastary);
                            $actvty = array_merge($newarray[$key]['activities'], $scndval['activities']);
                            $newarray[$key]['activities'] = $actvty;
                        }
                        
                        
                    }
                }
                foreach ($newarray as $key => $row) {
                    $volume[$key]  = $row['bed'];
                }
                array_multisort($volume, SORT_ASC, $newarray);

                $success = array('status' => "success", "msg" => $newarray);
                $this->response($this->json($success), 200);  
                return true;
            }else{
                $success = array('status' => "failed", "msg" => "No previous history available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function residentdailyreports()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $todaydate = date('Y-m-d');
        $predate = date('Y-m-d',strtotime("-1 days"));;
        
        if($resid != "" && $userid != "")
        {
            $rprtype = mysql_query("SELECT * FROM en_reporttype");
            if(mysql_num_rows($rprtype)>0)
            {
                $reportlst = array();
                while($row= mysql_fetch_array($rprtype))
                {
                    $type = $row['rp_reporttype'];
                    $rprtid = $row['reporttypeid'];
                    
                    $reports = mysql_query("SELECT * FROM en_dailyreport WHERE reporttypeid='$rprtid' AND dr_resid='$resid' AND DATE(dr_addedon)>='$predate' ORDER BY reportid DESC");
                    if(mysql_num_rows($reports)>0)
                    {
                        $rprts = array();
                        while($row2 = mysql_fetch_array($reports))
                        {
                            $usid = $row2['dr_addedby'];
                            $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                            if(mysql_num_rows($usr)>0)
                            {
                                $row3 = mysql_fetch_array($usr);
                                $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                                $empname = ucwords(strtolower($name1));
                                //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_lastname']);
                            }
                            else{
                                $empname = "";
                            }
                            $rprts[] = array('reportid' => $row2['reportid'], 'priority' => $row2['dr_priority'], 'report' => $row2['dr_report'], 'addedon' => $row2['dr_addedon'], 'addedby' => $empname, 'reporttype' => $row['rp_reporttype'], 'typeid' => $rprtid);
                        }
                        $reportlst[] = $rprts;
                    }
                    
                }
                
                $success = array('status' => "success", "msg" => $reportlst);
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "No reports updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function recordwound()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $isoffline = $this->_request['isoffline'];
        if($isoffline == '1')
        {
            $todaydate = date('Y-m-d H:i:s', strtotime($this->_request['updateddate']));
        }
        else{
            $todaydate = date('Y-m-d H:i:s');
        }
        $woundname = $this->_request['woundname'];
        $typeofwound = $this->_request['typeofwound'];
        $woundlocation = $this->_request['woundlocation'];
        
        if($userid != "" && $resid != "" && $woundname != "" && $typeofwound != "" && $woundlocation != "")
        {
            $history = $this->_request['causeofwound'];
            
            $lstwn = mysql_query("SELECT wp_woundidentificationno FROM en_woundposition WHERE wp_resid='$resid' AND wp_woundid IS NOT NULL ORDER BY wp_positionid DESC LIMIT 1");
            if(mysql_num_rows($lstwn) > 0)
            {
                $row2 = mysql_fetch_array($lstwn);
                $lasrwndid = $row2['wp_woundidentificationno'];
            }
            else{
                $lasrwndid = 0;
            }
            
            $woundid = $lasrwndid + 1;
            
            $subtypeofwound = $this->_request['subtypeofwound'];
            $xcordinate = $this->_request['xcordinate']*0.68;
            $ycordinate = $this->_request['ycordinate']*0.69;
            
            $widthunit = $this->_request['widthunit'];
            if($widthunit == 'cm')
            {
                $width = $this->_request['width'] * 10;
            }
            else{
                $width = $this->_request['width'];
            }
            $heightunit = $this->_request['heightunit'];
            if($heightunit == 'cm')
            {
                $height = $this->_request['height']*10;
            }
            else{
                $height = $this->_request['height'];
            }
            $depthunit = $this->_request['depthunit'];
            if($depthunit == 'cm')
            {
                $depth = $this->_request['depth']*10;
            }
            else{
                $depth = $this->_request['depth'];
            }
            $comments = $this->_request['comments'];
            
            $firstreviewdate = date('Y-m-d H:i:s', strtotime($this->_request['firstreviewdate']));
            $duration = $this->_request['duration'];
            $factors = $this->_request['factors'];
            /*$allergies = $this->_request['allergies'];*/
            
            $reftvn = $this->_request['reftvn'];
            $tvndate = date('Y-m-d', strtotime($this->_request['tvndate']));
            $refphysio = $this->_request['refphysio'];
            $physiodate = date('Y-m-d', strtotime($this->_request['physiodate']));
            $refpodi = $this->_request['refpodi'];
            $podidate = date('Y-m-d', strtotime($this->_request['podidate']));
            $refdiet = $this->_request['refdiet'];
            $dietdate = date('Y-m-d', strtotime($this->_request['dietdate']));
            $refother = $this->_request['refother'];
            
            $signature = $this->_request['signature'];
            $signdate = date('Y-m-d H:i:s', strtotime($this->_request['signdate']));
            
            $nutrition = $this->_request['nutrition'];
            $dressing = $this->_request['allergiesdressing'];
            $drugs = $this->_request['allergiesdrugs'];
            $allergiesother = $this->_request['allergiesother'];
            $bp =  $this->_request['bp'];
            $urinalysis = $this->_request['urinalysis'];
            $bloodsugar = $this->_request['bloodsugar'];
            $observationresult = $this->_request['observationresult'];
            
            /**** treatplans ***********/
            $treatmentobjective =  $this->_request['treatmentobjective'];
            $cleaningsolution =  $this->_request['cleaningsolution'];
            $hydrationskin =  $this->_request['hydrationskin'];
            $primarydressing =  $this->_request['primarydressing'];
            $secondarydressing =  $this->_request['secondarydressing'];
            $securingdressing =  $this->_request['securingdressing'];
            $compressiontherapy =  $this->_request['compressiontherapy'];
            $frequencydressing =  $this->_request['frequencydressing'];
            $patienteducation =  $this->_request['patienteducation'];
            $removalofsutures =  $this->_request['removalofsutures'];
            
            /******* treatplan end ******************/
            
            $imagear = explode(',', $this->_request['woundimage']);
            
            if($imagear != "")
            {
                $newfilenamear = array();
                $wn=1;
                foreach($imagear as $image)
                {
                    if($image != "")
                    {
                        $target_dir = "../public/upload/woundattchmnt/";
                        //$temp = explode(".", $_FILES["resimage"]["name"]);
                        //$newfilename = round(microtime(true)) . '.' . end($temp);
                        $filenameup = round(microtime(true)) . '-'. $wn .'.jpg';
                        $newfilenamear[] = $filenameup;
                        
                        $target_file = $target_dir . $filenameup;
                        //if (move_uploaded_file($_FILES["resimage"]["tmp_name"], $target_file)) {
                        file_put_contents($target_file,base64_decode($image));
                    }
                    $wn++;
                }
                $newfilename = implode(',', $newfilenamear);
            }
            else{
                $newfilename = "";
            }
            
            $insrtpos = mysql_query("INSERT INTO en_woundposition(wp_resid, wp_woundlocation, wp_xcordinate, wp_ycordinate, wp_width, wo_height, wp_depth, wp_comments, wp_updatedby, wp_updatedon, wp_woundidentificationno) VALUES('$resid', '$woundlocation', '$xcordinate', '$ycordinate', '$width', '$height', '$depth', '$comments', '$userid', '$todaydate', '$woundid')");
            $positionid = mysql_insert_id();
            
            $insrtwnd = mysql_query("INSERT INTO en_woundrecords(wr_positionid, wr_resid, wr_woundname, wr_typeofwound, wr_woundlocation, wr_history, wr_durationofwound, wr_factorshealing, wr_allergies, wr_referredtvn, wr_tvnreferredto, wr_referredphysiotherapist, wr_physiotherapistto, wr_referredpodiatrist, wr_podiatristto, wr_referreddietician, wr_dieticianto, wr_other, wr_assessorsign, wr_wounddate, wr_updatedby, wr_updatedon, wr_woundidentificationno, wr_woundimage, wr_nutrition, wr_allergiesdressing, wr_allergiesdrugs, wr_allergiesother, wr_bp, wr_urinalysis, wr_bloodsugar, wr_observeresult, wr_woundtypeother, wr_isoffline) VALUES('$positionid', '$resid', '$woundname', '$typeofwound', '$woundlocation', '$history', '$firstreviewdate', '$factors', '', '$reftvn', '$tvndate', '$refphysio', '$physiodate', '$refpodi', '$podidate', '$refdiet', '$dietdate', '$refother', '$signature', '$signdate', '$userid', '$todaydate', '$woundid', '$newfilename', '$nutrition', '$dressing', '$drugs', '$allergiesother', '$bp', '$urinalysis', '$bloodsugar', '$observationresult', '$subtypeofwound', '$isoffline')");
            $wndrecrdid = mysql_insert_id();
            
            $updatepos = mysql_query("UPDATE en_woundposition SET wp_woundid='$wndrecrdid' WHERE wp_positionid='$positionid'");
            
            $insrttreatpln = mysql_query("INSERT INTO en_woundtreatplan(tp_woundid, tp_resid, tp_woundnumber, tp_treatmentobjective, tp_cleaningsolution, tp_hydrationskin, tp_primarydressing, tp_secondarydressing, tp_compressiontherapy, tp_frequencydressing, tp_patienteducation, tp_removalofsutures, tp_securingdressing, tp_updatedby, tp_updatedon) VALUES('$wndrecrdid', '$resid', '$woundid', '$treatmentobjective', '$cleaningsolution', '$hydrationskin', '$primarydressing', '$secondarydressing', '$compressiontherapy', '$frequencydressing', '$patienteducation', '$removalofsutures', '$securingdressing', '$userid', '$todaydate')");
            
            if($insrtwnd)
            {
                $success = array('status' => "success", "msg" => "Wound added successfully.", "woundrecordid" => $wndrecrdid, "woundid" => $woundid, "isoffline" => $isoffline);
                $this->response($this->json($success), 200);  
                return true;
            }else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function reswoundlist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        
        if($userid != "" && $resid != "")
        {
            $wndrcrds = mysql_query("SELECT * FROM en_woundrecords a LEFT JOIN en_woundposition b ON b.wp_woundid=a.wr_woundid WHERE a.wr_resid='$resid' ORDER BY a.wr_woundid DESC");
            if(mysql_num_rows($wndrcrds)>0)
            {
                while($row = mysql_fetch_array($wndrcrds))
                {
                    $wndid = $row['wr_woundid'];
                    
                    if($row['wr_isdelete'] == '1' || $row['wr_isactive'] == '1')
                    {
                        $status = 1;
                    }else{
                        $status = 0;
                    }
                    
                    $dlyupd = mysql_query("SELECT tp_treatmentplanid, tp_updatedon FROM en_woundtreatplan WHERE tp_woundid='$wndid' ORDER BY tp_treatmentplanid DESC LIMIT 1");
                    if(mysql_num_rows($dlyupd)>0)
                    {
                        $row4 = mysql_fetch_array($dlyupd);
                        $lstdailyupd = $row4['tp_updatedon'];
                    }else{
                        $lstdailyupd = 'Nil';
                    }
                    
                    $detrevw = mysql_query("SELECT wa_woundassessmentid, wa_assessmentdate, wa_photo, wa_reassessmentdate FROM en_woundassessments WHERE wa_woundid='$wndid' ORDER BY wa_woundassessmentid DESC LIMIT 1");
                    if(mysql_num_rows($detrevw)>0)
                    {
                        $row5 = mysql_fetch_array($detrevw);
                        $lstdetrevw = $row5['wa_assessmentdate'];
                        $reassmntdate = $row5['wa_reassessmentdate'];
                        
                    }else{
                        $lstdetrevw = 'Nil';
                        $reassmntdate = 'Nil';
                    }
                    $wndimage = array();
                    
                    $wndwidth = array();
                    $wndheight = array();
                    $wnddepth = array();
                    
                    $necrotic = array();
                    $sloughy = array();
                    $granulating = array();
                    $epithelialising = array();
                    $hypergranulating = array();
                    $haematoma = array();
                    $tendon = array();
                    
                    $stopnote = "";
                    $detrevws = mysql_query("SELECT * FROM en_woundassessments a LEFT JOIN en_woundtissuetype b ON b.wb_tissuetypeid=a.wa_tissuetypeid WHERE a.wa_woundid='$wndid' ORDER BY a.wa_woundassessmentid DESC");
                    if(mysql_num_rows($detrevw)>0)
                    {
                        while($row6 = mysql_fetch_array($detrevws))
                        {
                            if($row6['wa_photo'] != "")
                            {
                                $wndimgarr = explode(',', $row6['wa_photo']);
                                foreach($wndimgarr as $imageval)
                                {
                                    if($imageval != "")
                                    {
                                        $wndimage[] = array("image" => "http://dev-enursing.demormc.com/public/upload/woundattchmnt/".$imageval, "date" => $row6['wa_assessmentdate']);
                                    }
                                }

                                //$wndimage[] = array("image" => "http://dev-enursing.demormc.com/public/upload/woundattchmnt/".$row6['wa_photo'], "date" => $row6['wa_assessmentdate']);
                                
                            }
                            $stopnote = $row6['wa_stopnote'];
                            
                            $wndwidth[] = $row6['wa_woundwidth'];
                            $wndheight[] = $row6['wa_woundlength'];
                            $wnddepth[] = $row6['wa_wounddepth'];
                            
                            $necrotic[] = $row6['wb_necrotic'];
                            $sloughy[] = $row6['wb_sloughy'];
                            $granulating[] = $row6['wb_granulating'];
                            $epithelialising[] = $row6['wb_epithelialising'];
                            $hypergranulating[] = $row6['wb_hypergranulating'];
                            $haematoma[] = $row6['wb_haematoma'];
                            $tendon[] = $row6['wb_bone'];
                        }
                    }
                    
                    if($row['wr_woundimage'] != "")
                    {
                        $wndimgarr = explode(',', $row['wr_woundimage']);
                        foreach($wndimgarr as $imageval)
                        {
                            if($imageval != "")
                            {
                                $wndimage[] = array("image" => "http://dev-enursing.demormc.com/public/upload/woundattchmnt/".$imageval, "date" => $row['wr_updatedon']);
                            }
                        }
                    }
                    
                    $wndwidth[] = $row['wp_width'];
                    $wndheight[] = $row['wo_height'];
                    $wnddepth[] = $row['wp_depth'];
                    
                    $usid = $row['wr_assessorsign'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $signature = ucwords(strtolower($name1));
                        //$signature = preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_lastname']);
                    }
                    else{
                        $signature = "";
                    }
                    
                    
                    $xcord = round($row['wp_xcordinate']/0.68, 0);
                    $ycord = round($row['wp_ycordinate']/0.69, 0);
                    $records[] = array("woundrecordid" => $row['wr_woundid'], "positionid" => $row['wp_positionid'], "woundidentification" => $row['wp_woundidentificationno'], "woundname" => $row['wr_woundname'], "typeofwound" => $row['wr_typeofwound'], "location" => $row['wp_woundlocation'], "xcordinate" => $xcord, 'ycordinate' => $ycord, "width" => $wndwidth, "height" => $wndheight, "depth" => $wnddepth, "comments" => $row['wp_comments'], "history" => $row['wr_history'], "firstreviewdate" => $row['wr_durationofwound'], "factors" => $row['wr_factorshealing'], "reftvn" => $row['wr_referredtvn'], "tvndate" => $row['wr_tvnreferredto'], "refphysio" => $row['wr_referredphysiotherapist'], "physiodate" => $row['wr_physiotherapistto'], "refpodi" => $row['wr_referredpodiatrist'], "podidate" => $row['wr_podiatristto'], "refdiet" => $row['wr_referreddietician'], "dietdate" => $row['wr_dieticianto'], "refother" => $row['wr_other'], "signature" => $signature, "signdate" => $row['wr_wounddate'], "image" => $wndimage, "nutrition" => $row['wr_nutrition'], "allergiesdressing" => $row['wr_allergiesdressing'], "allergiesdrugs" => $row['wr_allergiesdrugs'], "allergiesother" => $row['wr_allergiesother'], "bp" => $row['wr_bp'], "urinalysis" => $row['wr_urinalysis'], "bloodsugar" => $row['wr_bloodsugar'], "observationresult" => $row['wr_observeresult'], "lasttreatmentplan" => $lstdailyupd, "lastdetailedreview" => $lstdetrevw, "reassessmentdate" => $reassmntdate, "necrotic" => $necrotic, "sloughy" => $sloughy, "granulating" => $granulating, "epithelialising" => $epithelialising, "hypergranulating" => $hypergranulating, "haematoma" => $haematoma, "tendon" => $tendon, "status" => $status, "stopnote" => $stopnote);
                }
                
                $success = array('status' => "success", "msg" => $records);
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "No wound records available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function reswoundtreatplans()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $woundrecordid = $this->_request['woundrecordid'];
        $woundid = $this->_request['woundid'];
        if($userid != "" && $resid != "" && $woundrecordid != "")
        {
            $treatplans = mysql_query("SELECT * FROM en_woundtreatplan WHERE tp_woundid='$woundrecordid' AND tp_resid='$resid' ORDER BY tp_treatmentplanid DESC LIMIT 1");
            if(mysql_num_rows($treatplans)>0)
            {
                $row = mysql_fetch_array($treatplans);
                $objctarr = explode('#', $row['tp_treatmentobjective']);
                $cleanarr = explode('#', $row['tp_cleaningsolution']);
                $hydrarr = explode('#', $row['tp_hydrationskin']);
                $primarr = explode('#', $row['tp_primarydressing']);
                $secndarr = explode('#', $row['tp_secondarydressing']);
                $securearr = explode('#', $row['tp_securingdressing']);
                $comprsnarr = explode('#', $row['tp_compressiontherapy']);
                $frqncyarr = explode('#', $row['tp_frequencydressing']);
                $educaarr = explode('#', $row['tp_patienteducation']);
                $suturarr = explode('#', $row['tp_removalofsutures']);
                
                $trtpln = array("treatmentplanid" => $row['tp_treatmentplanid'], "treatmentobjective" => $objctarr[0], "objectivedate" => $objctarr[1], "cleaningsolution" => $cleanarr[0], "cleaningtime" => $cleanarr[1], "hydrationskin" => $hydrarr[0], "hydrationtime" => $hydrarr[1], "primarydressing" => $primarr[0], "primarytime" => $primarr[1], "secondarydressing" => $secndarr[0], "secondarytime" => $secndarr[1], "secureingdressing" => $securearr[0], "secureingtime" => $securearr[1], "compressiontherapy" => $comprsnarr[0], "compressiontime" => $comprsnarr[1], "frequencydressing" => $frqncyarr[0], "frequencytime" => $frqncyarr[1], "patienteducation" => $educaarr[0], "educationtime" => $educaarr[1], "removalofsutures" => $suturarr[0], "suturestime" => $suturarr[1]);
                $success = array('status' => "success", "msg" => $trtpln);
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "No wound treatment plans added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function reviewtreatplans()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $curdate = date('Y-m-d H:i:s');
        $woundrecordid = $this->_request['woundrecordid'];
        $woundid = $this->_request['woundid'];
        
        $treatmentobjective =  $this->_request['treatmentobjective'];
        $objectivereason = $this->_request['objectivereason'];
        $cleaningsolution =  $this->_request['cleaningsolution'];
        $cleaningreason = $this->_request['cleaningreason'];
        $hydrationskin =  $this->_request['hydrationskin'];
        $hydrationreason =  $this->_request['hydrationreason'];
        $primarydressing =  $this->_request['primarydressing'];
        $primaryreason =  $this->_request['primaryreason'];
        $secondarydressing =  $this->_request['secondarydressing'];
        $secondaryreason =  $this->_request['secondaryreason'];
        $securingdressing =  $this->_request['securingdressing'];
        $securingreason =  $this->_request['securingreason'];
        $compressiontherapy =  $this->_request['compressiontherapy'];
        $compressionreason =  $this->_request['compressionreason'];
        $frequencydressing =  $this->_request['frequencydressing'];
        $frequencyreason =  $this->_request['frequencyreason'];
        $patienteducation =  $this->_request['patienteducation'];
        $educationreason =  $this->_request['educationreason'];
        $removalofsutures =  $this->_request['removalofsutures'];
        $suturesreason =  $this->_request['suturesreason'];
        if($userid != "" && $resid != "" && $woundrecordid != "")
        {
            $insrttreatpln = mysql_query("INSERT INTO en_woundtreatplan(tp_woundid, tp_resid, tp_woundnumber, tp_treatmentobjective, tp_objectivereason, tp_cleaningsolution, tp_cleaningreason, tp_hydrationskin, tp_hydrationreason, tp_primarydressing, tp_primaryreason, tp_secondarydressing, tp_secondaryreason, tp_compressiontherapy, tp_compressionreason, tp_frequencydressing, tp_frequencyreason, tp_patienteducation, tp_educationreason, tp_removalofsutures, tp_suturesreason, tp_securingdressing, tp_securingreason, tp_updatedby, tp_updatedon) VALUES('$woundrecordid', '$resid', '$woundid', '$treatmentobjective', '$objectivereason', '$cleaningsolution', '$cleaningreason', '$hydrationskin', '$hydrationreason', '$primarydressing', '$primaryreason', '$secondarydressing', '$secondaryreason', '$compressiontherapy', '$compressionreason', '$frequencydressing',  '$frequencyreason', '$patienteducation', '$educationreason', '$removalofsutures', '$suturesreason', '$securingdressing', '$securingreason', '$userid', '$curdate')");
            
            if($insrttreatpln)
            {
                $success = array('status' => "success", "msg" => 'Successfully updated');
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => 'Error occured, please try again.');
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function treatplanhistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $woundrecordid = $this->_request['woundrecordid'];
        $woundid = $this->_request['woundid'];
        if($userid != "" && $resid != "" && $woundrecordid != "")
        {
            $restreatplans = mysql_query("SELECT * FROM en_woundtreatplan WHERE tp_woundid='$woundrecordid' AND tp_resid='$resid' ORDER BY tp_treatmentplanid DESC");
            if(mysql_num_rows($restreatplans)>0)
            {
                while($row = mysql_fetch_array($restreatplans))
                {
                    $objctarr = explode('#', $row['tp_treatmentobjective']);
                    $cleanarr = explode('#', $row['tp_cleaningsolution']);
                    $hydrarr = explode('#', $row['tp_hydrationskin']);
                    $primarr = explode('#', $row['tp_primarydressing']);
                    $secndarr = explode('#', $row['tp_secondarydressing']);
                    $securearr = explode('#', $row['tp_securingdressing']);
                    $comprsnarr = explode('#', $row['tp_compressiontherapy']);
                    $frqncyarr = explode('#', $row['tp_frequencydressing']);
                    $educaarr = explode('#', $row['tp_patienteducation']);
                    $suturarr = explode('#', $row['tp_removalofsutures']);
                    
                    $updatedby = $row['tp_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$updatedby'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name1));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    
                    $trtpln[] = array("treatmentplanid" => $row['tp_treatmentplanid'], "treatmentobjective" => $objctarr[0], "objectivedate" => $objctarr[1], "objectivereason" => $row['tp_objectivereason'], "cleaningsolution" => $cleanarr[0], "cleaningtime" => $cleanarr[1], "cleaningreason" => $row['tp_cleaningreason'], "hydrationskin" => $hydrarr[0], "hydrationtime" => $hydrarr[1], "hydrationreason" => $row['tp_hydrationreason'], "primarydressing" => $primarr[0], "primarytime" => $primarr[1], "primaryreason" => $row['tp_primaryreason'], "secondarydressing" => $secndarr[0], "secondarytime" => $secndarr[1], "secondaryreason" => $row['tp_secondaryreason'], "secureingdressing" => $securearr[0], "secureingtime" => $securearr[1], "securereason" => $row['tp_securingreason'], "compressiontherapy" => $comprsnarr[0], "compressiontime" => $comprsnarr[1], "compressionreason" => $row['tp_compressionreason'], "frequencydressing" => $frqncyarr[0], "frequencytime" => $frqncyarr[1], "frequencyreason" => $row['tp_frequencyreason'], "patienteducation" => $educaarr[0], "educationtime" => $educaarr[1], "educationreason" => $row['tp_educationreason'], "removalofsutures" => $suturarr[0], "suturestime" => $suturarr[1], "suturereason" => $row['tp_suturesreason'], "updatedby" => $empname, "updatedon" => $row['tp_updatedon']);

                }
                $success = array('status' => "success", "msg" => $trtpln);
                $this->response($this->json($success), 200);  
                return true;
            }else{
                $success = array('status' => "failed", "msg" => "No wound treatment plans added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function wounddailyupdate()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        
        $woundrecordid = $this->_request['woundrecordid'];
        $woundid = $this->_request['woundid'];
        $date = date('Y-m-d H:i:s', strtotime($this->_request['date']));
        $cleaningmethod = $this->_request['cleaningmethod'];
        $frequency = $this->_request['frequency'];
        $evelution = $this->_request['evelution'];
        $signature = $this->_request['signature'];
        $dressingdue = date('Y-m-d', strtotime($this->_request['dressingdue']));
        
        if($userid != "" && $resid != "" && $woundrecordid != "")
        {
            $insrt = mysql_query("INSERT INTO en_woundtreatmentplan(wt_woundid, wt_woundnumber, wt_cleaningmethode, wt_frequency, wt_evaluationdresstype, wt_signature, wt_updatedby, wt_updatedon, wt_dressingdue) VALUES('$woundrecordid', '$woundid', '$cleaningmethod', '$frequency', '$evelution', '$signature', '$userid', '$date', '$dressingdue')");
            
            $success = array('status' => "success", "msg" => "Successfully updated.");
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function wounddetailedreview()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        
        $woundrecordid = $this->_request['woundrecordid'];
        $woundid = $this->_request['woundid'];
        $dateofassesment = date('Y-m-d H:i:s', strtotime($this->_request['dateofassesment']));
        $curdate = date('Y-m-d H:i:s');
        
        if($userid != "" && $resid != "" && $woundid != "" && $woundrecordid != "" && $dateofassesment != "")
        {
            $regularanelgesia = $this->_request['regularanelgesia'];
            $predressinganelgesia = $this->_request['predressinganelgesia'];
            
            $height = $this->_request['height'];
            $width = $this->_request['width'];
            $depth = $this->_request['depth'];
            $circumference = $this->_request['circumference'];
            $woundtracking = $this->_request['woundtracking'];
            
            $exudatelow = $this->_request['exudatelow'];
            $exudatemoderate = $this->_request['woundmoderate'];
            $exudatehigh = $this->_request['exudatehigh'];
            $exudateserous = $this->_request['exudateserous'];
            $exudatehaemoserous = $this->_request['exudatehaemoserous'];
            $exudatepurulent = $this->_request['exudatepurulent'];
            $blood = $this->_request['blood'];
            
            $tissuenecrotic = $this->_request['tissuenecrotic'];
            $tissuesloughy = $this->_request['tissuesloughy'];
            $tissuegranulating = $this->_request['tissuegranulating'];
            $tissueepithelialising = $this->_request['tissueepithelialising'];
            $tissuehypergranulating = $this->_request['tissuehypergranulating'];
            $tissuehaematoma = $this->_request['tissuehaematoma'];
            $tissuebone = $this->_request['tissuebone'];
            
            $perimacerated = $this->_request['perimacerated'];
            $perioedematous = $this->_request['perioedematous'];
            $perierythema = $this->_request['perierythema'];
            $periexcoriated = $this->_request['periexcoriated'];
            $peritracking = $this->_request['peritracking'];
            $perifragile = $this->_request['perifragile'];
            $peridry = $this->_request['peridry'];
            $perihealthy = $this->_request['perihealthy'];
            
            $signsheat = $this->_request['signsheat'];
            $signsheatinfection = $this->_request['signsheatinfection'];
            $signsslough = $this->_request['signsslough'];
            $signssloughinfection = $this->_request['signssloughinfection'];
            $signspain = $this->_request['signspain'];
            $signspaininfection = $this->_request['signspaininfection'];
            $signsexudate = $this->_request['signsexudate'];
            $signsexudateinfection = $this->_request['signsexudateinfection'];
            $signsodour = $this->_request['signsodour'];
            $signsodourinfection = $this->_request['signsodourinfection'];
            $signsgranulation = $this->_request['signsgranulation'];
            $signsgranulationinfection = $this->_request['signsgranulationinfection'];
            
            $objectivedebridement = $this->_request['objectivedebridement'];
            $objectiveabsorption = $this->_request['objectiveabsorption'];
            $objectivehydration = $this->_request['objectivehydration'];
            $objectiveprotection = $this->_request['objectiveprotection'];
            $objectivepalliative = $this->_request['objectivepalliative'];
            $objectivebacterial = $this->_request['objectivebacterial'];
            
            $assessorinitial = $this->_request['assessorinitial'];
            $dressingrenew = date('Y-m-d', strtotime($this->_request['dressingrenew']));
            $continuereview = $this->_request['continuereview'];
            $reassessmentdate = date('Y-m-d H:i:s', strtotime($this->_request['reassessmentdate']));
            $stopnote = $this->_request['stopnote'];

            $imagear = explode(',', $this->_request['woundimage']);
            
            if($imagear != "")
            {
                $newfilenamear = array();
                $wn=1;
                foreach($imagear as $image)
                {
                    if($image != "")
                    {
                        $target_dir = "../public/upload/woundattchmnt/";
                        //$temp = explode(".", $_FILES["resimage"]["name"]);
                        //$newfilename = round(microtime(true)) . '.' . end($temp);
                        $filenameup = round(microtime(true)) . '-'. $wn .'.jpg';
                        $newfilenamear[] = $filenameup;
                        
                        $target_file = $target_dir . $filenameup;
                        //if (move_uploaded_file($_FILES["resimage"]["tmp_name"], $target_file)) {
                        file_put_contents($target_file,base64_decode($image));
                    }
                    $wn++;
                }
                $newfilename = implode(',', $newfilenamear);
            }
            else{
                $newfilename = "";
            }
            
            /*$image = $this->_request['woundimage'];
            
            if($image != "")
            {
                $target_dir = "../public/upload/woundattchmnt/";
                //$temp = explode(".", $_FILES["resimage"]["name"]);
                //$newfilename = round(microtime(true)) . '.' . end($temp);
                $newfilename = round(microtime(true)) . '.jpg';
                
                $target_file = $target_dir . $newfilename;
                //if (move_uploaded_file($_FILES["resimage"]["tmp_name"], $target_file)) {
                file_put_contents($target_file,base64_decode($image));
            }
            else{
                $newfilename = "";
            }*/
            
            $disablewnd = mysql_query("UPDATE en_woundrecords SET wr_isdelete='$continuereview', wr_isactive='$continuereview' WHERE wr_woundid='$woundrecordid'");
            
            $exuinsrt = mysql_query("INSERT INTO en_woundexudatelevel(we_low, we_moderate, we_high, we_serous, we_haemoserous, we_purulent, we_blood) VALUES('$exudatelow', '$exudatemoderate', '$exudatehigh', '$exudateserous', '$exudatehaemoserous', '$exudatepurulent', '$blood')");
            $exudateid = mysql_insert_id();
            
            $tissueinsrt = mysql_query("INSERT INTO en_woundtissuetype(wb_necrotic, wb_sloughy, wb_granulating, wb_epithelialising, wb_hypergranulating, wb_haematoma, wb_bone) VALUES('$tissuenecrotic', '$tissuesloughy', '$tissuegranulating', '$tissueepithelialising', '$tissuehypergranulating', '$tissuehaematoma', '$tissuebone')");
            $tissueid = mysql_insert_id();
            
            $periinsrt = mysql_query("INSERT INTO en_woundperiskin(ws_macerated, ws_oedematous, ws_erythema, ws_excoriated, ws_woundtracking, ws_fragile, ws_dry, ws_healthy) VALUES('$perimacerated', '$perioedematous', '$perierythema', '$periexcoriated', '$peritracking', '$perifragile', '$peridry', '$perihealthy')");
            $periid = mysql_insert_id();
            
            $signsinsrt = mysql_query("INSERT INTO en_woundsignsofonfection(wi_heat, wi_heatinfection, wi_newslough, wi_newsloughinfection, wi_increasingpain, wi_increasingpaininfection, wi_increaseexudate, wi_increaseexudateinfection, wi_increaseodour, wi_increaseodourinfection, wi_flexiblegranulation, wi_flexiblegranulationinfection) VALUES('$signsheat', '$signsheatinfection', '$signsslough', '$signssloughinfection', '$signspain', '$signspaininfection', '$signsexudate', '$signsexudateinfection', '$signsodour', '$signsodourinfection', '$signsgranulation', '$signsgranulationinfection')");
            $signsid = mysql_insert_id();
            
            $objectiveinsrt = mysql_query("INSERT INTO en_woundtreatobjective(wo_debridement, wo_absorption, wo_hydration, wo_protection, wo_palliative, wo_bacterialload) VALUES('$objectivedebridement', '$objectiveabsorption', '$objectivehydration', '$objectiveprotection', '$objectivepalliative', '$objectivebacterial')");
            $objectiveid = mysql_insert_id();
            
            $insrtrevew = mysql_query("INSERT INTO en_woundassessments(wa_woundid, wa_woundidentificationno, wa_woundlength, wa_woundwidth, wa_wounddepth, wa_woundcircumference, wa_woundtracking, wa_photo, wa_regularanalgesia, wa_predressinganalgesia, wa_exudateid, wa_tissuetypeid, wa_periskinid, wa_infectionid, wa_treatobjectiveid, wa_assessmentdate, wa_assessorinitial, wa_dressingrenewed, wa_reassessmentdate, wa_upedatedby, wa_updatedon, wa_isactive, wa_stopnote) VALUES('$woundrecordid', '$woundid', '$height', '$width', '$depth', '$circumference', '$woundtracking', '$newfilename', '$regularanelgesia', '$predressinganelgesia', '$exudateid', '$tissueid', '$periid', '$signsid', '$objectiveid', '$dateofassesment', '$assessorinitial', '$dressingrenew', '$reassessmentdate', '$userid', '$curdate', '$continuereview', '$stopnote')");
            
            $success = array('status' => "success", "msg" => "Detailed review added successfully");
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function lastwoundreviewdetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        
        $woundid = $this->_request['woundid'];
        if($userid != "" && $resid != "" && $woundid != "")
        {
            $slctreview = mysql_query("SELECT * FROM en_woundassessments a LEFT JOIN en_woundexudatelevel b ON b.we_exudateid=a.wa_exudateid LEFT JOIN en_woundtissuetype c ON c.wb_tissuetypeid=a.wa_tissuetypeid LEFT JOIN en_woundperiskin d ON d.ws_periskinid=a.wa_periskinid LEFT JOIN en_woundsignsofonfection e ON e.wi_infectionid=a.wa_infectionid LEFT JOIN en_woundtreatobjective f ON f.wo_treatobjectiveid=a.wa_treatobjectiveid WHERE a.wa_woundid='$woundid' ORDER BY wa_woundassessmentid DESC LIMIT 1");
            if(mysql_num_rows($slctreview)>0)
            {
                while($row = mysql_fetch_array($slctreview))
                {
                    $updby = $row['wa_assessorinitial'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$updby'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $updatedby = ucwords(strtolower($name1));
                        //$updatedby = preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_lastname']);
                    }
                    else{
                        $updatedby = "";
                    }

                    $revws[] = array("assessmentid" => $row['wa_woundassessmentid'], "height" => $row['wa_woundlength'], "width" => $row['wa_woundwidth'], "depth" => $row['wa_wounddepth'], "circumference" => $row['wa_woundcircumference'], "tracking" => $row['wa_woundtracking'], "regularanalgesia" => $row['wa_regularanalgesia'], "predressinganalgesia" => $row['wa_predressinganalgesia'], "exudatelow" => $row['we_low'], "exudatemoderate" => $row['we_moderate'], "exudatehigh" => $row['we_high'], "exudateserous" => $row['we_serous'], "exudatehaemoserous" => $row['we_haemoserous'], "exudatepurulent" => $row['we_purulent'], "blood" => $row['we_blood'], "tissuenecrotic" => $row['wb_necrotic'], "tissuesloughy" => $row['wb_sloughy'], "tissuegranulating" => $row['wb_granulating'], "tissueepithelialising" => $row['wb_epithelialising'], "tissuehypergranulating" => $row['wb_hypergranulating'], "tissuehaematoma" => $row['wb_haematoma'], "tissuebone" => $row['wb_bone'], "perimacerated" => $row['ws_macerated'], "perioedematous" => $row['ws_oedematous'], "perierythema" => $row['ws_erythema'], "periexcoriated" => $row['ws_excoriated'], "peritracking" => $row['ws_woundtracking'], "perifragile" => $row['ws_fragile'], "peridry" => $row['ws_dry'], "perihealthy" => $row['ws_healthy'], "signsheat" => $row['wi_heat'], "heatinfection" => $row['wi_heatinfection'], "signsslough" => $row['wi_newslough'], "sloughinfection" => $row['wi_newsloughinfection'], "signspain" => $row['wi_increasingpain'], "paininfection" => $row['wi_increasingpaininfection'], "signsexudate" => $row['wi_increaseexudate'], "exudateinfection" => $row['wi_increaseexudateinfection'], "signsodour" => $row['wi_increaseodour'], "odourinfection" => $row['wi_increaseodourinfection'], "signsgranulation" => $row['wi_flexiblegranulation'], "granulationinfection" => $row['wi_flexiblegranulationinfection'], "objectivedebridement" => $row['wo_debridement'], "objectiveabsorption" => $row['wo_absorption'], "objectivehydration" => $row['wo_hydration'], "objectiveprotection" => $row['wo_protection'], "objectivepalliative" => $row['wo_palliative'], "objectivebacterial" => $row['wo_bacterialload'], "updatedby" => $updatedby, "assessmentdate" => $row['wa_assessmentdate'], "continuereview" => $row['wa_isactive'], "reassessmentdate" => $row['wa_reassessmentdate'], "stopnote" => $row['wa_stopnote']);
                }
                
                $success = array('status' => "success", "msg" => $revws);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No detailed reviews available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function wounddailyupdatelist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        
        $woundrecordid = $this->_request['woundrecordid'];
        $woundid = $this->_request['woundid'];
        
        if($userid != "" && $resid != "" && $woundrecordid != "")
        {
            $slctdailyupdtes = mysql_query("SELECT * FROM en_woundtreatmentplan WHERE wt_woundid='$woundrecordid' ORDER BY wt_woundtreatplanid DESC");
            if(mysql_num_rows($slctdailyupdtes)>0)
            {
                while($row = mysql_fetch_array($slctdailyupdtes))
                {
                    $updby = $row['wt_signature'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$updby'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $updatedby = ucwords(strtolower($name1));
                        //$updatedby = preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_lastname']);
                    }
                    else{
                        $updatedby = "";
                    }
                    
                    $updates[] = array("updateid" => $row['wt_woundtreatplanid'], "cleaningmethod" => $row['wt_cleaningmethode'], "frequency" => $row['wt_frequency'], "evaluation" => $row['wt_evaluationdresstype'], 'signature' => $updatedby, 'updatedon' => $row['wt_updatedon'], "dressingdue" => $row['wt_dressingdue']);
                }
                $success = array('status' => "success", "msg" => $updates);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No daily updated available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    public function wounddetailedreviewlist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        
        $woundrecordid = $this->_request['woundrecordid'];
        $woundid = $this->_request['woundid'];
        
        if($userid != "" && $resid != "" && $woundrecordid != "")
        {
            $slctreview = mysql_query("SELECT * FROM en_woundassessments a LEFT JOIN en_woundexudatelevel b ON b.we_exudateid=a.wa_exudateid LEFT JOIN en_woundtissuetype c ON c.wb_tissuetypeid=a.wa_tissuetypeid LEFT JOIN en_woundperiskin d ON d.ws_periskinid=a.wa_periskinid LEFT JOIN en_woundsignsofonfection e ON e.wi_infectionid=a.wa_infectionid LEFT JOIN en_woundtreatobjective f ON f.wo_treatobjectiveid=a.wa_treatobjectiveid WHERE a.wa_woundid='$woundrecordid' ORDER BY wa_woundassessmentid DESC");
            if(mysql_num_rows($slctreview)>0)
            {
                while($row = mysql_fetch_array($slctreview))
                {
                    $updby = $row['wa_assessorinitial'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$updby'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $updatedby = ucwords(strtolower($name1));
                        //$updatedby = preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '', $row3['en_lastname']);
                    }
                    else{
                        $updatedby = "";
                    }

                    $revws[] = array("assessmentid" => $row['wa_woundassessmentid'], "height" => $row['wa_woundlength'], "width" => $row['wa_woundwidth'], "depth" => $row['wa_wounddepth'], "circumference" => $row['wa_woundcircumference'], "tracking" => $row['wa_woundtracking'], "regularanalgesia" => $row['wa_regularanalgesia'], "predressinganalgesia" => $row['wa_predressinganalgesia'], "exudatelow" => $row['we_low'], "exudatemoderate" => $row['we_moderate'], "exudatehigh" => $row['we_high'], "exudateserous" => $row['we_serous'], "exudatehaemoserous" => $row['we_haemoserous'], "exudatepurulent" => $row['we_purulent'], "blood" => $row['we_blood'], "tissuenecrotic" => $row['wb_necrotic'], "tissuesloughy" => $row['wb_sloughy'], "tissuegranulating" => $row['wb_granulating'], "tissueepithelialising" => $row['wb_epithelialising'], "tissuehypergranulating" => $row['wb_hypergranulating'], "tissuehaematoma" => $row['wb_haematoma'], "tissuebone" => $row['wb_bone'], "perimacerated" => $row['ws_macerated'], "perioedematous" => $row['ws_oedematous'], "perierythema" => $row['ws_erythema'], "periexcoriated" => $row['ws_excoriated'], "peritracking" => $row['ws_woundtracking'], "perifragile" => $row['ws_fragile'], "peridry" => $row['ws_dry'], "perihealthy" => $row['ws_healthy'], "signsheat" => $row['wi_heat'], "heatinfection" => $row['wi_heatinfection'], "signsslough" => $row['wi_newslough'], "sloughinfection" => $row['wi_newsloughinfection'], "signspain" => $row['wi_increasingpain'], "paininfection" => $row['wi_increasingpaininfection'], "signsexudate" => $row['wi_increaseexudate'], "exudateinfection" => $row['wi_increaseexudateinfection'], "signsodour" => $row['wi_increaseodour'], "odourinfection" => $row['wi_increaseodourinfection'], "signsgranulation" => $row['wi_flexiblegranulation'], "granulationinfection" => $row['wi_flexiblegranulationinfection'], "objectivedebridement" => $row['wo_debridement'], "objectiveabsorption" => $row['wo_absorption'], "objectivehydration" => $row['wo_hydration'], "objectiveprotection" => $row['wo_protection'], "objectivepalliative" => $row['wo_palliative'], "objectivebacterial" => $row['wo_bacterialload'], "updatedby" => $updatedby, "assessmentdate" => $row['wa_assessmentdate'], "continuereview" => $row['wa_isactive'], "reassessmentdate" => $row['wa_reassessmentdate'], "stopnote" => $row['wa_stopnote']);
                }
                
                $success = array('status' => "success", "msg" => $revws);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No detailed reviews available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    public function rescatheterdetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($userid != "" && $resid != "")
        {
            $cathrdet = mysql_query("SELECT * FROM en_rescatheterdetails WHERE cd_resid='$resid' AND cd_isactive='0' ORDER BY cd_catheterdetailid DESC LIMIT 1");
            if(mysql_num_rows($cathrdet)>0)
            {
                $row = mysql_fetch_array($cathrdet);
                $startdate = date('Y-m-d', strtotime($row['cd_catheterchangedate']));
                $duedate = date('Y-m-d', strtotime($row['cd_catheterbagnextdue']));
                
                if($row['cd_catheterbagtype'] == 'other')
                {
                    $bagtype = $row['cd_cathetertypeother'];
                }
                else{
                    $bagtype = $row['cd_catheterbagtype'];
                }
                
                if($row['cd_catheterbagsize'] == 'other')
                {
                    $bagsize = $row['cd_bagsizeother'];
                }
                else{
                    $bagsize = $row['cd_catheterbagsize'];
                }
                
                $cath = array("catheterid" => $row['cd_catheterdetailid'], "bagtype" => $bagtype, "bagsize" => $bagsize, "startdate" => $row['cd_catheterstartdate'], "duedate" => $row['cd_catheterbagnextdue']);
                
                $success = array('status' => "success", "msg" => $cath);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No catheter details updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    public function addcatheteroutputrecord()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $catheterid = $this->_request['catheterid'];
        $qty = $this->_request['qty'];
        $datetime =  date('Y-m-d H:i:s', strtotime($this->_request['datetime']));
        $comments = $this->_request['comments'];
        $curdate = date('Y-m-d H:i:s');
        if($userid != "" && $resid != "" && $catheterid != "")
        {
            $insrt = mysql_query("INSERT INTO en_catheteroutputrecord(co_catheterdetailid, co_outputqty, co_datetime, co_comments, co_updatedby, co_updatedon, co_resid) VALUES('$catheterid', '$qty', '$datetime', '$comments', '$userid', '$curdate', '$resid')");
            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully added.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    public function addcatheterflushrecord()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $catheterid = $this->_request['catheterid'];
        $typeofflush = $this->_request['typeofflush'];
        $urinedipstick = $this->_request['urinedipstick'];
        $comments = $this->_request['comments'];
        
        $nextflushingdate =  date('Y-m-d', strtotime($this->_request['nextflushingdate']));
        
        $curdate = date('Y-m-d H:i:s');
        if($userid != "" && $resid != "" && $catheterid != "")
        {
            $insrt = mysql_query("INSERT INTO en_catheterflushrecord(cf_catheterdetailid, cf_resid, cf_typeofflush, cf_urinedipstickresult, cf_comments, cf_nextflushdate, cf_updatedby, cf_updatedon) VALUES('$catheterid', '$resid', '$typeofflush', '$urinedipstick', '$comments', '$nextflushingdate', '$userid', '$curdate')");
            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully added.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    public function catheteroutputrecords()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $catheterid = $this->_request['catheterid'];
        if($userid != "" && $resid != "" && $catheterid != "")
        {
            $cathrdet = mysql_query("SELECT * FROM en_catheteroutputrecord WHERE co_resid='$resid' AND co_isactive='0' ORDER BY co_datetime DESC");
            if(mysql_num_rows($cathrdet)>0)
            {
                $cath = array();
                while($row = mysql_fetch_array($cathrdet))
                {
                    $usid = $row['co_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name1));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    $cath[] = array("qty" => $row['co_outputqty'], "datetime" => $row['co_datetime'], "comments" => $row['co_comments'], "updatedby" => $empname);
                }
                
                $success = array('status' => "success", "msg" => $cath);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No catheter output records updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    public function catheteroutputrecordspage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $catheterid = $this->_request['catheterid'];
        $page = $this->_request['page'];
        if($userid != "" && $resid != "" && $catheterid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $cathrdet = mysql_query("SELECT * FROM en_catheteroutputrecord WHERE co_resid='$resid' AND co_isactive='0' ORDER BY co_datetime DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT co_outputrecordid FROM en_catheteroutputrecord WHERE co_resid='$resid' AND co_isactive='0'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($cathrdet)>0)
            {
                $cath = array();
                while($row = mysql_fetch_array($cathrdet))
                {
                    $usid = $row['co_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name1));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    $cath[] = array("qty" => $row['co_outputqty'], "datetime" => $row['co_datetime'], "comments" => $row['co_comments'], "updatedby" => $empname);
                }
                
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $cath);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No catheter output records updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    public function catheterflushrecords()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $catheterid = $this->_request['catheterid'];
        if($userid != "" && $resid != "" && $catheterid != "")
        {
            $cathrdet = mysql_query("SELECT * FROM en_catheterflushrecord WHERE cf_resid='$resid' AND cf_isactive='0' ORDER BY cf_catheterflushid DESC");
            if(mysql_num_rows($cathrdet)>0)
            {
                $cath = array();
                while($row = mysql_fetch_array($cathrdet))
                {
                    $usid = $row['cf_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name1));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    $cath[] = array("typeofflush" => $row['cf_typeofflush'], "urinedipstickresult" => $row['cf_urinedipstickresult'], "comments" => $row['cf_comments'], "nextflushingdate" => $row['cf_nextflushdate'], "updatedby" => $empname);
                }
                
                $success = array('status' => "success", "msg" => $cath);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No catheter flush records updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function catheterflushrecordspage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $catheterid = $this->_request['catheterid'];
        $page = $this->_request['page'];
        if($userid != "" && $resid != "" && $catheterid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $cathrdet = mysql_query("SELECT * FROM en_catheterflushrecord WHERE cf_resid='$resid' AND cf_isactive='0' ORDER BY cf_catheterflushid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT cf_catheterflushid FROM en_catheterflushrecord WHERE cf_resid='$resid' AND cf_isactive='0'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($cathrdet)>0)
            {
                $cath = array();
                while($row = mysql_fetch_array($cathrdet))
                {
                    $usid = $row['cf_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name1 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name1));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    $cath[] = array("typeofflush" => $row['cf_typeofflush'], "urinedipstickresult" => $row['cf_urinedipstickresult'], "comments" => $row['cf_comments'], "nextflushingdate" => $row['cf_nextflushdate'], "updatedby" => $empname);
                }
                
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $cath);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No catheter flush records updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function addnightpositionchart()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        
        $nighttimecloths = $this->_request['nighttimecloths'];
        $oralcare = $this->_request['oralcare'];
        $dentureseaked = $this->_request['dentureseaked'];
        $bedposition = $this->_request['bedposition'];
        $bedtime = date('Y-m-d H:i:s', strtotime($this->_request['bedtime']));
        $passedurine = $this->_request['passedurine'];
        $bowelmovement = $this->_request['bowelmovement'];
        $padchanged = $this->_request['padchanged'];
        $observation = $this->_request['observation'];
        
        $curdate = date('Y-m-d H:i:s');
        if($userid != "" && $resid != "" && $bedposition != "" && $bedtime != "")
        {
            $insrt = mysql_query("INSERT INTO en_bedtimepositions(btp_resid, btp_nighttimecloths, btp_oralcare, btp_dentureseaked, btp_bedposition, btp_bedtime, btp_passedurine, btp_bowelmovement, btp_padchanged, btp_observation, btp_updatedby, btp_updatedon) VALUES('$resid', '$nighttimecloths', '$oralcare', '$dentureseaked', '$bedposition', '$bedtime', '$passedurine', '$bowelmovement', '$padchanged', '$observation', '$userid', '$curdate')");
            if($insrt)
            {
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Night Position Chart'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $safeme = date('d-M-Y H:i', strtotime($bedtime));

                    if($nighttimecloths == '1'){ $nightcloth = "Yes";}else{ $nightcloth = "No"; }
                    if($oralcare == '1'){ $oralcr = "Yes";}else{ $oralcr = "No"; }
                    if($dentureseaked == '1'){ $dentresoak = "Yes";}else{ $dentresoak = "No"; }
                    if($passedurine == 'true'){ $urinepass = "Yes";}else{ $urinepass = "No"; }
                    if($bowelmovement == 'true'){ $bwlmvmnt = "Yes";}else{ $bwlmvmnt = "No"; }
                    if($padchanged == 'true'){ $padchnge = "Yes";}else{ $padchnge = "No"; }

                    $reportdata = "Night Position Chart - Bed Time: " . $safeme . ", Nighttime Cloths:  " . $nightcloth . ",    Oral Care: " . $oralcr . ", Dentures Soaked: " . $dentresoak . ", Bed Position: " . $bedposition . ", Passed Urine: " . $urinepass . ", Bowel Movement: " . $bwlmvmnt . ", Pad Changed: " . $padchnge . ", Observation: " . $observation;
                    $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$userid', '$curdate', '$resid', 'regular', '1', '1')");

                }

                $success = array('status' => "success", "msg" => "Successfully added.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addmultiplenightpositionchart()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        
        $assistedby = $this->_request['assistedby'];
        $notes = $this->_request['notes'];
        
        $nighttimecloths = $this->_request['nighttimecloths'];
        $oralcare = $this->_request['oralcare'];
        $dentureseaked = $this->_request['dentureseaked'];
        $bedposition = $this->_request['bedposition'];
        $bedtime = date('Y-m-d H:i:s', strtotime($this->_request['bedtime']));
        $passedurine = $this->_request['passedurine'];
        $bowelmovement = $this->_request['bowelmovement'];
        $padchanged = $this->_request['padchanged'];
        $padvalue = $this->_request['padvalue'];
        $observation = $this->_request['observation'];
        
        $residentawake = $this->_request['residentawake'];
        
        $boweltype = $this->_request['boweltype'];
        $bowelsize = $this->_request['bowelsize'];
        $boweltime = $this->_request['boweltime'];
        
        $curdate = date('Y-m-d H:i:s');
        if($userid != "" && $resid != "")
        {
            $residarr = explode('#', $resid);
            $notesarr = explode('#', $notes);
            
            $k=0;
            foreach($residarr as $resval)
            {
                if($resval != "")
                {
                    $notval = $notesarr[$k];
                    $insrt = mysql_query("INSERT INTO en_bedtimepositions(btp_resid, btp_nighttimecloths, btp_oralcare, btp_dentureseaked, btp_bedposition, btp_bedtime, btp_passedurine, btp_bowelmovement, btp_padchanged, btp_observation, btp_updatedby, btp_updatedon, btp_assistedby, btp_notes, btp_residentawake, btp_padvalue) VALUES('$resval', '$nighttimecloths', '$oralcare', '$dentureseaked', '$bedposition', '$bedtime', '$passedurine', '$bowelmovement', '$padchanged', '$observation', '$userid', '$curdate', '$assistedby', '$notval', '$residentawake', '$padvalue')");

                    if($padvalue != "0,0")
                    {
                        $options = "0#0#0#0#0#0#0#". $padvalue ."#0#";
                        $insrt=mysql_query("INSERT INTO en_residentmorningcare(rm_residentid, rm_optionids, rm_comments, rm_updatedby, rm_updatedtime, rm_assistedby) VALUES('$resval', '$options', '$notval', '$userid', '$curdate', '$assistedby')");
                    }

                    if($bowelmovement == 'true')
                    {
                        $insrt1 = mysql_query("INSERT INTO en_resbowelrecords(br_resid, br_bowelchartid, br_bowelrecordtimeid, br_bowelnote,  br_recorddate, br_updatedby, br_bowelsize) VALUES('$resval', '$boweltype', '$boweltime', '$notval', '$curdate', '$userid', '$bowelsize')");
                    }
                }
                $k++;
            }
            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully added.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function nightpositioncharthistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $insrt = mysql_query("SELECT * FROM en_bedtimepositions WHERE btp_resid='$resid' AND btp_isactive='0' ORDER BY btp_bedtimeid DESC");
            if(mysql_num_rows($insrt)>0)
            {
                while($row = mysql_fetch_array($insrt))
                {
                    $updby = $row['btp_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    if($row['btp_observation'] != "")
                    {
                        $posnote = $row['btp_observation'];
                    }
                    else{
                        $posnote = null;
                    }

                    $padval = $row['btp_padvalue'];
                    $padvla = array();
                    if($padval != "")
                    {
                        $padvla = array();
                        $padvalarr = explode(',', $padval);
                        foreach($padvalarr as $pdvl)
                        {
                            $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions WHERE suboptionid='$pdvl'");
                            if(mysql_num_rows($optns)>0)
                            {
                                $row2 = mysql_fetch_array($optns);
                                $padvla[] = $row2['so_tabsuboptions'];
                            }
                            
                        }
                    }
                    $padvalue = implode(',', $padvla);
                    
                    $assistedbyar = explode(',',$row['btp_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    $logdate = $row['btp_updatedon'];
                    $bwl = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' AND br_recorddate='$logdate'");
                    if(mysql_num_rows($bwl)>0)
                    {
                        $row2 = mysql_fetch_array($bwl);
                        $boweltype = $row2['br_bowelchartid'];
                        $bowelsize = $row2['br_bowelsize'];
                        $boweltime = $row2['br_bowelrecordtimeid'];
                    }
                    else{
                        $boweltype = "";
                        $bowelsize = "";
                        $boweltime = "";
                    }
                    
                    $msg[] = array("reportid" => $row['btp_bedtimeid'], "nighttimecloths" => $row['btp_nighttimecloths'], "oralcare" => $row['btp_oralcare'], "dentureseaked" => $row['btp_dentureseaked'], "bedposition" => $row['btp_bedposition'], "bedtime" => $row['btp_bedtime'], "passedurine" => $row['btp_passedurine'], "bowelmovement" => $row['btp_bowelmovement'], "padchanged" => $row['btp_padchanged'], "padvalue" => $padvalue, "observation" => $posnote, "updatedby" => $updname, "assistedby" => $assistenurse, "notes" => $row['btp_notes'], "residentawake" => $row['btp_residentawake'], "boweltype" => $boweltype, "bowelsize" => $bowelsize, "boweltime" => $boweltime);
                }
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No night position chart added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function nightpositioncharthistorypage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        if($resid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $insrt = mysql_query("SELECT * FROM en_bedtimepositions WHERE btp_resid='$resid' AND btp_isactive='0' ORDER BY btp_bedtimeid DESC LIMIT $startno, $limit");
            if(mysql_num_rows($insrt)>0)
            {
                $count1 = mysql_query("SELECT btp_bedtimeid FROM en_bedtimepositions WHERE btp_resid='$resid' AND btp_isactive='0'");
                $count = mysql_num_rows($count1);
                $pagecount = ceil($count/50);

                while($row = mysql_fetch_array($insrt))
                {
                    $updby = $row['btp_updatedby'];
                    $updtdby = mysql_query("SELECT en_firstname, en_lastname FROM en_tabluser WHERE en_userid='$updby'");
                    $row2 = mysql_fetch_array($updtdby);
                    $name1 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                    $updname = ucwords(strtolower($name1));
                    //$updname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                    if($row['btp_observation'] != "")
                    {
                        $posnote = $row['btp_observation'];
                    }
                    else{
                        $posnote = null;
                    }

                    $padval = $row['btp_padvalue'];
                    $padvla = array();
                    if($padval != "")
                    {
                        $padvla = array();
                        $padvalarr = explode(',', $padval);
                        foreach($padvalarr as $pdvl)
                        {
                            $optns = mysql_query("SELECT * FROM en_dailymorningsuboptions WHERE suboptionid='$pdvl'");
                            if(mysql_num_rows($optns)>0)
                            {
                                $row2 = mysql_fetch_array($optns);
                                $padvla[] = $row2['so_tabsuboptions'];
                            }
                            
                        }
                    }
                    $padvalue = implode(',', $padvla);
                    
                    $assistedbyar = explode(',',$row['btp_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $name2 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                            $assistenursear[] = ucwords(strtolower($name2));
                            //$assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    $logdate = $row['btp_updatedon'];
                    $bwl = mysql_query("SELECT * FROM en_resbowelrecords WHERE br_resid='$resid' AND br_isactive='0' AND br_recorddate='$logdate'");
                    if(mysql_num_rows($bwl)>0)
                    {
                        $row2 = mysql_fetch_array($bwl);
                        $boweltype = $row2['br_bowelchartid'];
                        $bowelsize = $row2['br_bowelsize'];
                        $boweltime = $row2['br_bowelrecordtimeid'];
                    }
                    else{
                        $boweltype = "";
                        $bowelsize = "";
                        $boweltime = "";
                    }
                    
                    $msg[] = array("reportid" => $row['btp_bedtimeid'], "nighttimecloths" => $row['btp_nighttimecloths'], "oralcare" => $row['btp_oralcare'], "dentureseaked" => $row['btp_dentureseaked'], "bedposition" => $row['btp_bedposition'], "bedtime" => $row['btp_bedtime'], "passedurine" => $row['btp_passedurine'], "bowelmovement" => $row['btp_bowelmovement'], "padchanged" => $row['btp_padchanged'], "padvalue" => $padvalue, "observation" => $posnote, "updatedby" => $updname, "assistedby" => $assistenurse, "notes" => $row['btp_notes'], "residentawake" => $row['btp_residentawake'], "boweltype" => $boweltype, "bowelsize" => $bowelsize, "boweltime" => $boweltime);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No night position chart added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    /*********************************** ADL Assessment functions ******************/
    
    private function adlassessmentlists()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT se_planofcarerequire FROM en_adlmaintainsafeenvironment WHERE se_resid='$resid' ORDER BY se_safeenvironmentid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                if($adlval == 0)
                {
                    if($row['se_planofcarerequire'] == 'Yes')
                    {
                        $safe = 1;
                    }
                    else{
                        $safe = 0;
                    }
                }
                else{
                    $safe = 1;
                }
            }
            else{
                $safe = 0;
            }
            
            $cmn = mysql_query("SELECT cm_planofcarerequire FROM en_adlcommunication WHERE cm_resid='$resid' ORDER BY cm_communicationid DESC LIMIT 1");
            if(mysql_num_rows($cmn)>0)
            {
                $row = mysql_fetch_array($cmn);
                if($adlval == 0)
                {
                    if($row['cm_planofcarerequire'] == 'Yes')
                    {
                        $communication = 1;
                    }
                    else{
                        $communication = 0;
                    }
                }
                else{
                    $communication = 1;
                }
            }
            else{
                $communication = 0;
            }
            
            $mblt = mysql_query("SELECT mb_planofcarerequired FROM en_adlmobility WHERE mb_resid='$resid' ORDER BY mb_mobilityid DESC LIMIT 1");
            if(mysql_num_rows($mblt)>0)
            {
                $row = mysql_fetch_array($mblt);
                if($adlval == 0)
                {
                    if($row['mb_planofcarerequired'] == 'Yes')
                    {
                        $mobility = 1;
                    }
                    else{
                        $mobility = 0;
                    }
                }
                else{
                    $mobility = 1;
                }
            }
            else{
                $mobility = 0;
            }
            
            $breth = mysql_query("SELECT bt_planofcarerequired FROM en_adlbreathing WHERE bt_resid='$resid' ORDER BY bt_breathingid DESC LIMIT 1");
            if(mysql_num_rows($breth)>0)
            {
                $row = mysql_fetch_array($breth);
                if($adlval == 0)
                {
                    if($row['bt_planofcarerequired'] == 'Yes')
                    {
                        $breathing = 1;
                    }
                    else{
                        $breathing = 0;
                    }
                }
                else{
                    $breathing = 1;
                }
            }
            else{
                $breathing = 0;
            }
            
            $bdytmp = mysql_query("SELECT ct_planofcarerequire FROM en_adlcontrollbodytemperature WHERE ct_resid='$resid' ORDER BY ct_bodytemperatureid DESC LIMIT 1");
            if(mysql_num_rows($bdytmp)>0)
            {
                $row = mysql_fetch_array($bdytmp);
                if($adlval == 0)
                {
                    if($row['ct_planofcarerequire'] == 'Yes')
                    {
                        $bodytemp = 1;
                    }
                    else{
                        $bodytemp = 0;
                    }
                }
                else{
                    $bodytemp = 1;
                }
            }
            else{
                $bodytemp = 0;
            }
            
            $socil = mysql_query("SELECT si_planofcarerequire FROM en_adlsocialinteraction WHERE si_resid='$resid' ORDER BY si_socialinteractionid DESC LIMIT 1");
            if(mysql_num_rows($socil)>0)
            {
                $row = mysql_fetch_array($socil);
                if($adlval == 0)
                {
                    if($row['si_planofcarerequire'] == 'Yes')
                    {
                        $socialintr = 1;
                    }
                    else{
                        $socialintr = 0;
                    }
                }
                else{
                    $socialintr = 1;
                }
            }
            else{
                $socialintr = 0;
            }
            
            $eatdr = mysql_query("SELECT ed_planofcarerequired FROM en_adlfoodeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatanddrinkid DESC LIMIT 1");
            if(mysql_num_rows($eatdr)>0)
            {
                $row = mysql_fetch_array($eatdr);
                if($adlval == 0)
                {
                    if($row['ed_planofcarerequired'] == 'Yes')
                    {
                        $eatdrink = 1;
                    }
                    else{
                        $eatdrink = 0;
                    }
                }
                else{
                    $eatdrink = 1;
                }
            }
            else{
                $eatdrink = 0;
            }
            
            $elmnt = mysql_query("SELECT em_planofcare FROM en_adlelimination WHERE em_resid='$resid' ORDER BY em_eliminationid DESC LIMIT 1");
            if(mysql_num_rows($elmnt)>0)
            {
                $row = mysql_fetch_array($elmnt);
                if($adlval == 0)
                {
                    if($row['em_planofcare'] == 'Yes')
                    {
                        $elimination = 1;
                    }
                    else{
                        $elimination = 0;
                    }
                }
                else{
                    $elimination = 1;
                }
            }
            else{
                $elimination = 0;
            }
            
            $sknass = mysql_query("SELECT sa_planofcarerequired FROM en_adlskinassessment WHERE sa_resid='$resid' ORDER BY sa_skinassessmentid DESC LIMIT 1");
            if(mysql_num_rows($sknass)>0)
            {
                $row = mysql_fetch_array($sknass);
                if($adlval == 0)
                {
                    if($row['sa_planofcarerequired'] == 'Yes')
                    {
                        $skinassesment = 1;
                    }
                    else{
                        $skinassesment = 0;
                    }
                }
                else{
                    $skinassesment = 1;
                }
            }
            else{
                $skinassesment = 0;
            }
            
            $prsnlcre = mysql_query("SELECT pc_planofcarerequire FROM en_adlpersonalcareanddressing WHERE pc_resid='$resid' ORDER BY pc_personalcareid DESC LIMIT 1");
            if(mysql_num_rows($prsnlcre)>0)
            {
                $row = mysql_fetch_array($prsnlcre);
                if($adlval == 0)
                {
                    if($row['pc_planofcarerequire'] == 'Yes')
                    {
                        $personalcare = 1;
                    }
                    else{
                        $personalcare = 0;
                    }
                }
                else{
                    $personalcare = 1;
                }
            }
            else{
                $personalcare = 0;
            }
            
            $sxlty = mysql_query("SELECT es_planofcarerequired FROM en_adlexpresssexuality WHERE es_resid='$resid' ORDER BY es_expresssexualityid DESC LIMIT 1");
            if(mysql_num_rows($sxlty)>0)
            {
                $row = mysql_fetch_array($sxlty);
                if($adlval == 0)
                {
                    if($row['es_planofcarerequired'] == 'Yes')
                    {
                        $sexuality = 1;
                    }
                    else{
                        $sexuality = 0;
                    }
                }
                else{
                    $sexuality = 1;
                }
            }
            else{
                $sexuality = 0;
            }
            
            $slpng = mysql_query("SELECT sl_planofcarerequired FROM en_adlsleeping WHERE sl_resid='$resid' ORDER BY sl_sleepingid DESC LIMIT 1");
            if(mysql_num_rows($slpng)>0)
            {
                $row = mysql_fetch_array($slpng);
                if($adlval == 0)
                {
                    if($row['sl_planofcarerequired'] == 'Yes')
                    {
                        $sleeping = 1;
                    }
                    else{
                        $sleeping = 0;
                    }
                }
                else{
                    $sleeping = 1;
                }
            }
            else{
                $sleeping = 0;
            }
            
            $sprtlty = mysql_query("SELECT st_planofcarerequired FROM en_adlspirituality WHERE st_resid='$resid' ORDER BY st_spiritualityid DESC LIMIT 1");
            if(mysql_num_rows($sprtlty)>0)
            {
                $row = mysql_fetch_array($sprtlty);
                if($adlval == 0)
                {
                    if($row['st_planofcarerequired'] == 'Yes')
                    {
                        $spirituality = 1;
                    }
                    else{
                        $spirituality = 0;
                    }
                }
                else{
                    $spirituality = 1;
                }
            }
            else{
                $spirituality = 0;
            }
            
            $dyng = mysql_query("SELECT dy_planofcarerequired FROM en_adldying WHERE dy_resid='$resid' ORDER BY dy_dyingid DESC LIMIT 1");
            if(mysql_num_rows($dyng)>0)
            {
                $row = mysql_fetch_array($dyng);
                if($adlval == 0)
                {
                    if($row['dy_planofcarerequired'] == 'Yes')
                    {
                        $dying = 1;
                    }
                    else{
                        $dying = 0;
                    }
                }
                else{
                    $dying = 1;
                }
            }
            else{
                $dying = 0;
            }
            
            $psycho = mysql_query("SELECT ps_planofcarerequire FROM en_adlpsychosocialwellbeing WHERE ps_resid='$resid' ORDER BY ps_psycosocialwellid DESC LIMIT 1");
            if(mysql_num_rows($psycho)>0)
            {
                $row = mysql_fetch_array($psycho);
                if($adlval == 0)
                {
                    if($row['ps_planofcarerequire'] == 'Yes')
                    {
                        $psychosocial = 1;
                    }
                    else{
                        $psychosocial = 0;
                    }
                }
                else{
                    $psychosocial = 1;
                }
            }
            else{
                $psychosocial = 0;
            }
            
            $msg = array("careplan" => $adlval, "Maintaining Safe Environment" => $safe, "Communication" => $communication, "Mobility" => $mobility, "Breathing" => $breathing, "Controlling body Temperature" => $bodytemp, "Social Interaction/Recreation" => $socialintr, "Eating and Drinking" => $eatdrink, "Elimination" => $elimination, "Skin Assessment" => $skinassesment, "Personal Care and Dressing" => $personalcare, "Expressing Sexuality" => $sexuality, "Sleeping" => $sleeping, "Spirituality" => $spirituality, "Dying" => $dying, "Psychosocial Well-Being" => $psychosocial);
            
            $success = array('status' => "success", "msg" => $msg);
            $this->response($this->json($success), 200);  
            return true;
            
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function adlsafeenvironment()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT se_safeenvironmentid, se_rescurrentstatus, se_planofcarerequire FROM en_adlmaintainsafeenvironment WHERE se_resid='$resid' ORDER BY se_safeenvironmentid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['se_safeenvironmentid'];
                $planofcare = $row['se_planofcarerequire'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlsafe' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }

                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['se_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function adlcommunication()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT cm_communicationid, cm_rescurrentstatus, cm_planofcarerequire FROM en_adlcommunication WHERE cm_resid='$resid' ORDER BY cm_communicationid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['cm_communicationid'];
                $planofcare = $row['cm_planofcarerequire'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlcommunication' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }

                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['cm_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function adlmobility()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT mb_mobilityid, mb_rescurrentstatus, mb_planofcarerequired FROM en_adlmobility WHERE mb_resid='$resid' ORDER BY mb_mobilityid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['mb_mobilityid'];
                $planofcare = $row['mb_planofcarerequired'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlmobility' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);

                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }

                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['mb_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function adlbreathing()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT bt_breathingid, bt_rescurrentstatus, bt_planofcarerequired FROM en_adlbreathing WHERE bt_resid='$resid' ORDER BY bt_breathingid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['bt_breathingid'];
                $planofcare = $row['bt_planofcarerequired'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlbreathing' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }

                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['bt_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function adlbodytemperature()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT ct_bodytemperatureid, ct_rescurrentstatus, ct_planofcarerequire FROM en_adlcontrollbodytemperature WHERE ct_resid='$resid' ORDER BY ct_bodytemperatureid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['ct_bodytemperatureid'];
                $planofcare = $row['ct_planofcarerequire'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlbdytemp' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }

                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['ct_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function adlsocialinteraction()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT si_socialinteractionid, si_rescurrentstatus, si_planofcarerequire FROM en_adlsocialinteraction WHERE si_resid='$resid' ORDER BY si_socialinteractionid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['si_socialinteractionid'];
                $planofcare = $row['si_planofcarerequire'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlsocialintrction' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }

                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['si_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function adleatdrink()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT ed_eatanddrinkid, ed_rescurrentstatus, ed_planofcarerequired FROM en_adlfoodeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatanddrinkid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['ed_eatanddrinkid'];
                $planofcare = $row['ed_planofcarerequired'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adleatanddrink' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }

                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['ed_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function adlelmination()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT em_eliminationid, em_rescurrentstatus, em_planofcare FROM en_adlelimination WHERE em_resid='$resid' ORDER BY em_eliminationid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['em_eliminationid'];
                $planofcare = $row['em_planofcare'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlelimination' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);

                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }

                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['em_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  

            return true;
        }
    }
    
    private function adlskinassessment()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT sa_skinassessmentid, sa_rescurrentstatus, sa_planofcarerequired FROM en_adlskinassessment WHERE sa_resid='$resid' ORDER BY sa_skinassessmentid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['sa_skinassessmentid'];
                $planofcare = $row['sa_planofcarerequired'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlskinassmnt' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);

                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];



                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }

                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['sa_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  

            return true;
        }
    }
    
    private function adlpersonalcare()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT pc_personalcareid, pc_rescurrentstatus, pc_planofcarerequire FROM en_adlpersonalcareanddressing WHERE pc_resid='$resid' ORDER BY pc_personalcareid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['pc_personalcareid'];
                $planofcare = $row['pc_planofcarerequire'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlpersonalcare' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];



                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => $planofcare, "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['pc_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  

            return true;
        }
    }
    
    private function adlsexuality()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT es_expresssexualityid, es_planofcarerequired, es_rescurrentstatus FROM en_adlexpresssexuality WHERE es_resid='$resid' ORDER BY es_expresssexualityid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['es_expresssexualityid'];
                $planofcare = $row['es_planofcarerequired'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlexpressex' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];



                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => $planofcare, "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['es_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  

            return true;
        }
    }
    
    private function adlsleeping()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT sl_sleepingid, sl_planofcarerequired, sl_rescurrentstatus FROM en_adlsleeping WHERE  sl_resid='$resid' ORDER BY  sl_sleepingid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['sl_sleepingid'];
                $planofcare = $row['sl_planofcarerequired'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlsleeping' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);
                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => $planofcare, "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['sl_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  

            return true;
        }
    }
    
    private function adlspirituality()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT st_spiritualityid, st_planofcarerequired, st_rescurrentstatus FROM en_adlspirituality WHERE  st_resid='$resid' ORDER BY  st_spiritualityid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['st_spiritualityid'];
                $planofcare = $row['st_planofcarerequired'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlspirituality' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);

                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);

                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => $planofcare, "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['st_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  

            return true;
        }
    }
    
    private function adldying()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT dy_dyingid, dy_planofcarerequired, dy_rescurrentstatus FROM en_adldying WHERE    dy_resid='$resid' ORDER BY  dy_dyingid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['dy_dyingid'];
                $planofcare = $row['dy_planofcarerequired'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adldying' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }
                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("_", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);

                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];



                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => $planofcare, "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['dy_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  

            return true;
        }
    }
    
    private function adlpsychosocial()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT ps_psycosocialwellid, ps_planofcarerequire, ps_rescurrentstatus FROM en_adlpsychosocialwellbeing WHERE   ps_resid='$resid' ORDER BY  ps_psycosocialwellid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['ps_psycosocialwellid'];
                $planofcare = $row['ps_planofcarerequire'];
                $careplans = array();
                if($adlval == 0)
                {
                    if($planofcare == 'Yes')
                    {
                        $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='adlpsychosocial' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                        if(mysql_num_rows($crpln)>0)
                        {
                            while($row2 = mysql_fetch_array($crpln))
                            {
                                $intrvntns = array();
                                $reviews = array();
                                $careplanid = $row2['careplanid'];
                                $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                                if(mysql_num_rows($intvn)>0)
                                {
                                    while($row3 = mysql_fetch_array($intvn))
                                    {
                                        $usid = $row3['it_updatedby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        if($row3['it_setreminder'] == 1)
                                        {
                                            $rvwdate = $row3['it_reviewdate'];
                                        }
                                        else{
                                            $rvwdate = 'Nil';
                                        }

                                        $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                        $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                        $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                        $intrventiondet4 = strip_tags($intrventiondet3);
                                        $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                        $intrventiondet = str_replace("_", "\n", $intrventiondet5);

                                        $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                                    }
                                }
                                $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                                if(mysql_num_rows($rvws)>0)
                                {
                                    while($row3 = mysql_fetch_array($rvws))
                                    {
                                        $usid = $row3['rer_reviewdby'];
                                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                        if(mysql_num_rows($usr)>0)
                                        {
                                            $row4 = mysql_fetch_array($usr);
                                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                            $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                        }
                                        else{
                                            $empname = "";
                                        }

                                        $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                        $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                        $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                        $reviewcmnts4 = strip_tags($reviewcmnts3);
                                        $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                        $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);

                                        $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                                    }
                                }
                                $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                                $goal2 = str_replace(array("</li>"), "_", $goal1);
                                $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                                $goal4 = strip_tags($goal3);
                                $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                                $goals = str_replace("-", "\n", $goal5);

                                $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                                $issues2 = str_replace(array("</li>"), "_", $issues1);
                                $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                                $issues4 = strip_tags($issues3);
                                $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                                $issues = str_replace("_", "\n", $issues5);


                                $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];

                            }

                        }
                        $msg= array("careplan" => $adlval, "careplanrequire" => $planofcare, "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else{
                        $msg= array("careplan" => $adlval, "careplanrequire" => 'No', "careplanlist" => $careplans);
                        $success = array('status' => "success", "msg" => $msg);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                }
                else{
                    $status1 = str_replace(array("</p>"), "__", $row['ps_rescurrentstatus']);
                    $status2 = str_replace(array("</li>"), "_", $status1);
                    $status3 = str_replace(array("&nbsp;"), " ", $status2);
                    $status = strip_tags($status3);
                    $resstatus1 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $status);
                    $resstatus = str_replace("_", "\n", $resstatus1);

                    $msg = array("careplan" => $adlval, "residentstatus" => $resstatus);
                    $success = array('status' => "success", "msg" => $msg);
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  

            return true;
        }
    }
    
    //**************Comprehensive Assessment ***************/
    private function compassessmentlists()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $apset = mysql_query("SELECT * FROM en_applicationsettings");
            if(mysql_num_rows($apset)>0)
            {
                $row = mysql_fetch_array($apset);
                $adlval = $row['as_adlcareplan'];
            }
            else{
                $adlval = 0;
            }
            
            $sfe = mysql_query("SELECT se_safeenvironmentid FROM en_compsafeenvironment WHERE se_resid='$resid' ORDER BY se_safeenvironmentid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $safe = 1;
            }
            else{
                $safe = 0;
            }
            
            $cmn = mysql_query("SELECT cm_communicationid FROM en_compcommunication WHERE cm_resid='$resid' ORDER BY cm_communicationid DESC LIMIT 1");
            if(mysql_num_rows($cmn)>0)
            {
                $communication = 1;
            }
            else{
                $communication = 0;
            }
            
            $mblt = mysql_query("SELECT mb_mobilityid FROM en_compmobility WHERE mb_resid='$resid' ORDER BY mb_mobilityid DESC LIMIT 1");
            if(mysql_num_rows($mblt)>0)
            {
                $mobility = 1;
            }
            else{
                $mobility = 0;
            }
            
            $breth = mysql_query("SELECT bt_breathingid FROM en_compbreathing WHERE bt_resid='$resid' ORDER BY bt_breathingid DESC LIMIT 1");
            if(mysql_num_rows($breth)>0)
            {
                $breathing = 1;
            }
            else{
                $breathing = 0;
            }
            
            $bdytmp = mysql_query("SELECT bs_bodytempid FROM en_compbodytempsensitivity WHERE bs_resid='$resid' ORDER BY bs_bodytempid DESC LIMIT 1");
            if(mysql_num_rows($bdytmp)>0)
            {
                $bodytemp = 1;
            }
            else{
                $bodytemp = 0;
            }
            
            $socil = mysql_query("SELECT si_socialinteractionid FROM en_compsocialinteraction WHERE si_resid='$resid' ORDER BY si_socialinteractionid DESC LIMIT 1");
            if(mysql_num_rows($socil)>0)
            {
                $socialintr = 1;
            }
            else{
                $socialintr = 0;
            }
            
            $eatdr = mysql_query("SELECT ed_eatdrinkid FROM en_compeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatdrinkid DESC LIMIT 1");
            if(mysql_num_rows($eatdr)>0)
            {
                $eatdrink = 1;
            }
            else{
                $eatdrink = 0;
            }
            
            $elmnt = mysql_query("SELECT el_eliminationid FROM en_compelimination WHERE el_resid='$resid' ORDER BY el_eliminationid DESC LIMIT 1");
            if(mysql_num_rows($elmnt)>0)
            {
                $elimination = 1;
            }
            else{
                $elimination = 0;
            }
            
            $sknass = mysql_query("SELECT sa_skinassessmentid FROM en_compskinassessment WHERE sa_resid='$resid' ORDER BY sa_skinassessmentid DESC LIMIT 1");
            if(mysql_num_rows($sknass)>0)
            {
                $skinassesment = 1;
            }
            else{
                $skinassesment = 0;
            }
            
            $prsnlcre = mysql_query("SELECT pd_personalcareid FROM en_comppersonalcaredress WHERE pd_resid='$resid' ORDER BY pd_personalcareid DESC LIMIT 1");
            if(mysql_num_rows($prsnlcre)>0)
            {
                $personalcare = 1;
            }
            else{
                $personalcare = 0;
            }
            
            $sxlty = mysql_query("SELECT es_sexualityid FROM en_compsexuality WHERE es_resid='$resid' ORDER BY es_sexualityid DESC LIMIT 1");
            if(mysql_num_rows($sxlty)>0)
            {
                $sexuality = 1;
            }
            else{
                $sexuality = 0;
            }
            
            $slpng = mysql_query("SELECT sl_sleepingid FROM en_compsleeping WHERE sl_resid='$resid' ORDER BY sl_sleepingid DESC LIMIT 1");
            if(mysql_num_rows($slpng)>0)
            {
                $sleeping = 1;
            }
            else{
                $sleeping = 0;
            }
            
            $sprtlty = mysql_query("SELECT sp_spiritualityid FROM en_compspirituality WHERE sp_resid='$resid' ORDER BY sp_spiritualityid DESC LIMIT 1");
            if(mysql_num_rows($sprtlty)>0)
            {
                $spirituality = 1;
            }
            else{
                $spirituality = 0;
            }
            
            $dyng = mysql_query("SELECT esl_endstagelifeid FROM en_compendstageoflife WHERE esl_resid='$resid' ORDER BY esl_endstagelifeid DESC LIMIT 1");
            if(mysql_num_rows($dyng)>0)
            {
                $dying = 1;
            }
            else{
                $dying = 0;
            }
            
            $psycho = mysql_query("SELECT pw_psychosocialid FROM en_comppsychosocial WHERE pw_resid='$resid' ORDER BY pw_psychosocialid DESC LIMIT 1");
            if(mysql_num_rows($psycho)>0)
            {
                $psychosocial = 1;
            }
            else{
                $psychosocial = 0;
            }
            
            $msg = array("careplan" => $adlval, "Maintaining Safe Environment" => $safe, "Communication" => $communication, "Mobility" => $mobility, "Breathing" => $breathing, "Controlling body Temperature" => $bodytemp, "Social Interaction/Recreation" => $socialintr, "Eating and Drinking" => $eatdrink, "Elimination" => $elimination, "Skin Assessment" => $skinassesment, "Personal Care and Dressing" => $personalcare, "Expressing Sexuality" => $sexuality, "Sleeping" => $sleeping, "Spirituality" => $spirituality, "Dying" => $dying, "Psychosocial Well-Being" => $psychosocial);
            
            $success = array('status' => "success", "msg" => $msg);
            $this->response($this->json($success), 200);  
            return true;
            
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compsafeenvironment()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT se_safeenvironmentid FROM en_compsafeenvironment WHERE se_resid='$resid' ORDER BY se_safeenvironmentid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['se_safeenvironmentid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compsafe' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compcommunication()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT cm_communicationid FROM en_compcommunication WHERE cm_resid='$resid' ORDER BY cm_communicationid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['cm_communicationid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compcomunication' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compmobility()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT mb_mobilityid FROM en_compmobility WHERE mb_resid='$resid' ORDER BY mb_mobilityid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['mb_mobilityid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compmobility' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $row2['rc_careplanname'], "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compbreathing()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT bt_breathingid FROM en_compbreathing WHERE bt_resid='$resid' ORDER BY bt_breathingid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['bt_breathingid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compbreathing' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compbodytemperature()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT bs_bodytempid FROM en_compbodytempsensitivity WHERE bs_resid='$resid' ORDER BY bs_bodytempid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['bs_bodytempid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compbodytemp' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compsocialinteraction()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT si_socialinteractionid FROM en_compsocialinteraction WHERE si_resid='$resid' ORDER BY si_socialinteractionid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['si_socialinteractionid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compsocilntr' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compeatdrink()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT ed_eatdrinkid FROM en_compeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatdrinkid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['ed_eatdrinkid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compeatdrink' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compelmination()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT el_eliminationid FROM en_compelimination WHERE el_resid='$resid' ORDER BY el_eliminationid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['el_eliminationid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compelimination' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compskinassessment()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT sa_skinassessmentid FROM en_compskinassessment WHERE sa_resid='$resid' ORDER BY sa_skinassessmentid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['sa_skinassessmentid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compskinassessment' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function comppersonalcare()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT pd_personalcareid FROM en_comppersonalcaredress WHERE pd_resid='$resid' ORDER BY pd_personalcareid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['pd_personalcareid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='comppersonalcare' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compsexuality()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT es_sexualityid FROM en_compsexuality WHERE es_resid='$resid' ORDER BY es_sexualityid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['es_sexualityid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compsexuality' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compsleeping()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT sl_sleepingid FROM en_compsleeping WHERE sl_resid='$resid' ORDER BY sl_sleepingid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['sl_sleepingid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compsleeping' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compspirituality()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT sp_spiritualityid FROM en_compspirituality WHERE sp_resid='$resid' ORDER BY sp_spiritualityid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['sp_spiritualityid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compspirituality' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function compdying()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT esl_endstagelifeid FROM en_compendstageoflife WHERE esl_resid='$resid' ORDER BY esl_endstagelifeid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['esl_endstagelifeid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='compendstagelife' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function comppsychosocial()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            $sfe = mysql_query("SELECT pw_psychosocialid FROM en_comppsychosocial WHERE pw_resid='$resid' ORDER BY pw_psychosocialid DESC LIMIT 1");
            if(mysql_num_rows($sfe)>0)
            {
                $row = mysql_fetch_array($sfe);
                $safeid = $row['pw_psychosocialid'];
                $careplans = array();

                $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_adlname='comppsychosocial' AND rc_adlcareid='$safeid' ORDER BY careplanid DESC");
                if(mysql_num_rows($crpln)>0)
                {
                    while($row2 = mysql_fetch_array($crpln))
                    {
                        $intrvntns = array();
                        $reviews = array();
                        $careplanid = $row2['careplanid'];
                        $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                        if(mysql_num_rows($intvn)>0)
                        {
                            while($row3 = mysql_fetch_array($intvn))
                            {
                                $usid = $row3['it_updatedby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                
                                if($row3['it_setreminder'] == 1)
                                {
                                    $rvwdate = $row3['it_reviewdate'];
                                }
                                else{
                                    $rvwdate = 'Nil';
                                }
                                
                                $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                                $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                                $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                                $intrventiondet4 = strip_tags($intrventiondet3);
                                $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                                $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                                $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                            }
                        }
                        $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                        if(mysql_num_rows($rvws)>0)
                        {
                            while($row3 = mysql_fetch_array($rvws))
                            {
                                $usid = $row3['rer_reviewdby'];
                                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                                if(mysql_num_rows($usr)>0)
                                {
                                    $row4 = mysql_fetch_array($usr);
                                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                    $empname = ucwords(strtolower($name2));
                                    //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                                }
                                else{
                                    $empname = "";
                                }
                                $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                                $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                                $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                                $reviewcmnts4 = strip_tags($reviewcmnts3);
                                $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                                $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                                $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                            }
                        }
                        
                        $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                        
                        $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                        $goal2 = str_replace(array("</li>"), "_", $goal1);
                        $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                        $goal4 = strip_tags($goal3);
                        $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                        $goals = str_replace("_", "\n", $goal5);

                        $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                        $issues2 = str_replace(array("</li>"), "_", $issues1);
                        $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                        $issues4 = strip_tags($issues3);
                        $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                        $issues = str_replace("_", "\n", $issues5);
                        $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                        //$goals =  $row2['rc_careplangoals'];
                        
                    }
                    
                }
                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;

            }
            else{
                $success = array('status' => "failed", "msg" => "No assessments updated.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
// ******************* End comprehensive assessment *************/

    private function residentothercareplans()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        if($resid != "")
        {
            
            
            $careplans = array();

            $crpln = mysql_query("SELECT * FROM en_residentcareplan WHERE rc_resid='$resid' AND rc_isactive='0' AND rc_isreview='0' AND (rc_adlname='' OR rc_adlname IS NULL) ORDER BY careplanid DESC");
            if(mysql_num_rows($crpln)>0)
            {
                while($row2 = mysql_fetch_array($crpln))
                {
                    $intrvntns = array();
                    $reviews = array();
                    $careplanid = $row2['careplanid'];
                    $intvn = mysql_query("SELECT * FROM en_nursinginterventions WHERE it_careplanid='$careplanid' ORDER BY interventionid DESC");
                    if(mysql_num_rows($intvn)>0)
                    {
                        while($row3 = mysql_fetch_array($intvn))
                        {
                            $usid = $row3['it_updatedby'];
                            $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                            if(mysql_num_rows($usr)>0)
                            {
                                $row4 = mysql_fetch_array($usr);
                                $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                $empname = ucwords(strtolower($name2));
                                //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                            }
                            else{
                                $empname = "";
                            }
                            
                            if($row3['it_setreminder'] == 1)
                            {
                                $rvwdate = $row3['it_reviewdate'];
                            }
                            else{
                                $rvwdate = 'Nil';
                            }
                            
                            $intrventiondet1 = str_replace(array("</p>"), "__", $row3['it_intervention']);
                            $intrventiondet2 = str_replace(array("</li>"), "_", $intrventiondet1);
                            $intrventiondet3 = str_replace(array("&nbsp;"), " ", $intrventiondet2);
                            $intrventiondet4 = strip_tags($intrventiondet3);
                            $intrventiondet5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $intrventiondet4);
                            $intrventiondet = str_replace("_", "\n", $intrventiondet5);
                            $intrvntns[] = array("intervention" => $intrventiondet, "priority" => $row3['it_priority'], "reviewdate" => $rvwdate, "updatedby" => $empname, "updatedon" => $row3['it_updatedon']);
                        }
                    }
                    $rvws = mysql_query("SELECT *FROM en_rescareplanreview WHERE rer_careplanid='$careplanid' ORDER BY reviewid DESC");
                    if(mysql_num_rows($rvws)>0)
                    {
                        while($row3 = mysql_fetch_array($rvws))
                        {
                            $usid = $row3['rer_reviewdby'];
                            $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                            if(mysql_num_rows($usr)>0)
                            {
                                $row4 = mysql_fetch_array($usr);
                                $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                                $empname = ucwords(strtolower($name2));
                                //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row4['en_lastname']);
                            }
                            else{
                                $empname = "";
                            }
                            $reviewcmnts1 = str_replace(array("</p>"), "__", $row3['rer_review']);
                            $reviewcmnts2 = str_replace(array("</li>"), "_", $reviewcmnts1);
                            $reviewcmnts3 = str_replace(array("&nbsp;"), " ", $reviewcmnts2);
                            $reviewcmnts4 = strip_tags($reviewcmnts3);
                            $reviewcmnts5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $reviewcmnts4);
                            $reviewcmnts = str_replace("_", "\n", $reviewcmnts5);
                            $reviews[] = array("review" => $reviewcmnts, "reviewby" => $empname, "reviewdate" => $row3['rer_reviewdate'], "nextreviewdate" => $row3['rer_nextreviewdate']);
                        }
                    }
                    
                    $careplanname = preg_replace('/[^A-Za-z0-9\-\']/', ' ',$row2['rc_careplanname']);
                    
                    $goal1 = str_replace(array("</p>"), "__", $row2['rc_careplangoals']);
                    $goal2 = str_replace(array("</li>"), "_", $goal1);
                    $goal3 = str_replace(array("&nbsp;"), " ", $goal2);
                    $goal4 = strip_tags($goal3);
                    $goal5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $goal4);
                    $goals = str_replace("_", "\n", $goal5);

                    $issues1 = str_replace(array("</p>"), "__", $row2['rc_careplanissues']);
                    $issues2 = str_replace(array("</li>"), "_", $issues1);
                    $issues3 = str_replace(array("&nbsp;"), " ", $issues2);
                    $issues4 = strip_tags($issues3);
                    $issues5 =  preg_replace('/[^A-Za-z0-9\-\']/', " ", $issues4);
                    $issues = str_replace("_", "\n", $issues5);
                    $careplans[] = array("careplanid" => $row2['careplanid'], "careplanname" => $careplanname, "goals" => $goals, "issues" => $issues, "reviewdate" => $row2['rc_reviewdate'], "interventions" => $intrvntns, "reviews" => $reviews);
                    //$goals =  $row2['rc_careplangoals'];
                    
                }

                $msg= array("careplan" => 0, "careplanrequire" => 'Yes', "careplanlist" => $careplans);
                $success = array('status' => "success", "msg" => $msg);
                $this->response($this->json($success), 200);  
                return true;
                
            }
            else{
                $success = array('status' => "failed", "msg" => "No careplan available.");
                $this->response($this->json($success), 200);  
                return true;
            }

            
        }
        else{
            $success = array('status' => "failed", "msg" => "Required field cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function recordmultiobservation()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $assistedby = $this->_request['assistedby'];
        $blood_pressure = $this->_request['blood_pressure'];
        $temperature = $this->_request['temperature'];
        $pulse = $this->_request['pulse'];
        $sp02 = $this->_request['sp02'];
        $weight = $this->_request['weight'];
        $weightfrequency = $this->_request['weightfrequency'];
        $height = $this->_request['height'];
        $respiration = $this->_request['respiration'];
        $bmi = $this->_request['bmi'];
        $urinalysis = $this->_request['urinalysis'];
        $bloodglucose = $this->_request['bloodglucose'];
        $comments = $this->_request['comments'];
        //$curdate = date('Y-m-d H:i:s');
        $isoffline = $this->_request['isoffline'];
        if($isoffline == '1')
        {
            $offlne = "1";
            $curdate=date('Y-m-d H:i:s', strtotime($this->_request['updateddate']));
        }
        else{
            $offlne = "0";
            $curdate=date('Y-m-d H:i:s');
        }
        
        if($userid != "" && $resid != "")
        {
            $residarr = explode('#', $resid);
            $blood_pressurearr = explode('#', $blood_pressure);
            $temperaturearr = explode('#', $temperature);
            $pulsearr = explode('#', $pulse);
            $sp02arr = explode('#', $sp02);
            $weightarr = explode('#', $weight);
            $weightfrequencyarr = explode('#', $weightfrequency);
            $heightarr = explode('#', $height);
            $respirationarr = explode('#', $respiration);
            $bmiarr = explode('#', $bmi);
            $urinalysisarr = explode('#', $urinalysis);
            $bloodglucosearr = explode('#', $bloodglucose);
            $commentsarr = explode('#', $comments);
            
            $k = 0;
            foreach($residarr as $reval)
            {
                if($blood_pressurearr[$k] != "")
                {
                    $bparray = explode('/', $blood_pressurearr[$k]);
                    $bp1 = $bparray[0];
                    $bp2 = $bparray[1];
                }
                else{
                    $bp1 = "";
                    $bp2 = "";
                }
                
                if($bloodglucosearr[$k] != "")
                {
                    $bglarray = explode('_', $bloodglucosearr[$k]);
                    $isglucose = "yes";
                    $measured = $bglarray[0];
                    $glucose = $bglarray[1];
                    $glucosemg = $bglarray[2];
                    $note = $bglarray[3];
                }
                else{
                    $isglucose = "no";
                    $measured = "";
                    $glucose = "";
                    $glucosemg = "";
                    $note = "";
                }
                
                $insrt = mysql_query("INSERT INTO en_resadmobservation(resadmid, ob_bloodpressure, ob_pulse, ob_temparature, ob_sp02, ob_weight, ob_height, ob_respiration, ob_bmi, ob_urinalysis, ob_updatedon, ob_updatedby, ob_comments, ob_bloodglucose, ob_bloodpressure2, ob_isbloodglucose, ob_glucosemeasured, ob_bloodglucosemg, ob_glucosenote, ob_assistedby, ob_weightfrequency, ob_isoffline) VALUES('$reval', '$bp1', '$pulsearr[$k]', '$temperaturearr[$k]', '$sp02arr[0]', '$weightarr[$k]', '$heightarr[$k]', '$respirationarr[$k]', '$bmiarr[$k]', '$urinalysisarr[$k]', '$curdate', '$userid', '$commentsarr[$k]', '$glucose', '$bp2', '$isglucose', '$measured', '$glucosemg', '$note', '$assistedby', '$weightfrequencyarr[$k]', '$offlne')");
                
                $k++;
            }
            
            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully added.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addobservation()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        $blood_pressure = $this->_request['blood_pressure'];
        $temperature = $this->_request['temperature'];
        $pulse = $this->_request['pulse'];
        $weight = $this->_request['weight'];
        $weightfrequency = $this->_request['weightfrequency'];
        $comments = $this->_request['comments'];
        $curdate = date('Y-m-d H:i:s');
        
        if($userid != "" && $resid != "")
        {
            if($blood_pressure != "")
            {
                $bparray = explode('/', $blood_pressure);
                $bp1 = $bparray[0];
                $bp2 = $bparray[1];
            }
            else{
                $bp1 = "";
                $bp2 = "";
            }
            $insrt = mysql_query("INSERT INTO en_resadmobservation(resadmid, ob_bloodpressure, ob_pulse, ob_temparature, ob_weight, ob_updatedon, ob_updatedby, ob_comments, ob_bloodpressure2, ob_weightfrequency) VALUES('$resid', '$bp1', '$pulse', '$temperature', '$weight', '$curdate', '$userid', '$comments', '$bp2', '$weightfrequency')");
            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully added.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getobservation()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        
        if($resid != "")
        {
            //$selct = mysql_query("SELECT * FROM en_resadmobservation WHERE resadmid='$resid' AND (ob_bloodpressure!='' OR ob_pulse != '' OR ob_temparature != '' OR ob_weight != '') ORDER BY readmobservationid DESC");
            $selct = mysql_query("SELECT * FROM en_resadmobservation WHERE resadmid='$resid' ORDER BY readmobservationid DESC");
            if(mysql_num_rows($selct) > 0)
            {
                while($row = mysql_fetch_array($selct))
                {
                    $usid = $row['ob_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name2 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name2));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    
                    $assistedbyar = explode(',',$row['ob_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $name2 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                            $assistenursear[] = ucwords(strtolower($name2));
                            //$assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    if($row['ob_bloodpressure']  != "")
                    {
                        $bldpressure = $row['ob_bloodpressure'] . "/" . $row['ob_bloodpressure2'];
                    }
                    else{
                        $bldpressure = "";
                    }
                    
                    $obsrvtn[] = array("observationid" => $row['readmobservationid'], "bloodpressure" => $bldpressure, "pulse" => $row['ob_pulse'], "temparature" => $row['ob_temparature'], "sp02" => $row['ob_sp02'], "weight" => $row['ob_weight'], "height" => $row['ob_height'], "respiration" => $row['ob_respiration'], "bmi" => $row['ob_bmi'], "urinalysis" => $row['ob_urinalysis'], "bloodglucose" => $row['ob_bloodglucose'], "glucosemeasured" => $row['ob_glucosemeasured'], "glucosenote" => $row['ob_glucosenote'], "comments" => $row['ob_comments'], "assistedby" => $assistenurse, "updatedon" => $row['ob_updatedon'], "updatedby" => $empname);
                }
                $success = array('status' => "success", "msg" => $obsrvtn);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No observations added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getobservationpage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $resid = $this->_request['resid'];
        $userid = $this->_request['userid'];
        $page = $this->_request['page'];
        
        if($resid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            //$selct = mysql_query("SELECT * FROM en_resadmobservation WHERE resadmid='$resid' AND (ob_bloodpressure!='' OR ob_pulse != '' OR ob_temparature != '' OR ob_weight != '') ORDER BY readmobservationid DESC");
            $selct = mysql_query("SELECT * FROM en_resadmobservation WHERE resadmid='$resid' ORDER BY readmobservationid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT readmobservationid FROM en_resadmobservation WHERE resadmid='$resid'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($selct) > 0)
            {
                while($row = mysql_fetch_array($selct))
                {
                    $usid = $row['ob_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name2 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name2));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    
                    $assistedbyar = explode(',',$row['ob_assistedby']);
                    $assistenursear = array();
                    foreach($assistedbyar as $assistedby)
                    {
                        if($assistedby != "")
                        {
                            $nurse1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$assistedby'");
                            $row2 = mysql_fetch_array($nurse1);
                            $name2 = htmlentities($row2['en_firstname'] . " " . $row2['en_lastname']);
                            $assistenursear[] = ucwords(strtolower($name2));
                            //$assistenursear[] = preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['en_lastname']);
                        }
                    }
                    $assistenurse = implode(', ', $assistenursear);
                    
                    if($row['ob_bloodpressure']  != "")
                    {
                        $bldpressure = $row['ob_bloodpressure'] . "/" . $row['ob_bloodpressure2'];
                    }
                    else{
                        $bldpressure = "";
                    }
                    
                    $obsrvtn[] = array("observationid" => $row['readmobservationid'], "bloodpressure" => $bldpressure, "pulse" => $row['ob_pulse'], "temparature" => $row['ob_temparature'], "sp02" => $row['ob_sp02'], "weight" => $row['ob_weight'], "height" => $row['ob_height'], "respiration" => $row['ob_respiration'], "bmi" => $row['ob_bmi'], "urinalysis" => $row['ob_urinalysis'], "bloodglucose" => $row['ob_bloodglucose'], "glucosemeasured" => $row['ob_glucosemeasured'], "glucosenote" => $row['ob_glucosenote'], "comments" => $row['ob_comments'], "assistedby" => $assistenurse, "updatedon" => $row['ob_updatedon'], "updatedby" => $empname);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $obsrvtn);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No observations added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getallmessageusers()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $emparray = array();
            $grouparraymsg = array();
            $tn = 1;
            
            $msglst = mysql_query("SELECT * FROM en_sendprivatemessagestaff a LEFT JOIN en_privatechatgroups b ON b.pg_chatgroupid=a.pm_chatgroupid WHERE a.pm_sendto='$userid' OR a.pm_sebdby='$userid' OR a.pm_chattype='group' ORDER BY a.pm_senddatetime DESC");
            
            if(mysql_num_rows($msglst) > 0)
            {
                while($row = mysql_fetch_array($msglst))
                {
                    if($row['pm_chattype'] == 'group')
                    {
                        if(!in_array($row['pm_chatgroupid'], $grouparraymsg))
                        {
                            $grouparray = unserialize($row['pg_groupmembers']);
                            if(in_array($userid, $grouparray))
                            {
                                $grpmembers = array();
                                foreach($grouparray as $mbrval)
                                {
                                    if($userid != $mbrval)
                                    {
                                        $groupid = $row['pm_chatgroupid'];
                                        $privatemessage = mysql_query("SELECT * FROM en_sendprivatemessagestaff WHERE pm_chatgroupid='" .$groupid . "' AND pm_sebdby !='" . $userid . "' AND pm_send_status='0' ORDER BY pm_senddatetime DESC");
                                        $privatemessagecount = mysql_num_rows($privatemessage);
                                        
                                        $usredet = mysql_query("SELECT * FROM en_tabluser a LEFT JOIN en_tbluertype b ON b.en_uertypeid=a.en_usertype WHERE a.en_userid='$mbrval'");
                                        $row3 = mysql_fetch_array($usredet);
                                        
                                        $usrimg = mysql_query("SELECT * FROM en_tblempphoto WHERE ep_userid='$mbrval' ORDER BY ep_empphotoid DESC");
                                        if(mysql_num_rows($usrimg)!=0)
                                        {
                                            $row2 = mysql_fetch_array($usrimg);
                                            $empimage = "http://dev-enursing.demormc.com/public/upload/userimage/".$row2['ep_imageurl'];
                                            
                                        }
                                        else{
                                            $empimage = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                                        }
                                        $name2 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                                        $empname = ucwords(strtolower($name2));
                                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                                        $grpmembers[] = array("name" => $empname, "userid" => $row3['en_userid'], "image" => $empimage, "typeid" => $row3['en_usertype'], "usertype" => $row3['en_usertypename']);
                                    }
                                }
                                $userlst[] = array("name" => $row['pg_groupname'], "lastdate" => $row['pm_senddatetime'], "type" => 'group', "toid" => $row['pm_chatgroupid'], "members" => $grpmembers, "unreadcount" => $privatemessagecount);
                                $tn++;
                            }
                            $grouparraymsg[] = $row['pm_chatgroupid'];
                        }
                        
                    }
                    else{
                        if($userid != $row['pm_sebdby'])
                        {
                            if(!in_array($row['pm_sebdby'], $emparray))
                            {
                                $sendbyid = $row['pm_sebdby'];
                                $privatemessage = mysql_query("select a.*,b.en_firstname,b.en_lastname,c.ep_imageurl from en_sendprivatemessagestaff a left join en_tabluser b on b.en_userid = a.pm_sendto left join en_tblempphoto c on c.ep_userid=a.pm_sebdby where a.pm_sendto='" . $userid . "' and a.pm_sebdby='" . $sendbyid . "' and a.pm_send_status='0'  order by a.pm_senddatetime desc");
                                $privatemessagecount = mysql_num_rows($privatemessage);
                                
                                $byid = $row['pm_sebdby'];
                                $usredet = mysql_query("SELECT * FROM en_tabluser a LEFT JOIN en_tbluertype b ON b.en_uertypeid=a.en_usertype WHERE a.en_userid='$byid'");
                                $row3 = mysql_fetch_array($usredet);
                                
                                $usrimg = mysql_query("SELECT * FROM en_tblempphoto WHERE ep_userid='$byid' ORDER BY ep_empphotoid DESC");
                                if(mysql_num_rows($usrimg)!=0)
                                {
                                    $row2 = mysql_fetch_array($usrimg);
                                    $empimage = "http://dev-enursing.demormc.com/public/upload/userimage/".$row2['ep_imageurl'];

                                }
                                else{
                                    $empimage = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                                }
                                
                                $name2 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                                $empname = ucwords(strtolower($name2));
                                //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                                $grpmembers = array("name" => $empname, "userid" => $row3['en_userid'], "image" => $empimage, "typeid" => $row3['en_usertype'], "usertype" => $row3['en_usertypename']);
                                
                                $userlst[] = array("name" => $empname, "lastdate" => $row['pm_senddatetime'], "type" => 'single', "toid" => $row['pm_sebdby'], "members" => $grpmembers, "unreadcount" => $privatemessagecount);
                                
                                $emparray[] = $row['pm_sebdby'];
                                $tn++;
                            }
                        }
                        
                        if($userid != $row['pm_sendto'])
                        {
                            if(!in_array($row['pm_sendto'], $emparray))
                            {
                                $byid = $row['pm_sendto'];
                                $usredet = mysql_query("SELECT * FROM en_tabluser a LEFT JOIN en_tbluertype b ON b.en_uertypeid=a.en_usertype WHERE a.en_userid='$byid'");
                                $row3 = mysql_fetch_array($usredet);
                                
                                $usrimg = mysql_query("SELECT * FROM en_tblempphoto WHERE ep_userid='$byid' ORDER BY ep_empphotoid DESC");
                                if(mysql_num_rows($usrimg)!=0)
                                {
                                    $row2 = mysql_fetch_array($usrimg);
                                    $empimage = "http://dev-enursing.demormc.com/public/upload/userimage/".$row2['ep_imageurl'];

                                }
                                else{
                                    $empimage = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                                }
                                
                                $name2 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                                $empname = ucwords(strtolower($name2));
                                //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                                $grpmembers = array("name" => $empname, "userid" => $row3['en_userid'], "image" => $empimage, "typeid" => $row3['en_usertype'], "usertype" => $row3['en_usertypename']);
                                
                                $userlst[] = array("name" => $empname, "lastdate" => $row['pm_senddatetime'], "type" => 'single', "toid" => $row['pm_sendto'], "members" => $grpmembers, "unreadcount" => $privatemessagecount);
                                
                                $emparray[] = $row['pm_sendto'];
                                $tn++;
                            }
                        }
                    }
                }
            }

            $usredet1 = mysql_query("SELECT * FROM en_tabluser a LEFT JOIN en_tbluertype b ON b.en_uertypeid=a.en_usertype ORDER BY a.en_firstname ASC");
            while($row5 = mysql_fetch_array($usredet1))
            {
                if($userid != $row5['en_userid'])
                {
                    if(!in_array($row5['en_userid'], $emparray))
                    {
                        $byid = $row5['en_userid'];

                        $usrimg = mysql_query("SELECT * FROM en_tblempphoto WHERE ep_userid='$byid' ORDER BY ep_empphotoid DESC");
                        if(mysql_num_rows($usrimg)!=0)
                        {
                            $row2 = mysql_fetch_array($usrimg);
                            $empimage = "http://dev-enursing.demormc.com/public/upload/userimage/".$row2['ep_imageurl'];

                        }
                        else{
                            $empimage = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                        }

                        $name3 = htmlentities($row5['en_firstname'] . " " . $row5['en_lastname']);
                        $empname = ucwords(strtolower($name3));
                                //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row5['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row5['en_lastname']);
                        $grpmembers = array("name" => $empname, "userid" => $row5['en_userid'], "image" => $empimage, "typeid" => $row5['en_usertype'], "usertype" => $row5['en_usertypename']);

                        $userlst[] = array("name" => $empname, "lastdate" => "", "type" => 'single', "toid" => $row5['en_userid'], "members" => $grpmembers, "unreadcount" => $privatemessagecount);

                        $emparray[] = $row5['en_userid'];
                        $tn++;
                    }
                }
            }

            $updte = mysql_query("UPDATE en_sendprivatemessagestaff SET pm_send_status='1' WHERE pm_sendto='$userid' OR pm_sebdby='$userid' OR pm_chattype='group'");

            $success = array('status' => "success", "msg" => $userlst);
            $this->response($this->json($success), 200);  
            return true;
            
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addmessagegroup()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $groupname = $this->_request['groupname'];
        $members = $this->_request['members'];
        $curdate=date('Y-m-d H:i:s');
        if($userid != "" && $members != "")
        {
            $empidarr = explode(',', $members);
            array_push($empidarr, $userid);

            $empids = serialize($empidarr);
            
            $insrt = mysql_query("INSERT INTO en_privatechatgroups(pg_groupcreatedby, pg_groupmembers, pg_createddate, pg_groupname) VALUES('$userid', '$empids', '$curdate', '$groupname')");
            $groupid = mysql_insert_id();
            
            $insrt2 = mysql_query("INSERT INTO en_sendprivatemessagestaff(pm_sebdby, pm_senddatetime, pm_createdby, pm_createdon, pm_chattype, pm_chatgroupid) VALUES('$userid', '$curdate', '$userid', '$curdate', 'group', '$groupid')");
            
            if($insrt)
            {
                //$adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, usertype, logtime, device, deviceid) VALUES('$userid', 'created', 'chat group', '1', '$curdate', 'Touch', '$deviceid')");
                
                $success = array('status' => "success", "msg" => "Successfully added group.");
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function sendmessagetostaff()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $sendtoid = $this->_request['sendtoid'];
        $messagetext = $this->_request['messagetext'];
        $curdate=date('Y-m-d H:i:s');
        if($userid != "" && $sendtoid != "" && $messagetext != "")
        {
            $insrt = mysql_query("INSERT INTO en_sendprivatemessagestaff(pm_sebdby, pm_sendto, pm_message, pm_senddatetime, pm_send_status, pm_createdby, pm_createdon, pm_status) VALUES('$userid', '$sendtoid', '$messagetext', '$curdate', '0', '$userid', '$curdate', '0')");
            
            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully message sent.");
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function sendmessagetogroup()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $groupid = $this->_request['groupid'];
        $messagetext = $this->_request['messagetext'];
        $curdate=date('Y-m-d H:i:s');
        if($userid != "" && $groupid != "" && $messagetext != "")
        {
            $insrt = mysql_query("INSERT INTO en_sendprivatemessagestaff(pm_sebdby, pm_message, pm_senddatetime, pm_send_status, pm_createdby, pm_createdon, pm_status, pm_chattype, pm_chatgroupid) VALUES('$userid', '$messagetext', '$curdate', '0', '$userid', '$curdate', '0', 'group', '$groupid')");
            
            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully message sent.");
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function staffmessagelist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $staffid = $this->_request['staffid'];
        if($userid != "" && $staffid != "")
        {
            $updte = mysql_query("UPDATE en_sendprivatemessagestaff SET pm_send_status='1' WHERE (pm_sendto='$userid' AND pm_sebdby='$staffid') OR (pm_sendto='$staffid' AND pm_sebdby='$userid')");
            $msglst = mysql_query("SELECT *  FROM en_sendprivatemessagestaff WHERE (pm_sendto='$userid' AND pm_sebdby='$staffid') OR (pm_sendto='$staffid' AND pm_sebdby='$userid') ORDER BY privatemessageid DESC");
            if(mysql_num_rows($msglst) > 0)
            {
                while($row = mysql_fetch_array($msglst))
                {
                    $byid = $row['pm_sebdby'];
                    $usrimg = mysql_query("SELECT * FROM en_tblempphoto WHERE ep_userid='$byid' ORDER BY ep_empphotoid DESC");
                    if(mysql_num_rows($usrimg)!=0)
                    {
                        $row2 = mysql_fetch_array($usrimg);
                        $empimage = "http://dev-enursing.demormc.com/public/upload/userimage/".$row2['ep_imageurl'];

                    }
                    else{
                        $empimage = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                    }
                    $messagelst[] = array("messageid" => $row['privatemessageid'], "message" => $row['pm_message'], "datetime" => $row['pm_senddatetime'], "sendby" => $row['pm_sebdby'], "photo" => $empimage, "status" => $row['pm_status']);
                }
                $success = array('status' => "success", "msg" => $messagelst);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No messages available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function groupmessagelist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $groupid = $this->_request['groupid'];
        if($userid != "" && $groupid != "")
        {
            $updte = mysql_query("UPDATE en_sendprivatemessagestaff SET pm_send_status='1' WHERE pm_chatgroupid='$groupid' AND pm_chattype='group'");
            
            $msglst = mysql_query("SELECT *  FROM en_sendprivatemessagestaff WHERE pm_chatgroupid='$groupid' AND pm_chattype='group' ORDER BY privatemessageid DESC");
            if(mysql_num_rows($msglst) > 0)
            {
                while($row = mysql_fetch_array($msglst))
                {
                    $byid = $row['pm_sebdby'];
                    $usrimg = mysql_query("SELECT * FROM en_tblempphoto WHERE ep_userid='$byid' ORDER BY ep_empphotoid DESC");
                    if(mysql_num_rows($usrimg)!=0)
                    {
                        $row2 = mysql_fetch_array($usrimg);
                        $empimage = "http://dev-enursing.demormc.com/public/upload/userimage/".$row2['ep_imageurl'];

                    }
                    else{
                        $empimage = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                    }
                    $messagelst[] = array("messageid" => $row['privatemessageid'], "message" => $row['pm_message'], "datetime" => $row['pm_senddatetime'], "sendby" => $row['pm_sebdby'], "photo" => $empimage, "status" => $row['pm_status']);
                }
                $success = array('status' => "success", "msg" => $messagelst);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No messages available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function getallusertypes()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $types = mysql_query("SELECT *  FROM en_tbluertype WHERE en_uertypeid!='10'");
        if(mysql_num_rows($types) > 0)
        {
            while($row = mysql_fetch_array($types))
            {
                $typelst[] = array("typeid" => $row['en_uertypeid'], "usertype" => $row['en_usertypename']);
            }
            $success = array('status' => "success", "msg" => $typelst);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "No usertypes available.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function groupbadgecount()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $groupid = $this->_request['groupid'];
        if($userid != "" && $groupid != "")
        {
            $privatemessage = mysql_query("SELECT * FROM en_sendprivatemessagestaff WHERE pm_chatgroupid='" .$groupid . "'  AND pm_send_status='0' ORDER BY pm_senddatetime DESC");
            $privatemessagecount = mysql_num_rows($privatemessage);
            
            $typelst = array("unreadcount" => $privatemessagecount);
            
            $success = array('status' => "success", "msg" => $typelst);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function singlebadgecount()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $sendbyid = $this->_request['sendbyid'];
        if($userid != "" && $sendbyid != "")
        {
            $privatemessage = mysql_query("select * from en_sendprivatemessagestaff where pm_sendto='" . $userid . "' and pm_sebdby='" . $sendbyid . "' and pm_send_status='0'");
            $privatemessagecount = mysql_num_rows($privatemessage);
            
            $typelst = array("unreadcount" => $privatemessagecount);
            
            $success = array('status' => "success", "msg" => $typelst);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function chatbadgecount()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $privatemessage = mysql_query("select * from en_sendprivatemessagestaff where pm_sendto='" . $userid . "' and pm_send_status='0'");
            $privatemessagecount = mysql_num_rows($privatemessage);
            
            $typelst = array("unreadcount" => $privatemessagecount);
            
            $success = array('status' => "success", "msg" => $typelst);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function recordfluidbalance()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $datetime = date('Y-m-d H:i:s', strtotime($this->_request['datetime']));
        $intake = $this->_request['intake'];
        $intakeunit = $this->_request['intakeunit'];
        $output = $this->_request['output'];
        $outputunit = $this->_request['outputunit'];
        $comments = $this->_request['comments'];
        if($userid != "" && $resid != "" && $datetime != "")
        {
            $curdate=date('Y-m-d H:i:s');
            $insrt = mysql_query("INSERT INTO en_resfluidbalance(fb_resid, fb_takedate, fb_intake, fb_intakeunit, fb_output, fb_outputunit, fb_comments, fb_updatedby, fb_updatedon) VALUES('$resid', '$datetime', '$intake', '$intakeunit', '$output', '$outputunit', '$comments', '$userid', '$curdate')");
            
            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully added fluid balance.");
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function fluidbalancehistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($userid != "" && $resid != "")
        {
            $types = mysql_query("SELECT *  FROM en_resfluidbalance WHERE fb_resid='$resid' AND fb_isactive='0' ORDER BY fb_fluidbalceid DESC");
            if(mysql_num_rows($types) > 0)
            {
                while($row = mysql_fetch_array($types))
                {
                    $usid = $row['fb_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name3));
                            //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }

                    $typelst[] = array("recordid" => $row['fb_fluidbalceid'], "datetime" => $row['fb_takedate'], "intake" => $row['fb_intake'], "intakeunit" => $row['fb_intakeunit'], "output" => $row['fb_output'], "outputunit" => $row['fb_outputunit'], "comments" => $row['fb_comments'], "updatedby" => $empname, "updatedon" => $row['fb_updatedon']);
                }
                $success = array('status' => "success", "msg" => $typelst);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No records available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function fluidbalancehistorypage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        if($userid != "" && $resid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $types = mysql_query("SELECT *  FROM en_resfluidbalance WHERE fb_resid='$resid' AND fb_isactive='0' ORDER BY fb_fluidbalceid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT fb_fluidbalceid FROM en_resfluidbalance WHERE fb_resid='$resid' AND fb_isactive='0'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($types) > 0)
            {
                while($row = mysql_fetch_array($types))
                {
                    $usid = $row['fb_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name3));
                            //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }

                    $typelst[] = array("recordid" => $row['fb_fluidbalceid'], "datetime" => $row['fb_takedate'], "intake" => $row['fb_intake'], "intakeunit" => $row['fb_intakeunit'], "output" => $row['fb_output'], "outputunit" => $row['fb_outputunit'], "comments" => $row['fb_comments'], "updatedby" => $empname, "updatedon" => $row['fb_updatedon']);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $typelst);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No records available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function addresgroup()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $groupname = $this->_request['groupname'];
        $resids = $this->_request['resids'];
        if($userid != "" && $resids != "" && $groupname != "")
        {
            $curdate=date('Y-m-d H:i:s');
            $insrt = mysql_query("INSERT INTO en_socialresgroup(srg_groupname, srg_resids, srg_updatedby, srg_updatedon) VALUES('$groupname', '$resids', '$userid', '$curdate')");
            
            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully created resident group.");
                $this->response($this->json($success), 200);  
                return true;
                
            }else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getresgroup()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $types = mysql_query("SELECT *  FROM en_socialresgroup WHERE srg_isactive='0' ORDER BY srg_resgroupid DESC");
            if(mysql_num_rows($types) > 0)
            {
                while($row = mysql_fetch_array($types))
                {
                    $resids = explode(',', $row['srg_resids']);
                    $resdet = array();
                    foreach($resids as $resval)
                    {
                        $resdent = mysql_query("SELECT * FROM en_resbasicinfo WHERE residentadmissionid='$resval'");
                        $row2 = mysql_fetch_array($resdent);
                        $name3 = htmlentities($row2['res_firstname'] . " " . $row2['res_surname']);
                        $name = ucwords(strtolower($name3));
                        //$name =  preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['res_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row2['res_surname']);
                        $resdet[] = array("resid" => $resval, "name" => $name);
                    }
                    $groupdet[] = array("groupid" => $row['srg_resgroupid'], "groupname" => $row['srg_groupname'], "residents" => $resdet);
                    
                }
                $success = array('status' => "success", "msg" => $groupdet);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No groups available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function getpegtubedetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($userid != "" && $resid != "")
        {
            $det = mysql_query("SELECT a.*,c.tubename,d.pfpumbname  FROM en_pedfeeding a LEFT JOIN en_pedfeedingtubetypes c ON a.pf_tubetype=c.pftubetype LEFT JOIN en_pedfeedingpumbtypes d ON a.pf_pumbtype=d.pfpumbtypeid WHERE a.pf_residentid='$resid' AND a.pf_status='0' ORDER BY pagefeedingid DESC LIMIT 1");
            if(mysql_num_rows($det) > 0)
            {
                $row = mysql_fetch_array($det);
                $size = $row['pf_size_width'] . "-" . $row['pf_size_length'];
                $details = array('pegfeedid' => $row['pagefeedingid'], 'tubetype' => $row['tubename'], 'pumbtype' => $row['pfpumbname'], 'size' => $size, 'insertiondate' => $row['pf_insertiondate'], 'reviewdate' => $row['pf_reviewdate']);

                $success = array('status' => "success", "msg" => $details);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No details available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function rotatepegfeed()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $pegfeedid = $this->_request['pegfeedid'];
        $rotatedate = date('Y-m-d H:i:s', strtotime($this->_request['rotatedate']));
        $feedrotated = $this->_request['feedrotated'];
        $comments = $this->_request['comments'];
        $nextrotationdate = date('Y-m-d H:i:s', strtotime($this->_request['nextrotationdate']));
        if($userid != "" && $resid != "" & $pegfeedid!= "")
        {
            $insert = mysql_query("INSERT INTO en_rotatepegtube(pfrt_residentid, pfrt_pegfeedid, pfrt_rotated, pfrt_comments, pfrt_nextrotation, pfrt_updatedon, pfrt_updatedby, pfrt_status) VALUES('$resid', '$pegfeedid', '$feedrotated', '$comments', '$nextrotationdate', '$rotatedate', '$userid', '0')");

            if($insert)
            {
                $success = array('status' => "success", "msg" => "Successfully added.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function pegfeedrotationhistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $pegfeedid = $this->_request['pegfeedid'];
        if($userid != "" && $resid != "" & $pegfeedid!= "")
        {
            $det = mysql_query("SELECT * FROM en_rotatepegtube WHERE pfrt_pegfeedid = '$pegfeedid' ORDER BY pegfeedrotatetubeid DESC");
            if(mysql_num_rows($det) > 0)
            {
                while($row = mysql_fetch_array($det))
                {
                    $usid = $row['pfrt_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name3));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }

                    $rota[] = array('rotaionid' => $row['pegfeedrotatetubeid'], 'feedrotated' => $row['pfrt_rotated'], 'comments' => $row['pfrt_comments'], 'date' => $row['pfrt_updatedon'], 'nextrotationdate' => $row['pfrt_nextrotation'], 'updatedby' => $empname);
                }
                $success = array('status' => "success", "msg" => $rota);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No rotation history available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function pegfeedrotationhistorypage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        $pegfeedid = $this->_request['pegfeedid'];
        if($userid != "" && $resid != "" & $pegfeedid!= "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $det = mysql_query("SELECT * FROM en_rotatepegtube WHERE pfrt_pegfeedid = '$pegfeedid' ORDER BY pegfeedrotatetubeid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT pegfeedrotatetubeid FROM en_rotatepegtube WHERE pfrt_pegfeedid='$pegfeedid'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($det) > 0)
            {
                while($row = mysql_fetch_array($det))
                {
                    $usid = $row['pfrt_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name3));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }

                    $rota[] = array('rotaionid' => $row['pegfeedrotatetubeid'], 'feedrotated' => $row['pfrt_rotated'], 'comments' => $row['pfrt_comments'], 'date' => $row['pfrt_updatedon'], 'nextrotationdate' => $row['pfrt_nextrotation'], 'updatedby' => $empname);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $rota);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No rotation history available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function intakepegfeed()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $pegfeedid = $this->_request['pegfeedid'];
        $intakedate = date('Y-m-d H:i:s', strtotime($this->_request['intakedate']));
        $intakeitem = $this->_request['intakeitem'];
        $comments = $this->_request['comments'];
        if($userid != "" && $resid != "" & $pegfeedid!= "")
        {
            $insert = mysql_query("INSERT INTO en_pegfeedrecoedintake(pfri_residentid, pfri_pegfeedid, pfri_intakeitems, pfri_comments, pfri_updatedon, pfri_updatedby, pfri_status) VALUES('$resid', '$pegfeedid', '$intakeitem', '$comments', '$intakedate', '$userid', '0')");

            if($insert)
            {
                $success = array('status' => "success", "msg" => "Successfully added.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function pegfeedintakehistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $pegfeedid = $this->_request['pegfeedid'];
        if($userid != "" && $resid != "" & $pegfeedid!= "")
        {
            $det = mysql_query("SELECT * FROM en_pegfeedrecoedintake WHERE pfri_pegfeedid = '$pegfeedid' ORDER BY pf_recoedintakeid DESC");
            if(mysql_num_rows($det) > 0)
            {
                while($row = mysql_fetch_array($det))
                {
                    if($row['pfri_intakeitems'] == '1')
                    {
                        $intakeitem = "Medicine";
                    }
                    else if($row['pfri_intakeitems'] == '2')
                    {
                        $intakeitem = "Fluid";
                    }
                    else if($row['pfri_intakeitems'] == '1')
                    {
                        $intakeitem = "Medicine and Fluid";
                    }
                    else{
                        $intakeitem = "";
                    }

                    $usid = $row['pfri_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name3));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }

                    $rota[] = array('intakeid' => $row['pf_recoedintakeid'], 'intakeitem' => $intakeitem, 'comments' => $row['pfri_comments'], 'date' => $row['pfri_updatedon'], 'updatedby' => $empname);
                }
                $success = array('status' => "success", "msg" => $rota);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No rotation history available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function pegfeedintakehistorypage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        $pegfeedid = $this->_request['pegfeedid'];
        if($userid != "" && $resid != "" & $pegfeedid!= "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $det = mysql_query("SELECT * FROM en_pegfeedrecoedintake WHERE pfri_pegfeedid = '$pegfeedid' ORDER BY pf_recoedintakeid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT pf_recoedintakeid FROM en_pegfeedrecoedintake WHERE pfri_pegfeedid='$pegfeedid'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($det) > 0)
            {
                while($row = mysql_fetch_array($det))
                {
                    if($row['pfri_intakeitems'] == '1')
                    {
                        $intakeitem = "Medicine";
                    }
                    else if($row['pfri_intakeitems'] == '2')
                    {
                        $intakeitem = "Fluid";
                    }
                    else if($row['pfri_intakeitems'] == '1')
                    {
                        $intakeitem = "Medicine and Fluid";
                    }
                    else{
                        $intakeitem = "";
                    }

                    $usid = $row['pfri_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name3));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }

                    $rota[] = array('intakeid' => $row['pf_recoedintakeid'], 'intakeitem' => $intakeitem, 'comments' => $row['pfri_comments'], 'date' => $row['pfri_updatedon'], 'updatedby' => $empname);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "msg" => $rota);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No rotation history available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function dailyreportpriorities()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $reports = mysql_query("SELECT * FROM en_dailyreportpriority WHERE dp_isactive = '1'");
        if(mysql_num_rows($reports) > 0)
        {
            while($row = mysql_fetch_array($reports))
            {
                $rota[] = $row['dp_priority'];
            }
            $data = array("priority" => $rota);
            $success = array('status' => "success", "msg" => $data);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "No priorities available.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function gpvoicereport()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $priority = $this->_request['priority'];
        $report = $this->_request['report'];
        $reportdate = date('Y-m-d H:i:s', strtotime($this->_request['reportdate']));
        if($userid != "" && $resid != "")
        {
            $gpvoicename = "";
            $gn = 0;
            if($_FILES['gpvoicedata']['size'] != 0 && $_FILES['gpvoicedata']['size'] != "")
            {
                $gn = 1;
                $target_dir1 = "../public/upload/gpvoicefiles/";
                $temp1 = explode(".", $_FILES["gpvoicedata"]["name"]);
                $gpvoicename = round(microtime(true)) . '.' . end($temp1);
                $target_file1 = $target_dir1 . $gpvoicename;
                if (move_uploaded_file($_FILES["gpvoicedata"]["tmp_name"], $target_file1)) {
                }
            }

            $insert = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isgpvoice, dr_voicefile) VALUES('2', '$report', '$userid', '$reportdate', '$resid', '$priority', '1', '$gn', '$gpvoicename')");

            if($insert)
            {
                $success = array('status' => "success", "msg" => "Successfully added.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function allgpreports()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($userid != "")
        {
            $reports = mysql_query("SELECT * FROM en_dailyreport a LEFT JOIN en_reporttype b ON b.reporttypeid=a.reporttypeid WHERE a.dr_addedby = '$userid' AND a.dr_resid='$resid' ORDER BY reportid DESC LIMIT 100");
            if(mysql_num_rows($reports) > 0)
            {
                while($row = mysql_fetch_array($reports))
                {
                    $updtby = $row['dr_addedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$updtby'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $empname = ucwords(strtolower($name3));
                        //$empname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $empname = "";
                    }
                    if($row['dr_isgpvoice'] == '1')
                    {
                        $gpvoice = "http://dev-enursing.demormc.com/public/upload/gpvoicefiles/" . $row['dr_voicefile'];
                    }
                    else{
                        $gpvoice = "";
                    }
                    $reportdta = htmlentities($row['dr_report']);
                    $rprts[] = array('report' => $reportdta, 'addeddate' => $row['dr_addedon'], 'priority' => $row['dr_priority'], 'reporttype' => $row['rp_reporttype'], 'gpvoice' => $gpvoice, 'updatedby' => $empname);
                }
                //$data = array("priority" => $rota);
                $success = array('status' => "success", "msg" => $rprts);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No reports available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function titles()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $ttile = mysql_query("SELECT * FROM tbl_title WHERE titlestatus='0'");
        if(mysql_num_rows($ttile) > 0)
        {
            while($row = mysql_fetch_array($ttile))
            {
                $rota[] = $row['titlename'];
            }
            $data = array("titles" => $rota);
            $success = array('status' => "success", "titles" => $rota);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "titles" => "No titles available.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function countries()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $cntry = mysql_query("SELECT * FROM en_country");
        if(mysql_num_rows($cntry) > 0)
        {
            while($row = mysql_fetch_array($cntry))
            {
                $rota[] = array('countryid' => $row['countryid'], 'countryname' => $row['countryname']);
            }
            $data = array("countries" => $rota);
            $success = array('status' => "success", "countries" => $rota);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "countries" => "No countries available.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function gplists()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $gpusrs = mysql_query("SELECT * FROM en_tabluser a INNER JOIN en_tbluertype b ON b.en_uertypeid=a.en_usertype WHERE b.en_usertypename='GP' AND a.en_isactive ='0'");
        if(mysql_num_rows($gpusrs) > 0)
        {
            while($row = mysql_fetch_array($gpusrs))
            {
                $name = $row['en_firstname'] . " " . $row['en_lastname'];
                $rota[] = array('userid' => $row['en_userid'], 'gpname' => $name);
            }
            $data = array("gpusers" => $rota);
            $success = array('status' => "success", "gpusers" => $rota);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "gpusers" => "No gp users available.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function medicationlist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $gpusrs = mysql_query("SELECT * FROM en_medicationdatabse a INNER JOIN en_medicationtype b ON b.medtypeid=a.md_type WHERE a.md_isactive ='0'");
        if(mysql_num_rows($gpusrs) > 0)
        {
            while($row = mysql_fetch_array($gpusrs))
            {
                $rota[] = array('medicationid' => $row['medicationid'], 'name' => $row['md_medicationname']);
            }
            //$data = array("gpusers" => $rota);
            $success = array('status' => "success", "medicines" => $rota);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "medicines" => "No medicines available.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function preadmissionlist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];

        if($userid != "")
        {
            $preadmsns = mysql_query("SELECT * FROM en_residentpreadmission  WHERE rpr_status ='0'");
            if(mysql_num_rows($preadmsns) > 0)
            {
                while($row = mysql_fetch_array($preadmsns))
                {
                    $name = $row['rpr_title'] . "  " . $row['rpr_firstname']. "  " . $row['rpr_middlename']. "  " . $row['rpr_lastname'];
                    $rota[] = array('preadmissionid' => $row['residentpreadmissionid'], 'name' => $name, 'admissiontype' => $row['rpr_admissiontype'], 'gender' => $row['rpr_gender'], 'dob' => $row['rpr_dob'], 'phone' => $row['rpr_phonenumber'], 'addedon' => $row['rpr_createdon'], 'status' => $row['rpr_formstatus']);
                }
                //$data = array("gpusers" => $rota);
                $success = array('status' => "success", "preadmissions" => $rota);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "preadmissions" => "No preadmissions available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function preadmissionstatus()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $residentpreadmissionid = $this->_request['residentpreadmissionid'];
        if($userid != "" && $residentpreadmissionid != "")
        {
            $slctnok = mysql_query("SELECT resnextkinid FROM en_respreadmnextkin WHERE respreadmid='$residentpreadmissionid'");
            if(mysql_num_rows($slctnok) > 0)
            {
                $nok = 'yes';
            }
            else{
                $nok = 'no';
            }

            $slctreference = mysql_query("SELECT rr_referenceid FROM en_respreadmreferences WHERE rr_respreadmid='$residentpreadmissionid'");
            if(mysql_num_rows($slctreference) > 0)
            {
                $reference = 'yes';
            }
            else{
                $reference = 'no';
            }

            $slctmedical = mysql_query("SELECT rpr_medicalaleergiesanddetails FROM en_residentpreadmission WHERE residentpreadmissionid='$residentpreadmissionid'");
            if(mysql_num_rows($slctmedical) > 0)
            {
                $row = mysql_fetch_array($slctmedical);
                if($row['rpr_medicalaleergiesanddetails'] != "")
                {
                    $medical = 'yes';
                }
                else{
                    $medical = 'no';
                }
            }
            else{
                $medical = 'no';
            }

            $slctnursingdet = mysql_query("SELECT rpr_nursingdetailsmonbility FROM en_residentpreadmission WHERE residentpreadmissionid='$residentpreadmissionid'");
            if(mysql_num_rows($slctnursingdet) > 0)
            {
                $row = mysql_fetch_array($slctnursingdet);
                if($row['rpr_nursingdetailsmonbility'] != "")
                {
                    $nursingdet = 'yes';
                }
                else{
                    $nursingdet = 'no';
                }
            }
            else{
                $nursingdet = 'no';
            }

            $slctequipment = mysql_query("SELECT rpr_equipeenvionmentaldetails FROM en_residentpreadmission WHERE residentpreadmissionid='$residentpreadmissionid'");
            if(mysql_num_rows($slctequipment) > 0)
            {
                $row = mysql_fetch_array($slctequipment);
                if($row['rpr_equipeenvionmentaldetails'] != "")
                {
                    $equipment = 'yes';
                }
                else{
                    $equipment = 'no';
                }
            }
            else{
                $equipment = 'no';
            }

            $status = array('nok' => $nok, 'reference' => $reference, 'medical' => $medical, 'nursingdet' => $nursingdet, 'equipment' => $equipment);

            $success = array('status' => "success", "msg" => $status);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function preadmissionbasicinfo()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $residentpreadmissionid = $this->_request['residentpreadmissionid'];
        $admissiontype = $this->_request['admissiontype'];
        $resbasictitle = $this->_request['resbasictitle'];
        $res_othertitle = $this->_request['res_othertitle'];
        $firstname = $this->_request['firstname'];
        $middlename = $this->_request['middlename'];
        $lastname = $this->_request['lastname'];
        $preferaddr = $this->_request['preferaddr'];
        $dateofbirth = date('Y-m-d', strtotime($this->_request['dob']));
        $gender = $this->_request['gender'];
        $otheraddressedas = $this->_request['otheraddressedas'];
        $res_maritalstatus = $this->_request['res_maritalstatus'];
        $res_religion = $this->_request['res_religion'];
        $res_religionoth = $this->_request['res_religionoth'];
        $phnonenumber = $this->_request['phonenumber'];

        $res_street = $this->_request['res_street'];
        $res_city = $this->_request['res_city'];
        $res_county = $this->_request['res_county'];
        $res_country = $this->_request['res_country'];
        $res_eircode = $this->_request['res_eircode'];
        $homeaddress_array = array(
            'res_street' => $res_street,
            'res_city' => $res_city,
            'res_county' => $res_county,
            'res_country' => $res_country,
            'res_eircode' => $res_eircode
        );
        $homeaddress_array_serailise = serialize($homeaddress_array);

        $sourceofadmission = $this->_request['sourceofadmission'];
        $sourceofadmissionother = $this->_request['sourceofadmissionother'];
        $reasonforadmission = $this->_request['reasonforadmission'];
        $referredby = $this->_request['referredby'];

        $enquirytitleusertitle = $this->_request['enquirytitleusertitle'];
        $enquiryuserfirstname = $this->_request['enquiryuserfirstname'];
        $enquiryusermiddlename = $this->_request['enquiryusermiddlename'];
        $enquiryuserlastname = $this->_request['enquiryuserlastname'];
        $enquiryusercity = $this->_request['enquiryusercity'];
        $enquiryusercounty = $this->_request['enquiryusercounty'];
        $enquiryuserphonemob = $this->_request['enquiryuserphonemob'];
        $enquiryuserphonelan = $this->_request['enquiryuserphonelan'];
        $enquiryuserhousenumber = $this->_request['enquiryuserhousenumber'];
        $enquiryuseremail = $this->_request['enquiryuseremail'];
        $admissiondetail_array = array(
            'sourceofadmission' => $sourceofadmission,
            'sourceofadmissionother' => $sourceofadmissionother,
            'reasonforadmission' => $reasonforadmission,
            'referredby' => $referredby,
            'enquirytitleusertitle' => $enquirytitleusertitle,
            'enquiryusercity' => $enquiryusercity,
            'enquiryuserfirstname' => $enquiryuserfirstname,
            'enquiryusercounty' => $enquiryusercounty,
            'enquiryusermiddlename' => $enquiryusermiddlename,
            'enquiryuserPhonemob' => $enquiryuserphonemob,
            'enquiryuserlastname' => $enquiryuserlastname,
            'enquiryuserPhonelan' => $enquiryuserphonelan,
            'enquiryuserhousenumber' => $enquiryuserhousenumber,
            'enquiryuseremail' => $enquiryuseremail,
        );
        $admissiondetail_array_serailise = serialize($admissiondetail_array);

        $hsecardtype = $this->_request['hsecardtype'];
        $cardnumber = $this->_request['cardnumber'];
        $expirydate = date('Y-m-d', strtotime($this->_request['expirydate']));
        $ad_nokppmnum = $this->_request['ad_nokppmnum'];
        $ad_ppsnumberdetail = $this->_request['ad_ppsnumberdetail'];
        $nk_privatehealthins = $this->_request['nk_privatehealthins'];
        $nk_prihealthprovider = $this->_request['nk_prihealthprovider'];
        $nk_prihealthproviderdet = $this->_request['nk_prihealthproviderdet'];
        $nk_prihealthpolicyno = $this->_request['nk_prihealthpolicyno'];
        $nk_prihealthexpirydate = date('Y-m-d', strtotime($this->_request['nk_prihealthexpirydate']));
        $hsecarddetails = $this->_request['hsecarddetails'];
        $nk_hsecardno = $this->_request['nk_hsecardno'];
        $nk_hsecardexpiry = date('Y-m-d', strtotime($this->_request['nk_hsecardexpiry']));
        $nk_ltillnesscard = $this->_request['nk_ltillnesscard'];
        $nk_ltillnesscardno = $this->_request['nk_ltillnesscardno'];
        $nk_ltillnesscardexpiry = date('Y-m-d', strtotime($this->_request['nk_ltillnesscardexpiry']));

        $dischargeplanner = $this->_request['dischargeplanner'];
        $contactdetails = $this->_request['contactdetails'];
        $socialworkeer = $this->_request['socialworkeer'];
        $socialworkeercontactdetails = $this->_request['socialworkeercontactdetails'];

        $fundingtype = $this->_request['fundingtype'];
        $fundingstatus = $this->_request['fundingstatus'];
        $csar = $this->_request['csar'];
        $clientid = $this->_request['clientid'];

        $basicadmissiondetail_array = array(
            'hsecardtype' => $hsecardtype,
            'cardnumber' => $cardnumber,
            'expirydate' => $expirydate,
            'ad_nokppmnum' => $ad_nokppmnum,
            'ad_ppsnumberdetail' => $ad_ppsnumberdetail,
            'nk_privatehealthins' => $nk_privatehealthins,
            'nk_prihealthprovider' => $nk_prihealthprovider,
            'nk_prihealthproviderdet' => $nk_prihealthproviderdet,
            'nk_prihealthpolicyno' => $nk_prihealthpolicyno,
            'nk_prihealthexpirydate' => $nk_prihealthexpirydate,
            'hsecarddetails' => $hsecarddetails,
            'nk_hsecardno' => $nk_hsecardno,
            'nk_hsecardexpiry' => $nk_hsecardexpiry,
            'nk_ltillnesscard' => $nk_ltillnesscard,
            'nk_ltillnesscardno' => $nk_ltillnesscardno,
            'nk_ltillnesscardexpiry' => $nk_ltillnesscardexpiry,
            'dischargeplanner' => $dischargeplanner,
            'contactdetails' => $contactdetails,
            'socialworkeer' => $socialworkeer,
            'socialworkeercontactdetails' => $socialworkeercontactdetails,
            'fundingtype' => $fundingtype,
            'fundingstatus' => $fundingstatus,
            'csar' => $csar,
            'clientid' => $clientid,
        );
        $basicadmissiondetail_array_serailise = serialize($basicadmissiondetail_array);

        $deviceid = $this->_request['deviceid'];

        $curdate = date('Y-m-d H:i:s');
        if($userid != "" && $admissiontype != "" && $firstname != "")
        {
            if ($resbasictitle == "Other") {
                $insert = mysql_query("INSERT INTO tbl_title(titlename, titlecreatedby, titlecreatedon, titlestatus) VALUES('$res_othertitle', '$userid', '$curdate', '0')");
                $resbasictitle = $res_othertitle;
            }
            if($residentpreadmissionid == "")
            {
                $insert = mysql_query("INSERT INTO en_residentpreadmission(rpr_enquiryid, rpr_admissiontype, rpr_title, rpr_firstname, rpr_middlename, rpr_lastname, rpr_preaddressesas, rpr_dob, rpr_gender, rpr_genderotheraddressas, rpr_meritalstatus, rpr_religion, rpr_relligionoth, rpr_phonenumber, rpr_homeaddress, rpr_admissiondetails, rpr_basicdetailsdata, rpr_createdby, rpr_createdon, rpr_status, rpr_formstatus) VALUES('', '$admissiontype', '$resbasictitle', '$firstname', '$middlename', '$lastname', '$preferaddr', '$dateofbirth', '$gender', '$otheraddressedas', '$res_maritalstatus', '$res_religion', '$res_religionoth', '$phnonenumber', '$homeaddress_array_serailise', '$admissiondetail_array_serailise', '$basicadmissiondetail_array_serailise', '$userid', '$curdate', '0', '0')");
                $basicinsertid = mysql_insert_id();
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, logtime, device, deviceid) VALUES('$userid', 'added', 'new resident pre admission', '$curdate', 'Touch', '$deviceid')");
            }
            else{
                $insert = mysql_query("UPDATE en_residentpreadmission SET rpr_admissiontype='$admissiontype', rpr_title='$resbasictitle', rpr_firstname='$firstname', rpr_middlename='$middlename', rpr_lastname='$lastname', rpr_preaddressesas='$preferaddr', rpr_dob='$dateofbirth', rpr_gender='$gender', rpr_genderotheraddressas='$otheraddressedas', rpr_meritalstatus='$res_maritalstatus', rpr_religion='$res_religion', rpr_relligionoth='$res_religionoth', rpr_phonenumber='$phnonenumber', rpr_homeaddress='$homeaddress_array_serailise', rpr_admissiondetails='$admissiondetail_array_serailise', rpr_basicdetailsdata='$basicadmissiondetail_array_serailise' WHERE residentpreadmissionid='$residentpreadmissionid'");
                $basicinsertid = $residentpreadmissionid;
                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, logtime, device, deviceid) VALUES('$userid', 'updated', 'new resident pre admission', '$curdate', 'Touch', '$deviceid')");
            }

            

            if($insert)
            {
                $success = array('status' => "success", "msg" => "Successfully added preadmission.", "insertid" => $basicinsertid);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getpreadmissionbasicinfo()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        if($userid != "" && $preadmid != "")
        {
            $slctpreadm = mysql_query("SELECT * FROM en_residentpreadmission WHERE residentpreadmissionid='$preadmid'");
            if(mysql_num_rows($slctpreadm) > 0)
            {
                while($row = mysql_fetch_array($slctpreadm))
                {
                    $homeaddressdata = unserialize($row['rpr_homeaddress']);
                    $admissiondetails = unserialize($row['rpr_admissiondetails']);
                    $basicdetailsdata = unserialize($row['rpr_basicdetailsdata']);

                    $countryidd = $homeaddressdata['res_country'];
                    $cntryn = mysql_query("SELECT * FROM en_country WHERE  countryid='$countryidd'");
                    if(mysql_num_rows($cntryn) > 0)
                    {
                        $row22 = mysql_fetch_array($cntryn);
                        $countryname = $row22['countryname'];
                    }
                    else{
                        $countryname = "";
                    }
                    if(isset($homeaddressdata['res_eircode']))
                    {
                        $eircode = $homeaddressdata['res_eircode'];
                    }
                    else{
                        $eircode = "";
                    }

                    $rota[] = array('residentpreadmissionid' => $row['residentpreadmissionid'], 'admissiontype' => $row['rpr_admissiontype'], 'resbasictitle' => $row['rpr_title'], 'firstname' => $row['rpr_firstname'], 'middlename' => $row['rpr_middlename'], 'lastname' => $row['rpr_lastname'], 'preferaddr' => $row['rpr_preaddressesas'], 'dob' => $row['rpr_dob'], 'gender' => $row['rpr_gender'], 'otheraddressedas' => $row['rpr_genderotheraddressas'], 'res_maritalstatus' => $row['rpr_meritalstatus'], 'res_religion' => $row['rpr_religion'], 'res_religionoth' => $row['rpr_relligionoth'], 'phonenumber' => $row['rpr_phonenumber'], 'res_street' => $homeaddressdata['res_street'], 'res_city' => $homeaddressdata['res_city'], 'res_county' => $homeaddressdata['res_county'], 'res_eircode' => $eircode, 'res_country' => $homeaddressdata['res_country'], 'countryname' => $countryname, 'sourceofadmission' => $admissiondetails['sourceofadmission'], 'sourceofadmissionother' => $admissiondetails['sourceofadmissionother'], 'reasonforadmission' => $admissiondetails['reasonforadmission'], 'referredby' => $admissiondetails['referredby'], 'enquirytitleusertitle' => $admissiondetails['enquirytitleusertitle'], 'enquiryusercity' => $admissiondetails['enquiryusercity'], 'enquiryuserfirstname' => $admissiondetails['enquiryuserfirstname'], 'enquiryusercounty' => $admissiondetails['enquiryusercounty'], 'enquiryusermiddlename' => $admissiondetails['enquiryusermiddlename'], 'enquiryuserPhonemob' => $admissiondetails['enquiryuserPhonemob'], 'enquiryuserlastname' => $admissiondetails['enquiryuserlastname'], 'enquiryuserPhonelan' => $admissiondetails['enquiryuserPhonelan'], 'enquiryuserhousenumber' => $admissiondetails['enquiryuserhousenumber'], 'enquiryuseremail' => $admissiondetails['enquiryuseremail'], 'hsecardtype' => $basicdetailsdata['hsecardtype'], 'cardnumber' => $basicdetailsdata['cardnumber'], 'expirydate' => $basicdetailsdata['expirydate'], 'ad_nokppmnum' => $basicdetailsdata['ad_nokppmnum'], 'ad_ppsnumberdetail' => $basicdetailsdata['ad_ppsnumberdetail'], 'nk_privatehealthins' => $basicdetailsdata['nk_privatehealthins'], 'nk_prihealthprovider' => $basicdetailsdata['nk_prihealthprovider'], 'nk_prihealthproviderdet' => $basicdetailsdata['nk_prihealthproviderdet'], 'nk_prihealthpolicyno' => $basicdetailsdata['nk_prihealthpolicyno'], 'nk_prihealthexpirydate' => $basicdetailsdata['nk_prihealthexpirydate'], 'hsecarddetails' => $basicdetailsdata['hsecarddetails'], 'nk_hsecardno' => $basicdetailsdata['nk_hsecardno'], 'nk_hsecardexpiry' => $basicdetailsdata['nk_hsecardexpiry'], 'nk_ltillnesscard' => $basicdetailsdata['nk_ltillnesscard'], 'nk_ltillnesscardno' => $basicdetailsdata['nk_ltillnesscardno'], 'nk_ltillnesscardexpiry' => $basicdetailsdata['nk_ltillnesscardexpiry'], 'dischargeplanner' => $basicdetailsdata['dischargeplanner'], 'contactdetails' => $basicdetailsdata['contactdetails'], 'socialworkeer' => $basicdetailsdata['socialworkeer'], 'socialworkeercontactdetails' => $basicdetailsdata['socialworkeercontactdetails'], 'fundingtype' => $basicdetailsdata['fundingtype'], 'fundingstatus' => $basicdetailsdata['fundingstatus'], 'csar' => $basicdetailsdata['csar'], 'clientid' => $basicdetailsdata['clientid'], 'addedon' => $row['rpr_createdon'], 'status' => $row['rpr_formstatus']);
                }
                //$data = array("gpusers" => $rota);
                $success = array('status' => "success", "preadmissions" => $rota);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "preadmissions" => "No preadmissions available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function preadmissionnok()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $insertid = $this->_request['insertid'];

        $resnextkinid = $this->_request['resnextkinid'];

        $nk_title = $this->_request['nk_title'];
        $nk_firstname = $this->_request['nk_firstname'];
        $nk_middlename = $this->_request['nk_middlename'];
        $nk_lastname = $this->_request['nk_lastname'];
        $nk_street = $this->_request['nk_street'];
        $nk_city = $this->_request['nk_city'];
        $nk_county = $this->_request['nk_county'];
        $nk_country = $this->_request['nk_country'];
        $nk_eircode = $this->_request['nk_eircode'];
        $nk_telephone = $this->_request['nk_telephone'];
        $nk_mobile = $this->_request['nk_mobile'];
        $nk_email = $this->_request['nk_email'];
        $nk_relship = $this->_request['nk_relship'];
        $nk_relshipoth = $this->_request['nk_relshipoth'];
        $nk_contactfirstmedical = $this->_request['nk_contactfirstmedical'];
        $nk_contactnight = $this->_request['nk_contactnight'];
        $nk_contactfirstfinancial = $this->_request['nk_contactfirstfinancial'];

        $deviceid = $this->_request['deviceid'];
        $curdate = date('Y-m-d H:i:s');

        if($userid != "" && $insertid != "" && $nk_firstname != "")
        {
            if($resnextkinid == "")
            {
                $insert = mysql_query("INSERT INTO en_respreadmnextkin(respreadmid, nk_title, nk_firstname, nk_middlename, nk_lastname, nk_street, nk_city, nk_county, nk_country, nk_telephone, nk_mobile, nk_email, nk_relationship, nk_otherrelationship, nk_contactnight, nk_updatedby, nk_updatedon, nk_isactive, nk_contactfirstmedical, nk_contactfirstfinancial, nk_eircode) VALUES('$insertid', '$nk_title', '$nk_firstname', '$nk_middlename', '$nk_lastname', '$nk_street', '$nk_city', '$nk_county', '$nk_country', '$nk_telephone', '$nk_mobile', '$nk_email', '$nk_relship', '$nk_relshipoth', '$nk_contactnight', '$userid', '$curdate', '0', '$nk_contactfirstmedical', '$nk_contactfirstfinancial', '$nk_eircode')");

                $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, logtime, device, deviceid) VALUES('$userid', 'added', 'next of kin', '$curdate', 'Touch', '$deviceid')");
            }
            else{
                $insert = mysql_query("UPDATE en_respreadmnextkin SET nk_title='$nk_title', nk_firstname='$nk_firstname', nk_middlename='$nk_middlename', nk_lastname='$nk_lastname', nk_street='$nk_street', nk_city='$nk_city', nk_county='$nk_county', nk_country='$nk_country', nk_telephone='$nk_telephone', nk_mobile='$nk_mobile', nk_email='$nk_email', nk_relationship='$nk_relship', nk_otherrelationship='$nk_relshipoth', nk_contactnight='$nk_contactnight', nk_contactfirstmedical='$nk_contactfirstmedical', nk_contactfirstfinancial='$nk_contactfirstfinancial', nk_eircode='$nk_eircode' WHERE resnextkinid='$resnextkinid'");
            }

            if($insert)
            {
                $success = array('status' => "success", "msg" => "Successfully added resident next of kin.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getpreadmissionnok()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        if($userid != "" && $preadmid != "")
        {
            $slctpreadm = mysql_query("SELECT * FROM en_respreadmnextkin a LEFT JOIN en_country b ON b.countryid=a.nk_country WHERE a.respreadmid='$preadmid' AND a.nk_isactive='0'");
            if(mysql_num_rows($slctpreadm) > 0)
            {
                while($row = mysql_fetch_array($slctpreadm))
                {
                    $rota[] = array('resnextkinid' => $row['resnextkinid'], 'nk_title' => $row['nk_title'], 'nk_firstname' => $row['nk_firstname'], 'nk_middlename' => $row['nk_middlename'], 'nk_lastname' => $row['nk_lastname'], 'nk_street' => $row['nk_street'], 'nk_city' => $row['nk_city'], 'nk_county' => $row['nk_county'], 'nk_country' => $row['nk_country'], 'countryname' => $row['countryname'], 'nk_eircode' => $row['nk_eircode'], 'nk_telephone' => $row['nk_telephone'], 'nk_mobile' => $row['nk_mobile'], 'nk_email' => $row['nk_email'], 'nk_relship' => $row['nk_relationship'], 'nk_relshipoth' => $row['nk_otherrelationship'], 'nk_contactfirstmedical' => $row['nk_contactfirstmedical'], 'nk_contactnight' => $row['nk_contactnight'], 'nk_contactfirstfinancial' => $row['nk_contactfirstfinancial']);
                }
                //$data = array("gpusers" => $rota);
                $success = array('status' => "success", "preadmissionnok" => $rota);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "preadmissionnok" => "No preadmission nok available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function deletepreadmissionnok()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        $resnextkinid = $this->_request['resnextkinid'];
        if($userid != "" && $preadmid != "" && $resnextkinid != "")
        {
            $delete = mysql_query("UPDATE en_respreadmnextkin SET nk_isactive='1' WHERE resnextkinid='$resnextkinid'");
            if($delete)
            {
                $success = array('status' => "success", "msg" => "NOK deleted Successfully.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function preadmissionreference()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $insertid = $this->_request['insertid'];

        $slctdgp = explode(',', $this->_request['selectedgp']);
        $gp_awareadm = explode(',', $this->_request['gp_awareadm']);
        $gp_dateinformed = explode(',', $this->_request['gp_dateinformed']);

        $gpfirstname = $this->_request['gpfirstname'];
        $gplastname = $this->_request['gplastname'];
        $gpbasicmobile = $this->_request['gpbasicmobile'];
        $gptelephone = $this->_request['gptelephone'];
        $gpbasicoficeaddress = $this->_request['gpbasicoficeaddress'];
        $gpcity = $this->_request['gpcity'];

        $scrhwaitinglist = $this->_request['scrhwaitinglist'];
        $hasnok = $this->_request['hasnok'];
        $residentidentifier = $this->_request['residentidentifier'];

        $homewait_array = array(
            'scrhwaitinglist' => $scrhwaitinglist,
            'hasnok' => $hasnok,
            'residentidentifier' => $residentidentifier,
        );
        $homewait_array_serailise = serialize($homewait_array);

        $deviceid = $this->_request['deviceid'];
        $curdate = date('Y-m-d H:i:s');

        if($userid != "" && $insertid != "")
        {
            $delt = mysql_query("DELETE FROM en_respreadmreferences WHERE rr_respreadmid='$insertid'");
            $k=0;
            foreach ($slctdgp as $gpval) {
                $awareadmsn = $gp_awareadm[$k];
                if($gp_dateinformed[$k] != "")
                {
                    $dateinformd = date('Y-m-d', strtotime($gp_dateinformed[$k]));
                }
                else{
                    $dateinformd = date('Y-m-d');
                }
                if($gpval == 'new')
                {
                    $lstuserid = mysql_query("SELECT en_staffid FROM en_tabluser ORDER BY en_staffid DESC LIMIT 1");
                    $row = mysql_fetch_array($lstuserid);
                    $lstid = $row['en_staffid'] + 1;
                    $username = 'user-'.$lstid;

                    $insertusr = mysql_query("INSERT INTO en_tabluser(en_username, en_firstname, en_lastname, en_staffid, en_usertype, en_profile_perct, en_lastupdatedid, en_workingtype, en_loginrequire, en_lastupdateddate) VALUES('$username', '$gpfirstname', '$gplastname', '$lstid', '1', '20', '$userid', '1', '1', '$curdate')");
                    $lastinsertuser_id = mysql_insert_id();

                    $insertaddress = mysql_query("INSERT INTO en_tbladdress(en_userid, en_telephone, en_mobile, en_housename, en_city, en_countryid, en_lastupdatedid, en_lastupdateddate) VALUES('$lastinsertuser_id', '$gptelephone', '$gpbasicmobile', '$gpbasicoficeaddress', '$gpcity', '106', '$userid', '$curdate')");

                    $insert = mysql_query("INSERT INTO en_respreadmreferences(rr_respreadmid, rr_typeval, rr_userid, rr_awareofadmission, rr_informeddate, rr_updatedby, rr_updatedon) VALUES('$insertid', 'gp', '$lastinsertuser_id', '$awareadmsn', '$dateinformd', '$userid', '$curdate')");
                }
                else{
                    $insert = mysql_query("INSERT INTO en_respreadmreferences(rr_respreadmid, rr_typeval, rr_userid, rr_awareofadmission, rr_informeddate, rr_updatedby, rr_updatedon) VALUES('$insertid', 'gp', '$gpval', '$awareadmsn', '$dateinformd', '$userid', '$curdate')");
                }
                $k++;
            }
            $insert2 = mysql_query("UPDATE en_residentpreadmission SET rpr_referencedetails='$homewait_array_serailise' WHERE residentpreadmissionid='$insertid'");
            
            $insert = 1;
            

            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, logtime, device, deviceid) VALUES('$userid', 'added', 'preadmission reference', '$curdate', 'Touch', '$deviceid')");

            if($insert)
            {
                $success = array('status' => "success", "msg" => "Successfully added resident reference.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getpreadmissionreference()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        if($userid != "" && $preadmid != "")
        {
            $slctpreadm = mysql_query("SELECT * FROM en_respreadmreferences a LEFT JOIN en_tabluser b ON b.en_userid=a.rr_userid WHERE a.rr_respreadmid='$preadmid'");
            if(mysql_num_rows($slctpreadm) > 0)
            {
                while($row = mysql_fetch_array($slctpreadm))
                {
                    $gpnamee = $row['en_firstname'] . " " . $row['en_lastname'];
                    $rota[] = array('referenceid' => $row['rr_referenceid'], 'gpid' => $row['rr_userid'], 'gpname' => $gpnamee, 'awareofadmission' => $row['rr_awareofadmission'], 'informeddate' => $row['rr_informeddate']);
                }

                $slctqr = mysql_query("SELECT * FROM en_residentpreadmission WHERE residentpreadmissionid='$preadmid'");
                $row2 = mysql_fetch_array($slctqr);
                //echo $row2['rpr_referencedetails'];
                $rpr_referencedetails = unserialize($row2['rpr_referencedetails']);
                //echo $rpr_referencedetails['scrhwaitinglist'];
                if(isset($rpr_referencedetails['scrhwaitinglist']))
                {
                    $scrhwaitinglist = $rpr_referencedetails['scrhwaitinglist'];
                }
                else{
                    $scrhwaitinglist = "";
                }
                if(isset($rpr_referencedetails['hasnok']))
                {
                    $hasnok = $rpr_referencedetails['hasnok'];
                }
                else{
                    $hasnok = "";
                }
                if(isset($rpr_referencedetails['residentidentifier']))
                {
                    $residentidentifier = $rpr_referencedetails['residentidentifier'];
                }
                else{
                    $residentidentifier = "";
                }
                //$data = array("gpusers" => $rota);
                $success = array('status' => "success", "preadmissionreference" => $rota, 'scrhwaitinglist' => $scrhwaitinglist, 'hasnok' => $hasnok, 'residentidentifier' => $residentidentifier);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "preadmissionreference" => "No reference available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function preadmissionmedicaldetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $insertid = $this->_request['insertid'];

        $medications = $this->_request['medications'];
        $othermedications = $this->_request['othermedications'];
        $foodallergies = $this->_request['foodallergies'];
        $otherfoodallergies = $this->_request['otherfoodallergies'];
        $allergy_dressing = $this->_request['allergy_dressing'];
        $relmedhistory = $this->_request['relmedhistory'];
        $formaldiagnosisdementia = $this->_request['formaldiagnosisdementia'];
        $mentalhealthhistory = $this->_request['mentalhealthhistory'];
        $currentregularmedicine = $this->_request['currentregularmedicine'];
        $regularothermedicine = $this->_request['regularothermedicine'];
        $copycurrentprescription = $this->_request['copycurrentprescription'];
        $clienttakemedicines = $this->_request['clienttakemedicines'];
        $selfmedicate = $this->_request['selfmedicate'];
        $mentalhistoryotherdetails = $this->_request['mentalhistoryotherdetails'];
        $controlleddrug = $this->_request['controlleddrug'];
        $hightechmedicines = $this->_request['hightechmedicines'];
        $planinitalsupplycontrolleddrug = $this->_request['planinitalsupplycontrolleddrug'];

        $image = $this->_request['prescriptionfile'];

        $deviceid = $this->_request['deviceid'];
        $curdate = date('Y-m-d H:i:s');

        if($userid != "" && $insertid != "")
        {
            $prescriptioname = "";
            $target_dir = "../public/upload/residentprescription/";
            //$temp = explode(".", $_FILES["resimage"]["name"]);
            //$newfilename = round(microtime(true)) . '.' . end($temp);
            $prescriptioname = round(microtime(true)) . '.jpg';
            
            $target_file = $target_dir . $prescriptioname;
            //if (move_uploaded_file($_FILES["resimage"]["tmp_name"], $target_file)) {
            file_put_contents($target_file,base64_decode($image));

            /*$gn = 0;
            if($_FILES['prescriptionfile']['size'] != 0 && $_FILES['prescriptionfile']['size'] != "")
            {
                $gn = 1;
                $target_dir1 = "../public/upload/residentprescription/";
                $temp1 = explode(".", $_FILES["prescriptionfile"]["name"]);
                $prescriptioname = round(microtime(true)) . '.' . end($temp1);
                $target_file1 = $target_dir1 . $prescriptioname;
                if (move_uploaded_file($_FILES["prescriptionfile"]["tmp_name"], $target_file1)) {
                }
            }*/

            $basicadmissiondetail_array = array(
                'premedications' => $medications,
                'allergy_medication' => $othermedications,
                'foodallergies' => $foodallergies,
                'otherallergies' => $otherfoodallergies,
                'allergy_dressing' => $allergy_dressing,
                'ad_relmedhidtory' => $relmedhistory,
                'ad_nokmedicinecrush' => $formaldiagnosisdementia,
                'ad_relmentalmedhidtory' => $mentalhealthhistory,
                'nentalpremedications' => $currentregularmedicine,
                'nentalpremedications_other' => $regularothermedicine,
                'ad_nokcurpresc' => $copycurrentprescription,
                'dementia' => $clienttakemedicines,
                'selfmedicate' => $selfmedicate,
                'mentalhistoryotherdetails' => $mentalhistoryotherdetails,
                'controlleddrug' => $controlleddrug,
                'hightechmedicines' => $hightechmedicines,
                'planinitalsupplycontrolleddrug' => $planinitalsupplycontrolleddrug,
                'ad_crprescriptionfile' => $prescriptioname
            );
            $basicadmissiondetail_array_serailise = serialize($basicadmissiondetail_array);

            $update = mysql_query("UPDATE en_residentpreadmission SET rpr_medicalaleergiesanddetails='$basicadmissiondetail_array_serailise' WHERE residentpreadmissionid='$insertid'");

            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, logtime, device, deviceid) VALUES('$userid', 'added', 'preadmission medical details', '$curdate', 'Touch', '$deviceid')");

            if($update)
            {
                $success = array('status' => "success", "msg" => "Successfully added medical details.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getpreadmissionmedicaldetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        if($userid != "" && $preadmid != "")
        {
            $slctqr = mysql_query("SELECT * FROM en_residentpreadmission WHERE residentpreadmissionid='$preadmid'");
            if(mysql_num_rows($slctqr) > 0)
            {
                $row = mysql_fetch_array($slctqr);
                if($row['rpr_medicalaleergiesanddetails'] != "")
                {
                    $rpr_medicalaleergiesanddetails = unserialize($row['rpr_medicalaleergiesanddetails']);

                    $presfile = 'http://dev-enursing.demormc.com/public/upload/residentprescription/' . $rpr_medicalaleergiesanddetails['ad_crprescriptionfile'];

                    $medname = array();
                    if($rpr_medicalaleergiesanddetails['premedications'] == 'No Known Drug Allergy')
                    {
                        $medname[] = 'No Known Drug Allergy';
                    }
                    else{
                        $medarr = explode('#', $rpr_medicalaleergiesanddetails['premedications']);

                        foreach($medarr as $mdval)
                        {
                            if($mdval != "")
                            {
                                $meddet = mysql_query("SELECT * FROM en_medicationdatabse WHERE medicationid ='$mdval'");
                                if(mysql_num_rows($meddet) > 0)
                                {
                                    $rowmd = mysql_fetch_array($meddet);
                                    $medname[] = $rowmd['md_medicationname'];
                                }
                            }
                        }
                    }
                    $mednames = implode(', ', $medname);

                    $nonmedname = array();
                    $nonmedallarr = explode('#', $rpr_medicalaleergiesanddetails['nentalpremedications']);
                    foreach($nonmedallarr as $nmdval)
                    {
                        if($nmdval != "")
                        {
                            $nmeddet = mysql_query("SELECT * FROM en_medicationdatabse WHERE medicationid ='$nmdval'");
                            if(mysql_num_rows($nmeddet) > 0)
                            {
                                $nrowmd = mysql_fetch_array($nmeddet);
                                $nonmedname[] = $nrowmd['md_medicationname'];
                            }
                        }
                    }
                    $nonalmednames = implode(', ', $nonmedname);

                    $rota = array('premedications' => $rpr_medicalaleergiesanddetails['premedications'], 'premedicationname' => $mednames, 'allergy_medication' => $rpr_medicalaleergiesanddetails['allergy_medication'], 'foodallergies' => $rpr_medicalaleergiesanddetails['foodallergies'], 'otherallergies' => $rpr_medicalaleergiesanddetails['otherallergies'], 'allergy_dressing' => $rpr_medicalaleergiesanddetails['allergy_dressing'], 'ad_relmedhidtory' => $rpr_medicalaleergiesanddetails['ad_relmedhidtory'], 'ad_nokmedicinecrush' => $rpr_medicalaleergiesanddetails['ad_nokmedicinecrush'], 'ad_relmentalmedhidtory' => $rpr_medicalaleergiesanddetails['ad_relmentalmedhidtory'], 'nentalpremedications' => $rpr_medicalaleergiesanddetails['nentalpremedications'], 'nentalpremedicationnames' => $nonalmednames, 'nentalpremedications_other' => $rpr_medicalaleergiesanddetails['nentalpremedications_other'], 'ad_nokcurpresc' => $rpr_medicalaleergiesanddetails['ad_nokcurpresc'], 'dementia' => $rpr_medicalaleergiesanddetails['dementia'], 'selfmedicate' => $rpr_medicalaleergiesanddetails['selfmedicate'], 'mentalhistoryotherdetails' => $rpr_medicalaleergiesanddetails['mentalhistoryotherdetails'], 'controlleddrug' => $rpr_medicalaleergiesanddetails['controlleddrug'], 'hightechmedicines' => $rpr_medicalaleergiesanddetails['hightechmedicines'], 'planinitalsupplycontrolleddrug' => $rpr_medicalaleergiesanddetails['planinitalsupplycontrolleddrug'], 'prescriptioname' => $presfile);

                    $success = array('status' => "success", "medicaldetails" => $rota);
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $success = array('status' => "failed", "msg" => "No details available.");
                    $this->response($this->json($success), 200);  
                    return true;
                }

            }
            else{
                $success = array('status' => "failed", "msg" => "No details available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function preadmnursingdetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $insertid = $this->_request['insertid'];

        $mobilityby = $this->_request['mobilityby'];
        $mobiltyassistance = $this->_request['mobiltyassistance'];
        $mobilityaids = $this->_request['mobilityaids'];
        $basehoistrequire = $this->_request['basehoistrequire'];
        $basefullbodyhoist = $this->_request['basefullbodyhoist'];
        $basestandinghoist = $this->_request['basestandinghoist'];
        $basehoistslingsize = $this->_request['basehoistslingsize'];
        $fallsofrisk = $this->_request['fallsofrisk'];
        $historyoffalls = $this->_request['historyoffalls'];
        $mobilityby_array = array(
            'mobilityby' => $mobilityby,
            'mobiltyassistance' => $mobiltyassistance,
            'mobilityaids' => $mobilityaids,
            'basehoistrequire' => $basehoistrequire,
            'basefullbodyhoist' => $basefullbodyhoist,
            'basestandinghoist' => $basestandinghoist,
            'basehoistslingsize' => $basehoistslingsize,
            'fallsofrisk' => $fallsofrisk,
            'historyoffalls' => $historyoffalls,
        );
        $mobilityby_array_serailise = serialize($mobilityby_array);

        $eatingby = $this->_request['eatingby'];
        $eatassistance = $this->_request['eatassistance'];
        $pegfeeding = $this->_request['pegfeeding'];
        $allergies = $this->_request['allergies'];
        $otherallergies = $this->_request['otherallergies'];
        $choosendietary = $this->_request['choosendietary'];
        $choosendietaryother = $this->_request['choosendietaryother'];

        $specializedintake = $this->_request['specializedintake'];
        $selectedintake = $this->_request['selectedintake'];
        $selectedintakeother = $this->_request['selectedintakeother'];
        $historyofwytloss = $this->_request['historyofwytloss'];
        $recntwgt = $this->_request['recntwgt'];
        $healthneeds = $this->_request['healthneeds'];
        $promts = $this->_request['promts'];
        $eatinganddrinking_array = array(
            'eatingby' => $eatingby,
            'eatassistance' => $eatassistance,
            'pegfeeding' => $pegfeeding,
            'allergies' => $allergies,
            'otherallergies' => $otherallergies,
            'choosendietary' => $choosendietary,
            'choosendietaryother' => $choosendietaryother,
            'specializedintake' => $specializedintake,
            'selectedintake' => $selectedintake,
            'selectedintakeother' => $selectedintakeother,
            'historyofwytloss' => $historyofwytloss,
            'recntwgt' => $recntwgt,
            'healthneeds' => $healthneeds,
            'promts' => $promts,
        );
        $eatinganddrinking_array_serailise = serialize($eatinganddrinking_array);

        $fullycontinentofurine = $this->_request['fullycontinentofurine'];
        $oftenresinco = $this->_request['oftenresinco'];
        $udrainagedeviceused = $this->_request['udrainagedeviceused'];
        $udeviceused = $this->_request['udeviceused'];
        $fullycontinentofbowel = $this->_request['fullycontinentofbowel'];
        $incopadday = $this->_request['incopadday'];
        $incopadnight = $this->_request['incopadnight'];

        $incontinencedayoption = $this->_request['incontinencedayoption'];
        $incontinencenightoption = $this->_request['incontinencenightoption'];

        $stomacarereq = $this->_request['stomacarereq'];
        $typeofstomaname = $this->_request['typeofstomaname'];
        $eliminationcomments = $this->_request['eliminationcomments'];
        $elimination_array = array(
            'fullycontinentofurine' => $fullycontinentofurine,
            'oftenresinco' => $oftenresinco,
            'udrainagedeviceused' => $udrainagedeviceused,
            'udeviceused' => $udeviceused,
            'fullycontinentofbowel' => $fullycontinentofbowel,
            'incopadday' => $incopadday,
            'incopadnight' => $incopadnight,
            'incontinencedayoption' => $incontinencedayoption,
            'incontinencenightoption' => $incontinencenightoption,
            'stomacarereq' => $stomacarereq,
            'typeofstomaname' => $typeofstomaname,
            'eliminationcomments' => $eliminationcomments,
        );
        $elimination_array_serailise = serialize($elimination_array);

        $skinconditions = $this->_request['skinconditions'];
        $specifyskincondition = $this->_request['specifyskincondition'];
        $specifyotherskincondition = $this->_request['specifyotherskincondition'];
        $pastpresentskindiagnosis = $this->_request['pastpresentskindiagnosis'];
        $patpresentyesspecifyskindiagnosis = $this->_request['patpresentyesspecifyskindiagnosis'];
        $medicationsimpacting = $this->_request['medicationsimpacting'];
        $describeskin = $this->_request['describeskin'];
        $useofpressuremattres = $this->_request['useofpressuremattres'];
        $skincomments = $this->_request['skincomments'];
        $paincondition = $this->_request['paincondition'];
        $skinassesment_array = array(
            'skinconditions' => $skinconditions,
            'specifyskincondition' => $specifyskincondition,
            'specifyotherskincondition' => $specifyotherskincondition,
            'pastpresentskindiagnosis' => $pastpresentskindiagnosis,
            'patpresentyesspecifyskindiagnosis' => $patpresentyesspecifyskindiagnosis,
            'medicationsimpacting' => $medicationsimpacting,
            'describeskin' => $describeskin,
            'useofpressuremattres' => $useofpressuremattres,
            'skincomments' => $skincomments,
            'paincondition' => $paincondition,
        );
        $skinassesment_array_serailise = serialize($skinassesment_array);

        $washupperbody = $this->_request['washupperbody'];
        $washlowerbody = $this->_request['washlowerbody'];
        $dressing = $this->_request['dressing'];
        $personalgrooming = $this->_request['personalgrooming'];
        $personalcarecomments = $this->_request['personalcarecomments'];
        $personalcare_array = array(
            'washupperbody' => $washupperbody,
            'washlowerbody' => $washlowerbody,
            'dressing' => $dressing,
            'personalgrooming' => $personalgrooming,
            'personalcarecomments' => $personalcarecomments,
        );
        $personalcare_array_serailise = serialize($personalcare_array);

        $environmentby = $this->_request['environmentby'];
        $riskfactors = $this->_request['riskfactors'];
        $riskfactorspecifyrisk = $this->_request['riskfactorspecifyrisk'];
        $assistancetominimizerisk = $this->_request['assistancetominimizerisk'];
        $maintainsafe_array = array(
            'environmentby' => $environmentby,
            'riskfactors' => $riskfactors,
            'riskfactorspecifyrisk' => $riskfactorspecifyrisk,
            'assistancetominimizerisk' => $assistancetominimizerisk,
        );
        $maintainsafe_array_serailise = serialize($maintainsafe_array);

        $cpr = $this->_request['cpr'];
        $specifycpr = $this->_request['specifycpr'];
        $transfertohospital = $this->_request['transfertohospital'];
        $prolongingmedication = $this->_request['prolongingmedication'];
        $endstage_array = array(
            'cpr' => $cpr,
            'specifycpr' => $specifycpr,
            'transfertohospital' => $transfertohospital,
            'prolongingmedication' => $prolongingmedication,
        );
        $endstage_array_serailise = serialize($endstage_array);

        $visualimpairment = $this->_request['visualimpairment'];
        $hearingdifficult = $this->_request['hearingdifficult'];
        $rememberrecentevent = $this->_request['rememberrecentevent'];
        $recenteventfactors = $this->_request['recenteventfactors'];
        $themselfunderstood = $this->_request['themselfunderstood'];
        $understoodfactors = $this->_request['understoodfactors'];
        $socialinteractioncomments = $this->_request['socialinteractioncomments'];
        $socialinteraction_array = array(
            'visualimpairment' => $visualimpairment,
            'hearingdifficult' => $hearingdifficult,
            'rememberrecentevent' => $rememberrecentevent,
            'recenteventfactors' => $recenteventfactors,
            'themselfunderstood' => $themselfunderstood,
            'understoodfactors' => $understoodfactors,
            'socialinteractioncomments' => $socialinteractioncomments,
        );
        $socialinteraction_array_serailise = serialize($socialinteraction_array);

        $infection = $this->_request['infection'];
        $infcectionnoticed = $this->_request['infcectionnoticed'];
        $infectiondetails = $this->_request['infectiondetails'];
        $infection_array = array(
            'infection' => $infection,
            'infcectionnoticed' => $infcectionnoticed,
            'infectiondetails' => $infectiondetails,
        );
        $infection_array_serailise = serialize($infection_array);

        $residentsmoke = $this->_request['residentsmoke'];
        $specifysmokehabit = $this->_request['specifysmokehabit'];
        $residentalcohol = $this->_request['residentalcohol'];
        $specifyalcoholhabit = $this->_request['specifyalcoholhabit'];
        $breathing_array = array(
            'residentsmoke' => $residentsmoke,
            'specifysmokehabit' => $specifysmokehabit,
            'residentalcohol' => $residentalcohol,
            'specifyalcoholhabit' => $specifyalcoholhabit,
        );
        $breathing_array_serailise = serialize($breathing_array);

        $deviceid = $this->_request['deviceid'];

        if($userid != "" && $insertid != "")
        {
            $update = mysql_query("UPDATE en_residentpreadmission SET rpr_nursingdetailsmonbility='$mobilityby_array_serailise', rpr_nursingeatingdrinking='$eatinganddrinking_array_serailise', rpr_elimination='$elimination_array_serailise', rpr_skinassignment='$skinassesment_array_serailise', rpr_personalcare='$personalcare_array_serailise', rpr_maintainsafe='$maintainsafe_array_serailise', rpr_endstagelife='$endstage_array_serailise', rpr_socialinteraction='$socialinteraction_array_serailise', rpr_infection='$infection_array_serailise', rpr_breating='$breathing_array_serailise' WHERE residentpreadmissionid='$insertid'");

            //$adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, logtime, device, deviceid) VALUES('$userid', 'added', 'preadmission medical details', '$curdate', 'Touch', '$deviceid')");

            if($update)
            {
                $success = array('status' => "success", "msg" => "Successfully added nursing details.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getpreadmnursingdetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        if($userid != "" && $preadmid != "")
        {
            $slctqr = mysql_query("SELECT * FROM en_residentpreadmission WHERE residentpreadmissionid='$preadmid'");
            if(mysql_num_rows($slctqr) > 0)
            {
                $row = mysql_fetch_array($slctqr);
                if($row['rpr_nursingdetailsmonbility'] != "")
                {
                    $rpr_nursingdetailsmonbility = unserialize($row['rpr_nursingdetailsmonbility']);
                    $rpr_nursingeatingdrinking = unserialize($row['rpr_nursingeatingdrinking']);
                    $rpr_elimination = unserialize($row['rpr_elimination']);
                    $rpr_skinassignment = unserialize($row['rpr_skinassignment']);
                    $rpr_personalcare = unserialize($row['rpr_personalcare']);
                    $rpr_maintainsafe = unserialize($row['rpr_maintainsafe']);
                    $rpr_endstagelife = unserialize($row['rpr_endstagelife']);
                    $rpr_socialinteraction = unserialize($row['rpr_socialinteraction']);
                    $rpr_infection = unserialize($row['rpr_infection']);
                    $rpr_breating = unserialize($row['rpr_breating']);

                    if(isset($rpr_nursingeatingdrinking['choosendietaryother']))
                    {
                        $choosendietaryother = $rpr_nursingeatingdrinking['choosendietaryother'];
                    }
                    else{
                        $choosendietaryother = "";
                    }
                    if(isset($rpr_nursingeatingdrinking['selectedintakeother']))
                    {
                        $selectedintakeother = $rpr_nursingeatingdrinking['selectedintakeother'];
                    }
                    else{
                        $selectedintakeother = "";
                    }
                    if(isset($rpr_elimination['incontinencedayoption']))
                    {
                        $incontinencedayoption = $rpr_elimination['incontinencedayoption'];
                    }
                    else{
                        $incontinencedayoption = "";
                    }
                    if(isset($rpr_elimination['incontinencenightoption']))
                    {
                        $incontinencenightoption = $rpr_elimination['incontinencenightoption'];
                    }
                    else{
                        $incontinencenightoption = "";
                    }

                    $rota = array('mobilityby' => $rpr_nursingdetailsmonbility['mobilityby'], 'mobiltyassistance' => $rpr_nursingdetailsmonbility['mobiltyassistance'], 'mobilityaids' => $rpr_nursingdetailsmonbility['mobilityaids'], 'basehoistrequire' => $rpr_nursingdetailsmonbility['basehoistrequire'], 'basefullbodyhoist' => $rpr_nursingdetailsmonbility['basefullbodyhoist'], 'basestandinghoist' => $rpr_nursingdetailsmonbility['basestandinghoist'], 'basehoistslingsize' => $rpr_nursingdetailsmonbility['basehoistslingsize'], 'fallsofrisk' => $rpr_nursingdetailsmonbility['fallsofrisk'], 'historyoffalls' => $rpr_nursingdetailsmonbility['historyoffalls'], 'eatingby' => $rpr_nursingeatingdrinking['eatingby'], 'eatassistance' => $rpr_nursingeatingdrinking['eatassistance'], 'pegfeeding' => $rpr_nursingeatingdrinking['pegfeeding'], 'allergies' => $rpr_nursingeatingdrinking['allergies'], 'otherallergies' => $rpr_nursingeatingdrinking['otherallergies'], 'choosendietary' => $rpr_nursingeatingdrinking['choosendietary'], 'choosendietaryother' => $choosendietaryother, 'specializedintake' => $rpr_nursingeatingdrinking['specializedintake'], 'selectedintake' => $rpr_nursingeatingdrinking['selectedintake'], 'selectedintakeother' => $selectedintakeother, 'historyofwytloss' => $rpr_nursingeatingdrinking['historyofwytloss'], 'recntwgt' => $rpr_nursingeatingdrinking['recntwgt'], 'healthneeds' => $rpr_nursingeatingdrinking['healthneeds'], 'promts' => $rpr_nursingeatingdrinking['promts'], 'fullycontinentofurine' => $rpr_elimination['fullycontinentofurine'], 'oftenresinco' => $rpr_elimination['oftenresinco'], 'udrainagedeviceused' => $rpr_elimination['udrainagedeviceused'], 'udeviceused' => $rpr_elimination['udeviceused'], 'fullycontinentofbowel' => $rpr_elimination['fullycontinentofbowel'], 'incopadday' => $rpr_elimination['incopadday'], 'incopadnight' => $rpr_elimination['incopadnight'], 'incontinencedayoption' => $incontinencedayoption, 'incontinencenightoption' => $incontinencenightoption, 'stomacarereq' => $rpr_elimination['stomacarereq'], 'typeofstomaname' => $rpr_elimination['typeofstomaname'], 'eliminationcomments' => $rpr_elimination['eliminationcomments'], 'skinconditions' => $rpr_skinassignment['skinconditions'], 'specifyskincondition' => $rpr_skinassignment['specifyskincondition'], 'specifyotherskincondition' => $rpr_skinassignment['specifyotherskincondition'], 'pastpresentskindiagnosis' => $rpr_skinassignment['pastpresentskindiagnosis'], 'patpresentyesspecifyskindiagnosis' => $rpr_skinassignment['patpresentyesspecifyskindiagnosis'], 'medicationsimpacting' => $rpr_skinassignment['medicationsimpacting'], 'describeskin' => $rpr_skinassignment['describeskin'], 'useofpressuremattres' => $rpr_skinassignment['useofpressuremattres'], 'skincomments' => $rpr_skinassignment['skincomments'], 'paincondition' => $rpr_skinassignment['paincondition'], 'washupperbody' => $rpr_personalcare['washupperbody'], 'washlowerbody' => $rpr_personalcare['washlowerbody'], 'dressing' => $rpr_personalcare['dressing'], 'personalgrooming' => $rpr_personalcare['personalgrooming'], 'personalcarecomments' => $rpr_personalcare['personalcarecomments'], 'environmentby' => $rpr_maintainsafe['environmentby'], 'riskfactors' => $rpr_maintainsafe['riskfactors'], 'riskfactorspecifyrisk' => $rpr_maintainsafe['riskfactorspecifyrisk'], 'assistancetominimizerisk' => $rpr_maintainsafe['assistancetominimizerisk'], 'cpr' => $rpr_endstagelife['cpr'], 'specifycpr' => $rpr_endstagelife['specifycpr'], 'transfertohospital' => $rpr_endstagelife['transfertohospital'], 'prolongingmedication' => $rpr_endstagelife['prolongingmedication'], 'visualimpairment' => $rpr_socialinteraction['visualimpairment'], 'hearingdifficult' => $rpr_socialinteraction['hearingdifficult'], 'rememberrecentevent' => $rpr_socialinteraction['rememberrecentevent'], 'recenteventfactors' => $rpr_socialinteraction['recenteventfactors'], 'themselfunderstood' => $rpr_socialinteraction['themselfunderstood'], 'understoodfactors' => $rpr_socialinteraction['understoodfactors'], 'socialinteractioncomments' => $rpr_socialinteraction['socialinteractioncomments'], 'infection' => $rpr_infection['infection'], 'infcectionnoticed' => $rpr_infection['infcectionnoticed'], 'infectiondetails' => $rpr_infection['infectiondetails'], 'residentsmoke' => $rpr_breating['residentsmoke'], 'specifysmokehabit' => $rpr_breating['specifysmokehabit'], 'residentalcohol' => $rpr_breating['residentalcohol'], 'specifyalcoholhabit' => $rpr_breating['specifyalcoholhabit']);

                    $success = array('status' => "success", "nursingdetails" => $rota);
                    $this->response($this->json($success), 200);  
                    return true;
                }
                else{
                    $success = array('status' => "failed", "msg" => "No details available.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No details available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    
    private function preadmequipmentpreparation()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $insertid = $this->_request['insertid'];

        $ultralowbed = $this->_request['ultralowbed'];
        $ultralowbedsuppliedby = $this->_request['ultralowbedsuppliedby'];
        $crashmat = $this->_request['crashmat'];
        $crashmatsuppliedby = $this->_request['crashmatsuppliedby'];
        $poseyalarm = $this->_request['poseyalarm'];
        $alarmsuppliedby = $this->_request['alarmsuppliedby'];
        $securitybracelet = $this->_request['securitybracelet'];
        $securitybraceletsuppliedby = $this->_request['securitybraceletsuppliedby'];
        $toiletseatriser = $this->_request['toiletseatriser'];
        $seatrisersupplyby = $this->_request['seatrisersupplyby'];
        $commode = $this->_request['commode'];
        $commodesupply = $this->_request['commodesupply'];
        $wheelchair = $this->_request['wheelchair'];
        $wheelchairsupply = $this->_request['wheelchairsupply'];
        $chair = $this->_request['chair'];
        $chairsupply = $this->_request['chairsupply'];
        $airmattress = $this->_request['airmattress'];
        $airmattresssupply = $this->_request['airmattresssupply'];
        $cushion = $this->_request['cushion'];
        $cushionsupply = $this->_request['cushionsupply'];
        $zimmerframe = $this->_request['zimmerframe'];
        $zimmerframesupply = $this->_request['zimmerframesupply'];
        $rollator = $this->_request['rollator'];
        $rollatorsupply = $this->_request['rollatorsupply'];
        $other = $this->_request['other'];
        $othersupply = $this->_request['othersupply'];
        $equipenvironmentalothercomments = $this->_request['equipenvironmentalothercomments'];

        $curdate = date('Y-m-d H:i:s');
        if($userid != "" && $insertid != "")
        {
            $enquipment_array = array(
                'ultralowbed' => $ultralowbed,
                'ultralowbedsuppliedby' => $ultralowbedsuppliedby,
                'crashmat' => $crashmat,
                'crashmatsuppliedby' => $crashmatsuppliedby,
                'alarm' => $poseyalarm,
                'alarmsuppliedby' => $alarmsuppliedby,
                'securitybracelet' => $securitybracelet,
                'securitybraceletsuppliedby' => $securitybraceletsuppliedby,
                'seatriser' => $toiletseatriser,
                'seatrisersupplyby' => $seatrisersupplyby,
                'commode' => $commode,
                'commodesupply' => $commodesupply,
                'wheelchair' => $wheelchair,
                'wheelchairsupply' => $wheelchairsupply,
                'chair' => $chair,
                'chairsupply' => $chairsupply,
                'airmattress' => $airmattress,
                'airmattresssupply' => $airmattresssupply,
                'cushion' => $cushion,
                'cushionsupply' => $cushionsupply,
                'zimmerframe' => $zimmerframe,
                'zimmerframesupply' => $zimmerframesupply,
                'rollator' => $rollator,
                'rollatorsupply' => $rollatorsupply,
                'other' => $other,
                'othersupply' => $othersupply,
                'equipenvironmentalothercomments' => $equipenvironmentalothercomments,
            );
            $enquipment_array_serailise = serialize($enquipment_array);

            $update = mysql_query("UPDATE en_residentpreadmission SET rpr_equipeenvionmentaldetails='$enquipment_array_serailise' WHERE residentpreadmissionid='$insertid'");

            if($update)
            {
                $success = array('status' => "success", "msg" => "Successfully added equipment preparation details.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getpreadmequipmentpreparation()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        if($userid != "" && $preadmid != "")
        {
            $slctqr = mysql_query("SELECT * FROM en_residentpreadmission WHERE residentpreadmissionid='$preadmid'");
            if(mysql_num_rows($slctqr) > 0)
            {
                $row = mysql_fetch_array($slctqr);
                if($row['rpr_equipeenvionmentaldetails'] != "")
                {
                    $rpr_equipeenvionmentaldetails = unserialize($row['rpr_equipeenvionmentaldetails']);

                    $rota = array('ultralowbed' => $rpr_equipeenvionmentaldetails['ultralowbed'], 'ultralowbedsuppliedby' => $rpr_equipeenvionmentaldetails['ultralowbedsuppliedby'], 'crashmat' => $rpr_equipeenvionmentaldetails['crashmat'], 'crashmatsuppliedby' => $rpr_equipeenvionmentaldetails['crashmatsuppliedby'], 'alarm' => $rpr_equipeenvionmentaldetails['alarm'], 'alarmsuppliedby' => $rpr_equipeenvionmentaldetails['alarmsuppliedby'], 'securitybracelet' => $rpr_equipeenvionmentaldetails['securitybracelet'], 'securitybraceletsuppliedby' => $rpr_equipeenvionmentaldetails['securitybraceletsuppliedby'], 'seatriser' => $rpr_equipeenvionmentaldetails['seatriser'], 'seatrisersupplyby' => $rpr_equipeenvionmentaldetails['seatrisersupplyby'], 'commode' => $rpr_equipeenvionmentaldetails['commode'], 'commodesupply' => $rpr_equipeenvionmentaldetails['commodesupply'], 'wheelchair' => $rpr_equipeenvionmentaldetails['wheelchair'], 'wheelchairsupply' => $rpr_equipeenvionmentaldetails['wheelchairsupply'], 'chair' => $rpr_equipeenvionmentaldetails['chair'], 'chairsupply' => $rpr_equipeenvionmentaldetails['chairsupply'], 'airmattress' => $rpr_equipeenvionmentaldetails['airmattress'], 'airmattresssupply' => $rpr_equipeenvionmentaldetails['airmattresssupply'], 'cushion' => $rpr_equipeenvionmentaldetails['cushion'], 'cushionsupply' => $rpr_equipeenvionmentaldetails['cushionsupply'], 'zimmerframe' => $rpr_equipeenvionmentaldetails['zimmerframe'], 'zimmerframesupply' => $rpr_equipeenvionmentaldetails['zimmerframesupply'], 'rollator' => $rpr_equipeenvionmentaldetails['rollator'], 'rollatorsupply' => $rpr_equipeenvionmentaldetails['rollatorsupply'], 'other' => $rpr_equipeenvionmentaldetails['other'], 'othersupply' => $rpr_equipeenvionmentaldetails['othersupply'], 'equipenvironmentalothercomments' => $rpr_equipeenvionmentaldetails['equipenvironmentalothercomments']);

                    $success = array('status' => "success", "equipmentpreparation" => $rota);
                    $this->response($this->json($success), 200);  
                    return true;

                }
                else{
                    $success = array('status' => "failed", "msg" => "No details available.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
            else{
                $success = array('status' => "failed", "msg" => "No details available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function approvepreadmission()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        $residentterm = $this->_request['residentterm'];
        $approvedby = $this->_request['approvedby'];
        $approvedon = date('Y-m-d', strtotime($this->_request['approvedon']));
        $approvereason = $this->_request['approvereason'];
        if($userid !="" && $preadmid != "" && $residentterm != "")
        {
            $update = mysql_query("UPDATE en_residentpreadmission SET rpr_formstatus='1', rpr_residentapproveterm='$residentterm', rpr_createdby='$approvedby', rpr_createdon='$approvedon', rpr_reson='$approvereason' WHERE residentpreadmissionid='$preadmid'");

            if($update)
            {
                $success = array('status' => "success", "msg" => "Admission Approved successfully.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function rejectpreadmission()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        $approvedby = $this->_request['rejectedby'];
        $approvedon = date('Y-m-d', strtotime($this->_request['rejectedon']));
        $approvereason = $this->_request['rejectreason'];
        if($userid !="" && $preadmid != "")
        {
            $update = mysql_query("UPDATE en_residentpreadmission SET rpr_formstatus='2', rpr_createdby='$approvedby', rpr_createdon='$approvedon', rpr_reson='$approvereason' WHERE residentpreadmissionid='$preadmid'");

            if($update)
            {
                $success = array('status' => "success", "msg" => "Admission Rejected successfully.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function removepreadmissionstatus()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $preadmid = $this->_request['preadmid'];
        $curdate = date('Y-m-d H:i:s');
        if($userid !="" && $preadmid != "")
        {
            $update = mysql_query("UPDATE en_residentpreadmission SET rpr_formstatus='0', rpr_createdby='$userid', rpr_createdon='$curdate' WHERE residentpreadmissionid='$preadmid'");

            if($update)
            {
                $success = array('status' => "success", "msg" => "Admission status removed successfully.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function admissionenquirylist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid !="")
        {
            $slctqr = mysql_query("SELECT * FROM en_admissionenquiryform a LEFT JOIN en_residentpreadmission b ON b.rpr_enquiryid=a.admissionenquiryformid ORDER BY createdon DESC");
            if(mysql_num_rows($slctqr) > 0)
            {
                while($row = mysql_fetch_array($slctqr))
                {
                    $name = $row['usertitle'] . " " . $row['userfirstname'] . " " . $row['usermiddlename'] . " " . $row['userlastname'];
                    if($row['userphone'] != "")
                    {
                        $nmber = $row['usermobile'] . "/". $row['userphone'];
                    }
                    else{
                        $nmber = $row['usermobile'];
                     //. " " .($row['userphone']!='')?'/'.$row['userphone']:'';
                    }
                    $resname = $row['patienttitle'] . " ".$row['patientfirstname']." ".$row['patientmiddlename']." ".$row['patientlastname'];

                    $admisnqry[] = array('preadmissionid' => $row['residentpreadmissionid'], 'admissionenquiryid' => $row['admissionenquiryformid'], 'contactperson' => $name, 'contactnumber' => $nmber, 'residentname' => $resname, 'currentcondition' => $row['patientcurrentcondition'], 'date' => $row['createdon']);
                }
                $success = array('status' => "success", "admissionenquiries" => $admisnqry);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Admission enquiries not available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function addcareplanmeeting()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $discussedwith = $this->_request['discussedwith'];
        $comments = $this->_request['comments'];
        $meetingdate = date('Y-m-d H:i:s', strtotime($this->_request['meetingdate']));
        $nextreviewdate = date('Y-m-d', strtotime($this->_request['nextreviewdate']));
        $signature = $this->_request['signature'];
        $curdate = date('Y-m-d H:i:s');
        if($userid != "" && $resid != "" && $discussedwith != "")
        {
            if($signature != "")
            {
                $target_dir = "../public/upload/meetingsign/";
                $newfilename = round(microtime(true)) . '.jpg';

                $target_file = $target_dir . $newfilename;
                file_put_contents($target_file,base64_decode($signature));
            }
            $insrt=mysql_query("INSERT INTO en_careplanmeeting(cm_resid, cm_discussedwith, cm_comments, cm_meetingdate, cm_nextreviewdate, cm_updatedby, cm_updatedon, cm_signature) VALUES('$resid', '$discussedwith', '$comments', '$meetingdate', '$nextreviewdate', '$userid', '$curdate', '$newfilename')");
            if($insrt)
            {
                $rprt = mysql_query("SELECT * FROM en_taboptions WHERE to_optionname='Careplan Meeting'");
                $dlrow = mysql_fetch_array($rprt);
                if($dlrow['to_isdailyreport'] == '1')
                {
                    $meetdate = date('d-M-Y H:i', strtotime($meetingdate));
                    $nxtrvwdate = date('d-M-Y', strtotime($nextreviewdate));
                    $reportdata = "Care Plan meeting with family: ".$meetdate." with ".$discussedwith.", next review " . $nxtrvwdate . ", comments:" . $comments;
                    $insrtrprt = mysql_query("INSERT INTO en_dailyreport(reporttypeid, dr_report, dr_addedby, dr_addedon, dr_resid, dr_priority, dr_istab, dr_isautogenerated) VALUES('1', '$reportdata', '$userid', '$curdate', '$resid', 'regular', '1', '1')");
                }
                $success = array('status' => "success", "msg" => "Successfully added careplan meeting.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function careplanmeetinghistory()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($userid != "" && $resid != "")
        {
            $slctqr = mysql_query("SELECT * FROM en_careplanmeeting WHERE cm_resid='$resid' ORDER BY cm_meetingid DESC");
            if(mysql_num_rows($slctqr) > 0)
            {
                while($row= mysql_fetch_array($slctqr))
                {
                    $usid = $row['cm_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $updatedname = ucwords(strtolower($name3));
                        //$updatedname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $updatedname = "";
                    }

                    if($row['cm_signature'] != "")
                    {
                        $sign = "http://dev-enursing.demormc.com/public/upload/meetingsign/" . $row['cm_signature'];
                    }
                    else{
                        $sign = "";
                    }

                    $mmet[] = array('meetingid' => $row['cm_meetingid'], 'discussedwith' => $row['cm_discussedwith'], 'comments' => $row['cm_comments'], 'meetingdate' => $row['cm_meetingdate'], 'nextreviewdate' => $row['cm_nextreviewdate'], 'updatedname' => $updatedname, 'signature' => $sign);
                }
                $success = array('status' => "success", "meetingd" => $mmet);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No history available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function careplanmeetinghistorypage()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        $page = $this->_request['page'];
        if($userid != "" && $resid != "")
        {
            $startno = ($page - 1)*50;
            $limit = 50;

            $slctqr = mysql_query("SELECT * FROM en_careplanmeeting WHERE cm_resid='$resid' ORDER BY cm_meetingid DESC LIMIT $startno, $limit");

            $count1 = mysql_query("SELECT cm_meetingid FROM en_careplanmeeting WHERE cm_resid='$resid'");
            $count = mysql_num_rows($count1);
            $pagecount = ceil($count/50);

            if(mysql_num_rows($slctqr) > 0)
            {
                while($row= mysql_fetch_array($slctqr))
                {
                    $usid = $row['cm_updatedby'];
                    $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                    if(mysql_num_rows($usr)>0)
                    {
                        $row3 = mysql_fetch_array($usr);
                        $name3 = htmlentities($row3['en_firstname'] . " " . $row3['en_lastname']);
                        $updatedname = ucwords(strtolower($name3));
                        //$updatedname = preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_firstname']) . " " . preg_replace('/[^A-Za-z0-9\-\']/', '',$row3['en_lastname']);
                    }
                    else{
                        $updatedname = "";
                    }

                    if($row['cm_signature'] != "")
                    {
                        $sign = "http://dev-enursing.demormc.com/public/upload/meetingsign/" . $row['cm_signature'];
                    }
                    else{
                        $sign = "";
                    }

                    $mmet[] = array('meetingid' => $row['cm_meetingid'], 'discussedwith' => $row['cm_discussedwith'], 'comments' => $row['cm_comments'], 'meetingdate' => $row['cm_meetingdate'], 'nextreviewdate' => $row['cm_nextreviewdate'], 'updatedname' => $updatedname, 'signature' => $sign);
                }
                $success = array('status' => "success", "page" => $page, "totalrecords" => $count, "pagecount" => $pagecount, "meetingd" => $mmet);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No history available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    /******************** Medication Section *************************/
    private function medicationtimeslots()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $slctqr = mysql_query("SELECT * FROM en_medadministrationslots WHERE mas_isactive='0'");
            if(mysql_num_rows($slctqr) > 0)
            {
                while($row= mysql_fetch_array($slctqr))
                {
                    $flag = 0;

                    // check whether medicine administration is pending or not in this slot 

                    $selquery = "select * from en_resaddmedicinenew where find_in_set('".$row['mas_timeslotid']."', am_timeslotid) and am_isactive = 0";
                    // echo $selquery;exit;
                    $resquery = mysql_query($selquery);
                    if(!mysql_num_rows($resquery)){
                        $administration = 'no records';                        
                    } else {
                        while($rowquery = mysql_fetch_array($resquery)){
                            $seladm = "select * from en_resadministratormedicinenew where residentmedicineid = ".$rowquery['addmedicineid']." and adm_timeslotid = ".$row['mas_timeslotid'];
                            // echo $seladm;exit;
                            $resadm = mysql_query($seladm);
                            if(!mysql_num_rows($resadm)){
                                $flag = 1;break;
                            } else {
                                while($rowadm = mysql_fetch_array($resadm)){
                                    if($rowadm['adm_actiontaken'] == ""){
                                        $flag = 1;break;
                                    }
                                }
                                if($flag){
                                    break;
                                }
                            }
                            
                        }

                        $administration = ($flag ? 'due' : 'completed');
                    }
                    
                    $slots[] = array('slotid' => $row['mas_timeslotid'], 'slotname' => $row['mas_slotname'], 'time' => $row['mas_slottime'], 'starttime' => $row['mas_starttime'], 'endtime' => $row['mas_endtime'], 'iscustom' => $row['mas_iscustom'], 'administration'=>$administration);
                }
                $success = array('status' => "success", "timeslots" => $slots);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No slots added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function timeslotresidentlist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $curdate = date('Y-m-d');
        $userid = $this->_request['userid'];
        $timeslotid = $this->_request['timeslotid'];
        if($userid != "" && $timeslotid != "")
        {
            $todaydate = date('Y-m-d');

            $selquery = "select * from en_resaddmedicinenew a LEFT JOIN en_resbasicinfo b ON b.residentadmissionid=a.residentid  WHERE a.am_isactive='0' AND b.res_isactive='0' AND b.res_istransfer='0' AND find_in_set(".$timeslotid.", a.am_timeslotid) AND (a.am_enddate >= '".$todaydate."' OR a.am_medicationtype='3') and am_daysofweek like '%".date('l')."%'";
                // echo $selquery;exit;
            $slctqr = mysql_query($selquery);
            if(mysql_num_rows($slctqr) > 0)
            {
                $adlvrsn = mysql_query("SELECT * FROM en_adlassessmentsettings");
                if(mysql_num_rows($adlvrsn)>0)
                {
                    $row11 = mysql_fetch_array($adlvrsn);
                    $assmntvrsn = $row11['as_assessmentversion'];
                }
                else{
                    $assmntvrsn = "0";
                }

                $residarr =array();
                while($row= mysql_fetch_array($slctqr))
                {
                    if(!in_array($row['residentid'], $residarr))
                    {
                        $name1 = htmlentities($row['res_firstname'] . " " . $row['res_surname']);
                        $pasname = ucwords(strtolower($name1));
                        $resid = $row['residentid'];

                        $ward = mysql_query("SELECT * FROM en_wardbeds wb INNER JOIN en_wards w ON wb.wardid=w.wardid  WHERE wb.residentid='$resid'");
                        $wrdcnt = mysql_num_rows($ward);
                        if($wrdcnt>0)
                        {
                            $wrow = mysql_fetch_array($ward);
                            $wardname = preg_replace('/[^A-Za-z0-9\-\']/', '', $wrow['wardname']);
                            $bednumber = $wrow['bedno'];
                        }
                        else{
                            $wardname = "Not assigned";
                            $bednumber = "Not assigned";
                        }

                        $imgdet = mysql_query("SELECT * FROM en_resadmimage WHERE resadmid='$resid' ORDER BY resadmimageid DESC LIMIT 1");
                        if(mysql_num_rows($imgdet) > 0)
                        {
                            $row1 = mysql_fetch_array($imgdet);
                            $rimg = "http://dev-enursing.demormc.com/public/upload/residentimage/".$row1['resadmimage'];

                        }
                        else{
                            $rimg = "http://dev-enursing.demormc.com/assets/img/profile-pic.jpg";
                        }

                        $knwn = preg_replace('/[^A-Za-z0-9\-\']/', '', $row['res_preferaddress']);
                        $knownas = ucwords(strtolower($knwn));

                        if($assmntvrsn == '0')
                        {
                            $fuddet = mysql_query("SELECT * FROM en_adlfoodeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatanddrinkid DESC LIMIT 1");
                            if(mysql_num_rows($fuddet) > 0)
                            {
                                $row9 = mysql_fetch_array($fuddet);
                                $allergies = $row9['ed_allergies'];
                                $likes = $row9['ed_likes'];
                                $dislikes = $row9['ed_dislikes'];
                                $diettype = $row9['ed_typeofdiet'];
                                
                                $fudallergarr = explode(',', $allergies);
                                $fudallrgcnt = count($fudallergarr);
                                
                                if($fudallergarr != "")
                                {
                                    $allergyfoods = implode(', ', $fudallergarr);
                                }
                                else{
                                    $allergyfoods = "";
                                }
                            }
                            else{
                                $allergies = 'Nil';
                                $likes = 'Nil';
                                $dislikes = 'Nil';
                                $diettype = "";
                                
                                $fudallrgcnt = '0';
                                $allergyfoods = "";
                            }
                            
                        }
                        else{
                            $fuddet = mysql_query("SELECT * FROM en_compeatanddrink WHERE ed_resid='$resid' ORDER BY ed_eatdrinkid DESC LIMIT 1");
                            if(mysql_num_rows($fuddet) > 0)
                            {
                                $row9 = mysql_fetch_array($fuddet);
                                
                                $allergies = $row9['ed_allergies'];
                                
                                $ed_likes = unserialize($row9['ed_foodlikes']);
                                if(isset($ed_likes['breaklikefoods']))
                                {
                                    $likes = $ed_likes['breaklikefoods'];
                                }
                                else{
                                    $likes = "Nil";
                                }
                                $ed_dislikes = unserialize($row9['ed_fooddislikes']);
                                if(isset($ed_dislikes['breakdislikefoods']))
                                {
                                    $dislikes = $ed_dislikes['breakdislikefoods'];
                                }
                                else{
                                    $dislikes = "Nil";
                                }
                                
                                $ed_dietrydetails = unserialize($row9['ed_dietrydetails']);
                                if(isset($ed_dietrydetails['choosendietary']))
                                {
                                    $diettype = $ed_dietrydetails['choosendietary'];
                                }
                                else{
                                    $diettype = "";
                                }
                                
                                $fudallergarr = explode('#', $allergies);
                                $fudallrgcnt = count($fudallergarr);
                                
                                if($fudallergarr != "")
                                {
                                    $allergyfoods = implode(', ', $fudallergarr);
                                }
                                else{
                                    $allergyfoods = "";
                                }
                            }
                            else{
                                $allergies = 'Nil';
                                $likes = 'Nil';
                                $dislikes = 'Nil';
                                $diettype = "";
                                $fudallrgcnt = '0';
                                $allergyfoods = "";
                            }
                        }

                        $medal = mysql_query("SELECT * FROM en_resallergicmedicine a LEFT JOIN en_medicationdatabse b ON b.medicationid=a.am_medicationid WHERE a.am_resid='$resid' AND a.am_isactive='0'");
                        $medallcnt = mysql_num_rows($medal);
                        if($medallcnt > 0)
                        {
                            $medcnarr = array();
                            while($mdrow = mysql_fetch_array($medal))
                            {
                                if($medal['am_medicationid'] != '0')
                                {
                                    $medcnarr[] = $mdrow['md_medicationname'];
                                }
                                else {
                                    $medcnarr[] = $mdrow['am_othermedicine'];
                                }
                            }
                            $allergymedicine = implode(', ', $medcnarr);
                        }
                        else{
                            $allergymedicine = "";
                        }

                        $gpdet = mysql_query("SELECT * FROM en_resadmreferences a LEFT JOIN en_tabluser b ON b.en_userid=a.rr_userid LEFT JOIN en_tbladdress c ON c.en_userid=a.rr_userid LEFT JOIN en_country d ON d.countryid=c.en_countryid WHERE a.rr_resadmid='$resid' AND a.rr_typeval='gp'");
                        $gpcnt = mysql_num_rows($gpdet);
                        if($gpcnt > 0)
                        {
                            $gpnamearr = array();
                            $gpphones = array();
                            while($gprow = mysql_fetch_array($gpdet))
                            {
                                $gpnamearr[] = $gprow['en_firstname'] . " " . $gprow['en_lastname'];
                                if($gprow['en_telephone'] != "" && $gprow['en_telephone'] != NULL)
                                {
                                    $gpphones[] = $gprow['en_telephone'];
                                }
                                if($gprow['en_mobile'] != "" && $gprow['en_mobile'] != NULL)
                                {
                                    $gpphones[] = $gprow['en_mobile'];
                                }
                            }
                            $gpnumbers = implode(' / ', $gpphones);
                            $gpnames = implode(', ', $gpnamearr);
                        }

                        // get last administered by and on according to this resident and timeslotid

                        $seladm = "select rar_addedon, CONCAT(en_firstname, ' ', en_lastname) as username from  en_resadministrationrounds a left join en_tabluser b on a.rar_addedby = b.en_userid where rar_resid = ".$row['residentid']." and rar_timeslotid = ".$timeslotid." order by rar_id desc limit 1";
                        // echo $seladm;exit;
                        $resadm = mysql_query($seladm);
                        $lastadmby = $lastadmon = 'N/A';
                        if(mysql_num_rows($resadm)){
                            $rowadm = mysql_fetch_array($resadm);
                            $lastadmby = $rowadm['username'];
                            $lastadmon = date('d-m-Y H:i', strtotime($rowadm['rar_addedon']));
                        }

                        $reslist[] = array('residentid' => $row['residentid'], 'name' => $pasname, 'knownas' => $knownas, 'wardname' => $wardname, 'bednumber' => $bednumber, 'profileimage' => $rimg, 'administratedon'=>$lastadmon, 'administratedby'=>$lastadmby,'gpname' => $gpnames, 'gpnumbers' => $gpnumbers, 'foodallergies' => $allergyfoods, 'medicationallergies' => $allergymedicine);

                        $residarr[] = $row['residentid'];
                    }
                }
                $success = array('status' => "success", "residents" => $reslist);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No residents available.");
                $this->response($this->json($success), 200);  
                return true;
            }


        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    /*
    
    ADMINISTRATION DUE ACCORDING TO SLOT

    */

    private function admdueslot()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $timeslotid = $this->_request['timeslotid'];
        $date = $this->_request['date'];

        if($userid != "" && $timeslotid != "" && $date != "")
        {
            $todaydate = date('Y-m-d');

            $totalresdue = $totalmeddue = 0; $resdnts = array();

            $selquery = "select * from en_resaddmedicinenew a LEFT JOIN en_resbasicinfo b ON b.residentadmissionid=a.residentid  WHERE a.am_isactive='0' AND b.res_isactive='0' AND b.res_istransfer='0' AND find_in_set(".$timeslotid.", a.am_timeslotid) AND (a.am_enddate >= '$todaydate' OR a.am_medicationtype='3') and am_daysofweek like '%".date('l')."%'";
            // echo $selquery;exit;
            $resquery = mysql_query($selquery);
            if(mysql_num_rows($resquery))
            {
                while($rowquery = mysql_fetch_array($resquery)){

                    $selmedadm = "select * from en_resadministratormedicinenew where adm_timeslotid = ".$timeslotid." AND adm_admnstrtndate='".$todaydate."'";
                    // echo $selmedadm;exit;
                    $resmedadm = mysql_query($selmedadm);

                    if(!mysql_num_rows($resmedadm)){
                        $totalmeddue++;
                        if(!in_array($rowquery['residentid'], $resdnts)){
                            $resdnts[] = $rowquery['residentid'];
                            $totalresdue++;
                        }               

                    } else {
                        while($rowmedadm = mysql_fetch_array($resmedadm)){
                            if($rowmedadm['adm_actiontaken'] == NULL){
                                $totalmeddue++;
                                if(!in_array($rowquery['residentid'], $resdnts)){
                                    $resdnts[] = $rowquery['residentid'];
                                    $totalresdue++;
                                }
                                
                            }
                        }

                    }

                }

                $success = array('status' => "success", "totalresdue" => $totalresdue, "totalmeddue" => $totalmeddue);
                $this->response($this->json($success), 200);  
                return true;
            } else {
                $success = array('status' => "failed", "msg" => "No records available.");
                $this->response($this->json($success), 200);  
                return true;
            }
            
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    /* MEDICATION DETAILS API */

    private function medicationdetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $medid = $this->_request['medid'];

        if($userid != "" && $medid != "")
        {
            $todaydate = date('Y-m-d');
            $selquery = "select a.*,b.*,c.* from  en_medicationdatabse a left join en_medicationtype b on b.medtypeid=a.md_type left join en_tabluser c on c.en_userid=a.md_addedby  where a.medicationid='" . $medid . "' and a.md_isactive='0' ";
            // echo $selquery;exit;
            $slctqr = mysql_query($selquery);
            if(mysql_num_rows($slctqr) > 0)
            {
                $residarr =array();
                while($row= mysql_fetch_array($slctqr))
                {

                    $md_medno = $row['md_medno'];
                    $md_medicationname = $row['md_medicationname'];
                    $md_chemicalname = $row['md_chemicalname'];
                    $md_brandname = $row['md_brandname'];
                    $md_use = $row['md_use'];
                    $md_route = $row['md_route'];
                    $md_medium = $row['md_medium'];
                    $mt_name = $row['mt_name'];
                    $md_addedon = $row['md_addedon'];
                    $md_medimage = $row['md_medimage'] ? "http://dev-enursing.demormc.com/public/upload/medicine/".$md_medimage : 'http://dev-enursing.demormc.com/assets/images/med1.png';
                    
                }
                $success = array('status' => "success", "medno" => $md_medno, "medname" => $md_medicationname, "chemicalname" => $md_chemicalname, "brandname" => $md_brandname, "use" => $md_use, "route" => $md_route, "medium" => $md_medium, "type" => $mt_name, "addedon" => $md_addedon, "medimage"=>$md_medimage);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No records available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }


    /* ADD NOTES */

    private function addnote()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $medadministrationid = $this->_request['medadministrationid'];
        $note = trim($this->_request['note']);

        if($userid != "" && $medadministrationid != "" && $note != "")
        {
            $todaydate = date('Y-m-d');
            $selquery = sprintf("UPDATE en_resadministratormedicinenew SET adm_note = '%s' WHERE medadministrationid = '%s' ", mysql_real_escape_string($note), mysql_real_escape_string($medadministrationid));
            // echo $selquery;exit;
            $slctqr = mysql_query($selquery);
            if(mysql_affected_rows() == '-1'){
                $success = array('status' => "failed", "msg" => "Last query failed.");
                $this->response($this->json($success), 200);  
                return true;
            } else {

                if(mysql_affected_rows()){
                    $success = array('status' => "success", "note" => $note);
                    $this->response($this->json($success), 200);  
                    return true;
                } else {
                    $success = array('status' => "failed", "msg" => "No records updated.");
                    $this->response($this->json($success), 200);  
                    return true;
                }

            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }


    /* GET NOTE */

    private function getnote()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $medadministrationid = $this->_request['medadministrationid'];

        if($userid != "" && $medadministrationid != "")
        {
            $selquery = "SELECT adm_note FROM en_resadministratormedicinenew WHERE medadministrationid=$medadministrationid";
            // echo $selquery;exit;
            $slctqr = mysql_query($selquery);
            if(mysql_num_rows($slctqr) > 0)
            {
                while($row= mysql_fetch_array($slctqr))
                {
                    $note = $row['adm_note'];
                }
                $success = array('status' => "success", "note" => $note);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No record present.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    /* GET ADMINISTRATION LISTING BY TIMESLOTID, DATE AND RESIDENTID */

    private function administrationlisting()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $timeslotid = $this->_request['timeslotid'];
        $date = $this->_request['date'];
        $resid = $this->_request['resid'];

        if($userid != "" && $date != "" && $resid != "" && $timeslotid != "")
        {
            $seltimeslot = "select mas_slottime from  en_medadministrationslots where mas_timeslotid  = ".$timeslotid;
            $restimeslot = mysql_query($seltimeslot);
            $rowtimeslot = mysql_fetch_array($restimeslot);
            $timeslot = date('H:i A', strtotime($rowtimeslot['mas_slottime']));

            $selquery = "select * from en_resaddmedicinenew a left join en_medicationdatabse c ON a.am_medicationid = c.medicationid  WHERE am_isactive = 0 AND residentid=".$resid." AND ( am_enddate >= '".$date."' OR am_medicationtype = '3') and find_in_set( '".date('l', strtotime($date))."', am_daysofweek) AND find_in_set(".$timeslotid.", a.am_timeslotid)";
            // echo $selquery;exit;
            $resmedadm = mysql_query($selquery);
            if(mysql_num_rows($resmedadm) > 0)
            {
                $arr = array(); 
                while($rowmedadm = mysql_fetch_array($resmedadm))
                {
                    $sel = "select * from en_resadministratormedicinenew where  residentmedicineid =".$rowmedadm['addmedicineid']." and adm_admnstrtndate = '".$date."' and adm_timeslotid = ".$timeslotid;
                    // echo $sel;exit;
                    $res = mysql_query($sel);
                    $flag = 0;
                    if(mysql_num_rows($res) > 0){
                        $rowadm = mysql_fetch_array($res);
                        if($rowadm['medadministrationid'] == "" || 
                            ( $rowadm['medadministrationid'] && $rowadm['adm_actiontaken'] == "" ) )
                        {
                            $flag = 1;
                        }
                    } else {
                        $flag = 1;                        
                    }

                    if($flag){
                        $slotidpos = array_search($timeslotid, explode(",", $rowmedadm['am_timeslotid']));
                            $medbeforeafterarr = explode(",", $rowmedadm['am_medbeforeaftertaken']);

                            $medimage = $rowmedadm['md_medimage'] ? "http://dev-enursing.demormc.com/public/upload/medicine/".$rowmedadm['md_medimage'] : 'http://dev-enursing.demormc.com/enursing/assets/images/med1.png';

                        $arr[] = array('addmedicineid'=>$rowmedadm['addmedicineid'], 'medicationtype'=>$rowmedadm['am_medicationtype'], 'medicinename'=>$rowmedadm['md_medicationname'], 'medicineno'=>$rowmedadm['md_medno'], 'medimage'=>$medimage, 'administrationtime'=>$timeslot, 'frequency'=>$this->_frequency($rowmedadm['am_medicinefrequency']), 'supplydays'=>$rowmedadm['am_supplydays'].' days', 'dose'=>$rowmedadm['am_dosage'], 'medtakenwhen'=>$medbeforeafterarr[$slotidpos]/*, 'notes'=>$medadministrationid, 'actiontaken'=>$actiontaken*/);
                    }

                    /*$sel = "select * from en_resadministratormedicinenew where adm_resid = '".$row['residentid']."' and adm_timeslotid = ".$timeslotid." and adm_admnstrtndate = '".$date."'";
                    // echo $sel;exit;
                    $res = mysql_query($sel);
                    if(!mysql_num_rows($res)){
                        $medadministrationid = '';
                        $actiontaken = '';
                    } else {
                        $row = mysql_fetch_array($res);
                        $medadministrationid = $row['medadministrationid'];
                        $actiontaken = $row['adm_actiontaken'];
                    }*/

                }
                if(empty($arr)){
                    $success = array('status' => "failed", "msg" => "No record present.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
                $success = array('status' => "success", "result" => $arr);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No record present.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    
    /* ADD ADMINISTRATION ROUNDS */

    private function administrationroundsadd()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $medadministrationids = $this->_request['medadministrationids'];
        $timeslotid = $this->_request['timeslotid'];
        $adminstrationdate = $this->_request['adminstrationdate'];
        $starttime = $this->_request['starttime'];
        $endtime = $this->_request['endtime'];
        $timeconsumed = $this->_request['timeconsumed'];
        $totalmeds = $this->_request['totalmeds'];
        $resid = $this->_request['resid'];

        if($userid != "" && $adminstrationdate != "" && $medadministrationids != "" && $timeslotid != "" && $starttime != "" && $endtime != "" && $timeconsumed != "" && $totalmeds != "")
        {
            $curdate = date('Y-m-d');
            $insert = "insert into en_resadministrationrounds (rar_medadministrationid, rar_resid, rar_timeslotid, rar_adminstrationdate, rar_starttime, rar_endtime, rar_timeconsumed, rar_totalmeds, rar_addedby, rar_addedon) values ('$medadministrationids', '$resid', '$timeslotid', '$adminstrationdate', '$starttime', '$endtime', '$timeconsumed', '$totalmeds', $userid, '".date('Y-m-d H:i:s')."')";
            // echo $insert;exit;
            $res = mysql_query($insert);
            if($res){
                $success = array('status' => "success", "msg" => "Administration Rounds added successfully.");
                $this->response($this->json($success), 200);
                return true;
            } else {
                $success = array('status' => "failed", "msg" => "Last query failed.");
                $this->response($this->json($success), 200);  
                return true;
            }

            
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function administrationactions()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $sel = "select dd_id, dd_name, dd_title from en_dropdowns where dd_type = 1 order by dd_id asc";
            $res = mysql_query($sel);
            while($row = mysql_fetch_array($res)){
                $dd[] = array('actionid' => $row['dd_id'], 'name' => $row['dd_name'], 'title' => $row['dd_title']);
            }
            $success = array('status' => "success", "actions" => $dd);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "No record present.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function administrationadd()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $curdate = date('Y-m-d');
        $userid = $this->_request['userid'];
        $timeslotid = $this->_request['timeslotid'];
        $addmedicineid = $this->_request['addmedicineid'];
        $resid = $this->_request['resid'];
        $actiontaken = $this->_request['actiontaken'];
        $medtakenwhen = $this->_request['medtakenwhen'];
        $medcinetype = $this->_request['medicationtype'];
        $note = $this->_request['note'];

        if($userid != "" && $timeslotid != "" && $addmedicineid != "" && $resid != "" && $actiontaken != "" && $medtakenwhen != "" && $medcinetype != "")
        {
            $todaydate = date('Y-m-d');

            $selslot = "select * from en_medadministrationslots where mas_timeslotid = ".$timeslotid;
            $resslot = mysql_query($selslot);
            if(mysql_num_rows($resslot)){

                $rowslot = mysql_fetch_array($resslot);

                $selquery = "select * from en_resaddmedicinenew a LEFT JOIN en_resbasicinfo b ON b.residentadmissionid=a.residentid  WHERE a.am_isactive='0' AND b.res_isactive='0' AND b.res_istransfer='0' AND find_in_set(".$timeslotid.", a.am_timeslotid) AND (a.am_enddate >= '".$todaydate."' OR a.am_medicationtype='3') and am_daysofweek like '%".date('l')."%'";
                // echo $selquery;exit;
                $slctqr = mysql_query($selquery);
                if(mysql_num_rows($slctqr) > 0)
                {

                    $residarr =array();
                    while($row= mysql_fetch_array($slctqr))
                    {
                        # if rows are not there for previous days then create the records and insert
                        # in administration table


                        $selmedadm = "select * from en_resadministratormedicinenew where adm_resid = '".$row['residentid']."' and adm_timeslotid = ".$timeslotid." order by medadministrationid desc limit 1";
                        // echo $selmedadm;exit;
                        $resmedadm = mysql_query($selmedadm);
                        if(mysql_num_rows($resmedadm)){
                            $rowmedadm = mysql_fetch_array($resmedadm);
                            $dates = $this->_getdatebetweentwodates($rowmedadm['adm_admnstrtndate'], $curdate);
                        } else {
                            $dates = $this->_getdatebetweentwodates($row['am_startdate'], $curdate);
                        }


                        if(is_array($dates)){
                            foreach ($dates as $vals) {

                                $sel = "select * from en_resadministratormedicinenew where adm_resid = '".$row['residentid']."' and adm_timeslotid = ".$timeslotid." and adm_admnstrtndate = '".$vals."'";
                                // echo $sel;exit;
                                $res = mysql_query($sel);
                                if(!mysql_num_rows($res)){

                                    $resadmnewrow = mysql_fetch_array($res); 

                                    $slotidpos = array_search($timeslotid, explode(",", $row['am_timeslotid']));
                                    $medbeforeafterarr = explode(",", $row['am_medbeforeaftertaken']);


                                    $insert = "insert into en_resadministratormedicinenew (residentmedicineid, adm_resid, adm_timeslotid, adm_medtakenbeforeafter, adm_admnstrtndate, adm_admnstrtnslottime, adm_medicationtype) values ('$row[addmedicineid]', '$row[residentid]', $timeslotid, '$medbeforeafterarr[$slotidpos]', '$vals', '$rowslot[mas_slottime]', '$row[am_medicationtype]')";
                                    // echo $insert;exit;
                                    $insres = mysql_query($insert);
                                }
                            }
                        }
                    }

                    
                }

                $selmedslot = "select * from en_medadministrationslots where mas_timeslotid = ".$timeslotid;
                $resmedslot = mysql_query($selmedslot);
                if(mysql_num_rows($resmedslot)){
                    $rowmedslot = mysql_fetch_array($resmedslot);

                    $insert = sprintf("insert into en_resadministratormedicinenew (residentmedicineid, adm_resid, adm_timeslotid, adm_medtakenbeforeafter, adm_admnstrtndate, adm_admnstrtnslottime, adm_medicationtype, adm_actiontaken, adm_note, adm_updateddate, adm_updatedby) values ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')", 
                        mysql_real_escape_string($addmedicineid), 
                        mysql_real_escape_string($resid), 
                        mysql_real_escape_string($timeslotid), 
                        mysql_real_escape_string($medtakenwhen), 
                        mysql_real_escape_string($todaydate), 
                        mysql_real_escape_string($rowmedslot['mas_slottime']), 
                        mysql_real_escape_string($medcinetype), 
                        mysql_real_escape_string($actiontaken),
                        mysql_real_escape_string($note),
                        mysql_real_escape_string(date('Y-m-d H:i:s')),
                        mysql_real_escape_string($userid)
                    );

                    // if action taken , then accordingly we have to reduce the stock; but only if its A, N,
                    if(in_array($actiontaken, array('A', 'N', 'D', 'S')))
                    {
                        $selresadm = "select am_medicationid from en_resaddmedicinenew where addmedicineid = " . $addmedicineid;
                        $resresadm = mysql_query($selresadm);
                        $rowresadm = mysql_fetch_array($resresadm);

                        $selresadm = "select md_stockavailable from en_medicationdatabse where medicationid = " . $rowresadm['am_medicationid'];
                        $resresadm = mysql_query($selresadm);
                        $rowresmed = mysql_fetch_array($resresadm);
                        if(($rowresmed['md_stockavailable'] - 1) <= 0){
                            $stock = 0;
                        } else {
                            $stock = ($rowresmed['md_stockavailable'] - 1);
                        }


                        $upd = "update en_medicationdatabse set md_stockavailable = '".$stock."' where medicationid = " . $rowresadm['am_medicationid'];
                        mysql_query($upd);
                    }

                    // echo $insert;exit;
                    if(mysql_query($insert)){
                        $lastid = mysql_insert_id();
                        $success = array('status' => "success", "medadministrationid" => $lastid);
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                    else
                    {
                        $success = array('status' => "failed", "msg" => "Last query failed.");
                        $this->response($this->json($success), 200);  
                        return true;
                    }   
                }
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function getadmhistorybyresidtimeslotid()
    {
         if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $timeslotid = $this->_request['timeslotid'];
        $resid = $this->_request['resid'];
        $admnstrtndate = $this->_request['admnstrtndate'];

        if($userid != "" && $timeslotid != "" && $resid != "" && $admnstrtndate != "")
        {
            $todaydate = date('Y-m-d');

            $selslot = "select * from en_medadministrationslots where mas_timeslotid = ".$timeslotid;
            // echo $selslot;exit;
            $resslot = mysql_query($selslot);
            if(mysql_num_rows($resslot)){

                $rowslot = mysql_fetch_array($resslot);

                // get all administration data with medication id, res id and slotid

                $selmedslot = "select adm_updateddate, CONCAT(en_firstname, ' ', en_lastname) as username, adm_admnstrtnslottime, adm_medicationtype, mt_name, md_medicationname, adm_actiontaken, adm_note, dd_title from 
                en_resadministratormedicinenew a 
                left join
                en_resaddmedicinenew b on a.residentmedicineid = b.addmedicineid 
                left join 
                en_tabluser c on a.adm_updatedby = c.en_userid 
                left join 
                en_medicationdatabse d on b.am_medicationid = d.medicationid 
                left join 
                en_medicationtype e on b.am_medicationtype = e.medtypeid 
                left join 
                en_dropdowns f on a.adm_actiontaken = f.dd_name and dd_type = 1 and dd_status = 0
                    where  a.adm_resid = '".$resid."' and 
                    a.adm_timeslotid = '".$timeslotid."' and 
                    adm_admnstrtndate = '".$admnstrtndate."'

                        order by medadministrationid asc";
                // echo $selmedslot;exit;
                if($resmedslot = mysql_query($selmedslot)){
                    if(mysql_num_rows($resmedslot)){
                        $data = array();
                        while($rowmedslot = mysql_fetch_array($resmedslot)){
                            $updatedon = $rowmedslot['adm_updateddate'] ? date('d/m/Y H:i', strtotime($rowmedslot['adm_updateddate'])) : 'N/A';
                            $updby = $rowmedslot['username'] ? $rowmedslot['username'] : 'N/A';
                            switch ($rowmedslot['adm_medicationtype']) {
                                case '1':
                                    $medtype = 'ONLY ONCE';
                                    break;
                                case '2':
                                    $medtype = 'SHORT TERM';
                                    break;
                                case '3':
                                    $medtype = 'LONG TERM';
                                    break;

                                default:
                                    $medtype = '';
                            }
                            // get last administered by and on according to this resident and timeslotid

                            $data[] = array(
                                
                                'updatedon'=>$updatedon, 
                                'updatedby'=>$updby, 
                                'medicationtype'=>$medtype, 
                                'medicationname'=>$rowmedslot['md_medicationname'], 
                                'actiontaken'=>$rowmedslot['dd_title'].' ('.$rowmedslot['adm_actiontaken'].')', 
                                'notes'=>$rowmedslot['adm_note']

                            );

                        }
                        $success = array('status' => "success", "data" => $data);
                        $this->response($this->json($success), 200);  
                        return true;
                    } else {
                        $success = array('status' => "success", "msg" => "No history for this resident.");
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                } else {
                    $success = array('status' => "failed", "msg" => "Last query failed.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function getadmhistorybymedidresidtimeslotid()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $curdate = date('Y-m-d');
        $userid = $this->_request['userid'];
        // $timeslotid = $this->_request['timeslotid'];
        $am_medicationid = $this->_request['medicationid'];
        $resid = $this->_request['resid'];

        if($userid != "" /*&& $timeslotid != ""*/ && $am_medicationid != "" && $resid != "")
        {
            $todaydate = date('Y-m-d');

            $selslot = "select * from en_medadministrationslots";
            // echo $selslot;exit;
            $resslot = mysql_query($selslot);
            if(mysql_num_rows($resslot)){

                while($rowslot = mysql_fetch_array($resslot)){
                    $selquery = "select * from en_resaddmedicinenew a LEFT JOIN en_resbasicinfo b ON b.residentadmissionid=a.residentid  WHERE a.am_medicationid = ".$am_medicationid." and residentid = '".$resid."' and a.am_isactive='0' AND b.res_isactive='0' AND b.res_istransfer='0' AND find_in_set(".$rowslot['mas_timeslotid'].", a.am_timeslotid) AND (a.am_enddate >= '".$todaydate."' OR a.am_medicationtype='3') and find_in_set('".date('l')."', am_daysofweek)";
                    // echo $selquery;exit;
                    $slctqr = mysql_query($selquery);
                    if(mysql_num_rows($slctqr) > 0)
                    {

                        $residarr =array();
                        while($row= mysql_fetch_array($slctqr))
                        {
                            # if rows are not there for previous days then create the records and insert
                            # in administration table

                            $selmedadm = "select * from en_resadministratormedicinenew where residentmedicineid = ".$row['addmedicineid']." and adm_timeslotid = ".$rowslot['mas_timeslotid']." order by medadministrationid desc limit 1";
                            // echo $selmedadm;exit;
                            $resmedadm = mysql_query($selmedadm);
                            if(mysql_num_rows($resmedadm)){
                                $rowmedadm = mysql_fetch_array($resmedadm);
                                $dates = $this->_getdatebetweentwodates($rowmedadm['adm_admnstrtndate'], $curdate);
                            } else {
                                $dates = $this->_getdatebetweentwodates($row['am_startdate'], $curdate);
                            }

                            if(is_array($dates)){
                                foreach ($dates as $vals) {

                                    $sel = "select * from en_resadministratormedicinenew where residentmedicineid = '".$row['addmedicineid']."' and adm_timeslotid = ".$rowslot['mas_timeslotid']." and adm_admnstrtndate = '".$vals."'";
                                    // echo $sel;exit;
                                    $res = mysql_query($sel);
                                    if(!mysql_num_rows($res)){

                                        $resadmnewrow = mysql_fetch_array($res); 

                                        $slotidpos = array_search($rowslot['mas_timeslotid'], explode(",", $row['am_timeslotid']));
                                        $medbeforeafterarr = explode(",", $row['am_medbeforeaftertaken']);


                                        $insert = "insert into en_resadministratormedicinenew (residentmedicineid, adm_resid, adm_timeslotid, adm_medtakenbeforeafter, adm_admnstrtndate, adm_admnstrtnslottime, adm_medicationtype) values ('".$row['addmedicineid']."', '".$row['residentid']."', '".$rowslot['mas_timeslotid']."', '".$medbeforeafterarr[$slotidpos]."', '".$vals."', '".$rowslot['mas_slottime']."', '".$row['am_medicationtype']."')";
                                        // echo $insert;exit;
                                        $insres = mysql_query($insert);
                                    }
                                }
                            }
                        }

                        
                    }
                }

                


                // get all administration data with medication id, res id and slotid

                $selmedslot = "select adm_updateddate, CONCAT(en_firstname, ' ', en_lastname) as username, adm_admnstrtndate, adm_admnstrtnslottime, adm_medicationtype, mt_name, md_medicationname, adm_actiontaken, adm_note from 
                en_resadministratormedicinenew a 
                left join
                en_resaddmedicinenew b on a.residentmedicineid = b.addmedicineid 
                left join 
                en_tabluser c on a.adm_updatedby = c.en_userid 
                left join 
                en_medicationdatabse d on b.am_medicationid = d.medicationid 
                left join 
                en_medicationtype e on b.am_medicationtype = e.medtypeid 
                    where  a.adm_resid = '".$resid."' and 
                    b.am_medicationid = '".$am_medicationid."' and 
                    b.am_isactive='0'
                        order by medadministrationid asc";
                // echo $selmedslot;exit;
                if($resmedslot = mysql_query($selmedslot)){
                    if(mysql_num_rows($resmedslot)){
                        $data = array();
                        while($rowmedslot = mysql_fetch_array($resmedslot)){
                            $updatedon = $rowmedslot['adm_updateddate'] ? date('d/m/Y', strtotime($rowmedslot['adm_updateddate'])) : 'N/A';
                            $updby = $rowmedslot['username'] ? $rowmedslot['username'] : 'N/A';
                            switch ($rowmedslot['adm_medicationtype']) {
                                case '1':
                                    $medtype = 'ONLY ONCE';
                                    break;
                                case '2':
                                    $medtype = 'SHORT TERM';
                                    break;
                                case '3':
                                    $medtype = 'LONG TERM';
                                    break;

                                default:
                                    $medtype = '';
                            }
                            $data[] = array(
                                'administrationdate'=>date('d/m/Y', strtotime($rowmedslot['adm_admnstrtndate'])), 
                                'updatedby'=>$updby, 
                                'slottime'=>date('H:i', strtotime($rowmedslot['adm_admnstrtnslottime'])), 
                                'medicationtype'=>$medtype, 
                                'medicationname'=>$rowmedslot['md_medicationname'], 
                                'actiontaken'=>$rowmedslot['adm_actiontaken'], 
                                'notes'=>$rowmedslot['adm_note']);
                        }
                        $success = array('status' => "success", "data" => $data);
                        $this->response($this->json($success), 200);  
                        return true;
                    } else {
                        $success = array('status' => "success", "msg" => "No history for this medication.");
                        $this->response($this->json($success), 200);  
                        return true;
                    }
                } else {
                    $success = array('status' => "failed", "msg" => "Last query failed.");
                    $this->response($this->json($success), 200);  
                    return true;
                }
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    /******************* Stocks functions **********************/
    private function getallstockcategories()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $slctqr = mysql_query("SELECT * FROM en_stocks_productcategory WHERE pc_status='0'");
            if(mysql_num_rows($slctqr) > 0)
            {
                while($row= mysql_fetch_array($slctqr))
                {
                    $cat[] = array('categoryid' => $row['pc_id'], 'category' => $row['pc_category']);
                }
                $success = array('status' => "success", "msg" => $cat);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No categories added.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function getcategoryproducts()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $categoryid = $this->_request['categoryid'];
        if($userid != "" && $categoryid != "")
        {
            $slctqr = mysql_query("SELECT * FROM en_stocks_products a LEFT JOIN en_stocks_vendors c ON a.ps_lastaddedvendor = c.sv_id LEFT JOIN en_stocks_location d ON a.ps_location=d.sl_id WHERE ps_category='$categoryid' AND ps_isactive='0' ORDER BY ps_id ASC");
            if(mysql_num_rows($slctqr) > 0)
            {
                while($row= mysql_fetch_array($slctqr))
                {
                    if($row['ps_image'] != "")
                    {
                        $image = "http://dev-enursing.demormc.com/public/upload/stocks/" . $row['ps_image'];
                    }
                    else{
                        $image = "http://dev-enursing.demormc.com/assets/img/no-image.png";
                    }

                    $proid = $row['ps_id'];
                    $lastcheckqry = mysql_query("SELECT * FROM en_stocks_checkout_items WHERE sci_productid='$proid' ORDER BY sci_checkoutitemid DESC LIMIT 1");
                    if(mysql_num_rows($lastcheckqry) > 0)
                    {
                        $row2 = mysql_fetch_array($lastcheckqry);
                        $lastdate = $row2['sci_updatedon'];

                        $usid = $row2['sci_updatedby'];
                        $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$usid'");
                        if(mysql_num_rows($usr)>0)
                        {
                            $row4 = mysql_fetch_array($usr);
                            $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                            $lastcheckoutby = ucwords(strtolower($name2));
                        }
                        else{
                            $lastcheckoutby = "";
                        }
                    }
                    else{
                        $lastdate = "";
                        $lastcheckoutby = "";
                    }
                    

                    $prdcts[] = array('productid' => $row['ps_id'], 'productname' => $row['ps_name'], 'location' => $row['sl_locationname'], 'currentstock' => $row['ps_currentstock'], 'image' => $image, 'lastcheckoutdate' => $lastdate, 'lastcheckoutby' => $lastcheckoutby);
                }
                $success = array('status' => "success", "msg" => $prdcts);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No products available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function productcheckout()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $items = $this->_request['items'];
        $comments = $this->_request['comments'];
        $date = $this->_request['date'];
        if($userid != "" && $items != "" && $date != "")
        {
            $checkdate = date('Y-m-d H:i:s', strtotime($date));
            $curdate = date('Y-m-d H:i:s');
            $inert = mysql_query("INSERT INTO en_stocks_checkouts(sc_userid, sc_checkoutdate, sc_comments, sc_updatedon) VALUES('$userid', '$checkdate', '$comments', '$curdate')");
            $checkoutid = mysql_insert_id();

            $itemarr = explode(',', $items);
            foreach ($itemarr as $itmval) {
                $itemvalarr = explode('#', $itmval);
                if($itemvalarr[0] != "")
                {
                    $proid = $itemvalarr[0];
                    $chckqty = $itemvalarr[1];
                    $itemdet = mysql_query("SELECT * FROM en_stocks_products WHERE ps_id='$proid'");
                    $row2 = mysql_fetch_array($itemdet);
                    $preqty = $row2['ps_currentstock'];
                    $newqty = $preqty - $chckqty;

                    $upditem = mysql_query("UPDATE en_stocks_products SET ps_currentstock='$newqty' WHERE ps_id='$proid'");

                    $inert2 = mysql_query("INSERT INTO en_stocks_checkout_items(sci_checkoutid, sci_productid, sci_currentstock, sci_quantity, sci_updatedby, sci_updatedon) VALUES('$checkoutid', '$proid', '$newqty', '$chckqty', '$userid', '$checkdate')");
                }
            }
            if($inert)
            {
                $success = array('status' => "success", "msg" => "Checkout Successfully done.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function manualhandlingoption()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $slct1 = mysql_query("SELECT * FROM en_assesmentmaster WHERE as_assesmentname='Manual Handling Chart'");
            if(mysql_num_rows($slct1) > 0)
            {
                $row1 = mysql_fetch_array($slct1);
                if($row1['as_assessstatus'] == '0')
                {
                    $manual1 = "yes";
                }
                else{
                    $manual1 = "no";
                }
            }
            else{
                $manual1 = "no";
            }

            $slct2 = mysql_query("SELECT * FROM en_assesmentmaster WHERE as_assesmentname='Manual Handling Chart 2'");
            if(mysql_num_rows($slct2) > 0)
            {
                $row2 = mysql_fetch_array($slct2);
                if($row2['as_assessstatus'] == '0')
                {
                    $manual2 = "yes";
                }
                else{
                    $manual2 = "no";
                }
            }
            else{
                $manual2 = "no";
            }

            $success = array('status' => "success", "manual1" => $manual1, 'manual2' => $manual2);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function manualhandlingchart1()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($userid != "" && $resid != "")
        {
            $slct = mysql_query("SELECT * FROM en_manualhandlingchart WHERE mh_resid='$resid' AND mh_isactive='0' ORDER BY mh_manualhandlingid DESC LIMIT 1");

            if(mysql_num_rows($slct) > 0)
            {
                $row = mysql_fetch_array($slct);

                $upd = $row['mh_updatedby'];
                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$upd'");
                if(mysql_num_rows($usr)>0)
                {
                    $row4 = mysql_fetch_array($usr);
                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                    $updatedby = ucwords(strtolower($name2));
                }
                else{
                    $updatedby = "";
                }

                $sign = $row['mh_signed'];
                $usr1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$sign'");
                if(mysql_num_rows($usr1)>0)
                {
                    $row5 = mysql_fetch_array($usr1);
                    $name3 = htmlentities($row5['en_firstname'] . " " . $row5['en_lastname']);
                    $signed = ucwords(strtolower($name3));
                }
                else{
                    $signed = "";
                }

                $data = array('reviewedon' => $row['mh_updatedon'], 'reviewedby' => $updatedby, 'date' => $row['mh_assessmentdate'], 'signed' => $signed, 'sittingbedinstruction' => $row['mh_sittingbedinstruction'], 'outbedinstruction' => $row['mh_outbedinstruction'], 'toiletbathinstruction' => $row['mh_toiletbathinstruction'], 'standsitinstruction' => $row['mh_standsitinstruction'], 'mobilityinstruction' => $row['mh_mobilityinstruction'], 'sittingbedcomment' => $row['mh_sittingbedcomment'], 'outbedcomment' => $row['mh_outbedcomment'], 'toiletbathcommment' => $row['mh_toiletbathcommment'], 'standsitcomment' => $row['mh_standsitcomment'], 'mobilitycomment' => $row['mh_mobilitycomment'], 'sittingbedspecialreq' => $row['mh_sittingbedspecialreq'], 'outbedspecialreq' => $row['mh_outbedspecialreq'], 'toiletbathspecialreq' => $row['mh_toiletbathspecialreq'], 'standsitspecialreq' => $row['mh_standsitspecialreq'], 'specialreq' => $row['mh_specialreq'], 'nextreviewdate' => $row['mh_nextreviewdate']);

                $success = array('status' => "success", "msg" => $data);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No data available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }
    private function manualhandlingchart2()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $resid = $this->_request['resid'];
        if($userid != "" && $resid != "")
        {

            $slct = mysql_query("SELECT * FROM en_manualhandlingchart_two WHERE mhc_resid='$resid' AND mhc_status='0' ORDER BY mh_chart_twoid DESC LIMIT 1");

            if(mysql_num_rows($slct) > 0)
            {
                $row = mysql_fetch_array($slct);

                $upd = $row['mhc_updated_by'];
                $usr = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$upd'");
                if(mysql_num_rows($usr)>0)
                {
                    $row4 = mysql_fetch_array($usr);
                    $name2 = htmlentities($row4['en_firstname'] . " " . $row4['en_lastname']);
                    $updatedby = ucwords(strtolower($name2));
                }
                else{
                    $updatedby = "";
                }

                $sign = $row['mhc_nurse_sign'];
                $usr1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$sign'");
                if(mysql_num_rows($usr1)>0)
                {
                    $row5 = mysql_fetch_array($usr1);
                    $name3 = htmlentities($row5['en_firstname'] . " " . $row5['en_lastname']);
                    $signed = ucwords(strtolower($name3));
                }
                else{
                    $signed = "";
                }

                $physign = $row['mhc_phy_sign'];
                $usr2 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$physign'");
                if(mysql_num_rows($usr2)>0)
                {
                    $row6 = mysql_fetch_array($usr2);
                    $name4 = htmlentities($row6['en_firstname'] . " " . $row6['en_lastname']);
                    $physigned = ucwords(strtolower($name4));
                }
                else{
                    $physigned = "";
                }

                $passcodethree=unserialize($row['mhc_instruction_assistant']);
                $passcodetwo=unserialize($row['mhc_equipment_required']);
                $passcodeone=unserialize($row['mhc_special_consideration']);

                $data = array('reviewedon' => $row['mhc_review_date'], 'reviewedby' => $updatedby, 'date' => $row['mhc_assessmentdate'], 'signed' => $signed, 'nextreviewdate' => $row['mch_nextreview_date'], 'physiotherapistsign' => $physigned, 'bedmobilityinstruction' => $passcodethree['instrbmobility'], 'inoutbedinstruction' => $passcodethree['instrinbed'], 'chairtoiletinstruction'=>$passcodethree['instrchairtoilet'], 'sitstandinstruction' => $passcodethree['instrsitstand'], 'mobilityinstruction' => $passcodethree['instrmobility'], 'showerinstruction' => $passcodethree['instrshowerbath'], 'evacuationinstruction' => $passcodethree['instremergencyevacuation'], 'bedmobilityequipment' => $passcodetwo['eqpreqbmobility'], 'inoutbedequipment' => $passcodetwo['eqpreqinbed'], 'chairtoiletequipment' => $passcodetwo['eqpreqchairtoilet'], 'sitstandequipment' => $passcodetwo['eqpreqsitstand'], 'mobilityequipment' => $passcodetwo['eqpreqmobility'], 'showerequipment' => $passcodetwo['eqpreqshowerbath'], 'evacuationequipment' => $passcodetwo['eqpreqemergencyevacuation'], 'bedmobilityconsiderations' => $passcodeone['scbmobility'], 'inoutbedconsiderations' => $passcodeone['scinbed'], 'chairtoiletconsiderations' => $passcodeone['scchairtoilet'], 'sitstandconsiderations' => $passcodeone['scsitstand'], 'mobilityconsiderations' => $passcodeone['scmobility'], 'showerconsiderations' => $passcodeone['scshowerbath'], 'evacuationconsiderations' => $passcodeone['scemergencyevacuation']);

                $success = array('status' => "success", "msg" => $data);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No data available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function userleaverequests()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $year = $this->_request['year'];
        if($userid != "" && $year != "")
        {
            $requests = mysql_query("SELECT * FROM en_holidayrequest WHERE userid='$userid' AND (YEAR(startdate)='$year' or YEAR(enddate) ='$year')");
            if(mysql_num_rows($requests) > 0)
            {
                while($row = mysql_fetch_array($requests))
                {
                    if($row['leavewhen'] != 'Full day')
                    {
                        $startdate = $row['requestdate'];
                    }
                    else{
                        $startdate = $row['startdate'];
                    }
                    $repliedby = $row['approvedby'];
                    $usr1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$repliedby'");
                    if(mysql_num_rows($usr1)>0)
                    {
                        $row5 = mysql_fetch_array($usr1);
                        $name3 = htmlentities($row5['en_firstname'] . " " . $row5['en_lastname']);
                        $repliedby = ucwords(strtolower($name3));
                    }
                    else{
                        $repliedby = "";
                    }

                    $reqsts[] = array('requestid' => $row['requestid'], 'applydate' => $row['applydate'], 'note' => $row['note'], 'status' => $row['status'], 'repliedby' => $repliedby, 'replynote' => $row['replynote'], 'replydate' => $row['replydate'], 'reason' => $row['reason'], 'leavetype' => $row['leavetype'], 'leavewhen' => $row['leavewhen'], 'startdate' => $startdate, 'enddate' => $row['enddate'], 'hours' => $row['hours']);
                }
                $success = array('status' => "success", "msg" => $reqsts);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No data available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function userpendingleaverequests()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $requests = mysql_query("SELECT * FROM en_holidayrequest WHERE userid='$userid' AND status='0'");
            if(mysql_num_rows($requests) > 0)
            {
                while($row = mysql_fetch_array($requests))
                {
                    if($row['leavewhen'] != 'Full day')
                    {
                        $startdate = $row['requestdate'];
                    }
                    else{
                        $startdate = $row['startdate'];
                    }
                    $repliedby = $row['approvedby'];
                    $usr1 = mysql_query("SELECT * FROM en_tabluser WHERE en_userid='$repliedby'");
                    if(mysql_num_rows($usr1)>0)
                    {
                        $row5 = mysql_fetch_array($usr1);
                        $name3 = htmlentities($row5['en_firstname'] . " " . $row5['en_lastname']);
                        $repliedby = ucwords(strtolower($name3));
                    }
                    else{
                        $repliedby = "";
                    }

                    $reqsts[] = array('requestid' => $row['requestid'], 'applydate' => $row['applydate'], 'note' => $row['note'], 'status' => $row['status'], 'reason' => $row['reason'], 'leavetype' => $row['leavetype'], 'leavewhen' => $row['leavewhen'], 'startdate' => $startdate, 'enddate' => $row['enddate'], 'hours' => $row['hours']);
                }
                $success = array('status' => "success", "msg" => $reqsts);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No data available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function applyleave()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $reason = $this->_request['reason'];
        $leavetype = $this->_request['leavetype'];
        $when = $this->_request['when'];
        $startdate1 = $this->_request['startdate'];
        $enddate1 = $this->_request['enddate'];
        $hours = $this->_request['hours'];
        $description = $this->_request['description'];
        $deviceid = $this->_request['deviceid'];
        $curdate = date('Y-m-d H:i:s');
        
        if($userid != "" && $leavetype != "" && $when != "")
        {
            $startdate = null;
            $enddate = null;
            $singdate = null;
            if($when == 'Full day')
            {
                $startdate = date('Y-m-d', strtotime($startdate1));
                $enddate = date('Y-m-d', strtotime($enddate1));
            }
            else{
                $singdate = date('Y-m-d', strtotime($startdate1));
            }

            $insrt = mysql_query("INSERT INTO en_holidayrequest(requestdate, userid, applydate, note, reason, leavetype, leavewhen, startdate, enddate, hours, addedby) VALUES('$singdate', '$userid', '$curdate', '$description', '$reason', '$leavetype', '$when', '$startdate', '$enddate', '$hours', '$userid')");

            $reqid = mysql_insert_id();

            $slctadm = mysql_query("SELECT * FROM en_tabluser WHERE en_usertype='5'");
            $atfor[] = "";
            $atrd[] = "";
            if(mysql_num_rows($slctadm) > 0)
            {
                while($row = mysql_fetch_array($slctadm))
                {
                    if (!in_array($row['en_userid'], $atfor)) {
                        if ($userid != $row['en_userid']) {
                            $atfor[] = $row['en_userid'];
                            $atrd[] = 0;
                        }
                    }
                }
            }
            $actfor = implode('#', $atfor);
            $actread = implode('#', $atrd);

            $insrtnot = mysql_query("INSERT INTO en_holidaynotification(notifyby, noyifyto, notification, isread, notifydate, requestid) VALUES('$userid', '$actfor', 'sent new holiday request', '$actread', '$curdate', '$reqid')");

            $adactvty = mysql_query("INSERT INTO en_activitylog(userid, logaction, page, module, logtime, device, deviceid) VALUES('$userid', 'applied', 'leave', 'employee', '$curdate', 'Touch', '$deviceid')");

            if($insrt)
            {
                $success = array('status' => "success", "msg" => "Successfully applied your leave.");
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "Error occured, please try again.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function usertraininglist()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        if($userid != "")
        {
            $trainings = mysql_query("SELECT a.trainingid,a.emplytrainingid,a.et_userid,a.et_location,a.et_startdate,a.et_enddate,a.et_numdays,a.et_numhours,a.et_reviewdate,a.et_cost,a.et_coursestatus,a.et_notes,a.et_updatedby,a.et_updatedon,a.et_notification,a.et_status,b.tr_trainingname,c.en_firstname,c.en_lastname FROM en_emptraining a INNER JOIN en_trainingcources b ON b.trainingid=a.trainingid INNER JOIN en_tabluser c ON c.en_userid=a.et_userid WHERE a.et_userid='$userid' AND a.et_status='0' AND b.tr_status='0' ORDER BY a.et_updatedon DESC");
            if(mysql_num_rows($trainings) > 0)
            {
                $trainidarr = array();
                while($row = mysql_fetch_array($trainings))
                {
                    if(!in_array($row['trainingid'], $trainidarr))
                    {
                        $trinlst[] = array("trainingid" => $row['trainingid'], "empltrainingid" => $row['emplytrainingid'],"trainingname" => $row['tr_trainingname'], "location" => $row['et_location'], "startdate" => $row['et_startdate'], "reviewdate" => $row['et_reviewdate']);

                        $trainidarr[] = $row['trainingid'];
                    }
                }

                $success = array('status' => "success", "msg" => $trinlst);
                $this->response($this->json($success), 200);  
                return true;
            }
            else{
                $success = array('status' => "failed", "msg" => "No training available.");
                $this->response($this->json($success), 200);  
                return true;
            }
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function trainingdetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $trainingid = $this->_request['trainingid'];
        if($userid != "" && $trainingid != "")
        {
            $trindet = mysql_query("SELECT a.*,b.tr_trainingname,b.tr_trainingdescription FROM en_emptraining a INNER JOIN en_trainingcources b ON b.trainingid=a.trainingid WHERE a.trainingid='$trainingid' AND a.et_userid='$userid' ORDER BY a.et_updatedon DESC");
            $k=0;
            $history = array();
            while($row = mysql_fetch_array($trindet))
            {
                switch ($row['et_notification']) {
                     case 1:
                     $notifi = "1 weeks";
                         break;
                     case 2:
                         $notifi = "2 weeks";
                         break;
                     case 3:
                          $notifi = "1 month";
                         break;
                     case 4:
                          $notifi = "2 month";
                         break;
                 }

                if($k == 0)
                {
                    $trainingname = $row['tr_trainingname'];
                    $details = array('location' => $row['et_location'], 'startdate' => $row['et_startdate'], 'enddate' => $row['et_enddate'], 'noofdays' => $row['et_numdays'], 'noofhours' => $row['et_numhours'], 'nextduedate' => $row['et_reviewdate'], 'cost' => $row['et_cost'], 'status' => $row['et_coursestatus'], 'note' => $row['et_notes'], 'description' => $row['tr_trainingdescription'], 'notification' => $notifi);
                }

                if($k != '0')
                {
                    
                    $history[] = array('location' => $row['et_location'], 'startdate' => $row['et_startdate'], 'enddate' => $row['et_enddate'], 'noofdays' => $row['et_numdays'], 'noofhours' => $row['et_numhours'], 'nextduedate' => $row['et_reviewdate'], 'cost' => $row['et_cost'], 'status' => $row['et_coursestatus'], 'note' => $row['et_notes'], 'description' => $row['tr_trainingdescription'], 'notification' => $notifi);
                }
                $k++;
            }

            $success = array('status' => "success", "trainingname" => $trainingname, "details" => $details, "history" => $history);
            $this->response($this->json($success), 200);  
            return true;

        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }

    private function userdutydetails()
    {
        if ($this->get_request_method() == "GET") {
            $this->response('', 406);
        }
        $userid = $this->_request['userid'];
        $weekno = $this->_request['weekno'];
        $year = $this->_request['year'];
        if($userid != "" && $weekno != "" && $year != "")
        {
            $dto = new DateTime();
            $dto->setISODate($year, $weekno);
            $startweek = $dto->format('Y-m-d');

            $shftdet = array();

            for($i=0; $i<7; $i++)
            {
                $wkdate = date('Y-m-d',strtotime($startweek . "+".$i." days"));
                $shiftslct = mysql_query("SELECT * FROM en_usershedule a LEFT JOIN en_usershifts b ON b.shiftid=a.sc_shiftid WHERE a.sc_userid='$userid' AND a.sc_date='$wkdate' AND a.sc_status='0'");
                if(mysql_num_rows($shiftslct) > 0)
                {
                    $det = array();
                    while($row = mysql_fetch_array($shiftslct))
                    {
                        $det[] = array('shiftname' => $row['shiftname'], 'shiftstart' => $row['shiftstart'], 'shiftend' => $row['shiftend'], 'shifttotalhours' => $row['shifttotalhours'], 'color' => $row['shiftcolor']);
                    }
                    
                    $shftdet[] = array('date' => $wkdate, 'details' => $det);
                }
                else{
                    $shftdet[] = array('date' => $wkdate, 'details' => "No details.");
                }
            }
            
            $success = array('status' => "success", "shifts" => $shftdet);
            $this->response($this->json($success), 200);  
            return true;
        }
        else{
            $success = array('status' => "failed", "msg" => "Required fields cannot be empty.");
            $this->response($this->json($success), 200);  
            return true;
        }
    }


    /* HELPERS */


    function _getdatebetweentwodates($startdate, $enddate, $interval = 'P1D', $format = 'Y-m-d'){
        $period = new DatePeriod(
            new DateTime($startdate),
            new DateInterval($interval),
            new DateTime($enddate)
        );

        $dates = '';

        if(sizeof($period)){
            foreach ($period as $value) {
                $dates[] = $value->format($format);
            }
        }

        return $dates;

    }

    function _frequency($freq)
    {
        switch ($freq) {
            case 'OD':
            $text = 'Once Daily';
            break;
            
            case 'TD/BD':
            $text = 'Twice Daily';
            break;

            case 'TDS/TID':
            $text = '3 Times Daily/As Dispended';
            break;

            case 'QDS':
            $text = '4 Times Daily';
            break;

            case 'NOCTE':
            $text = 'Night Time';
            break;

            case 'WEEKLY':
            $text = 'WEEKLY';
            break;

            case '24 HRLY':
            $text = '24 HRLY';
            break;

            case '6 HRLY':
            $text = '6 HRLY';
            break;

            case 'Interval':
            $text = 'Interval';
            break;
        }

        return $text;
    }
    
    /* function Defenition End */

    private function processJsonRequest() {
        $input = file_get_contents('php://input');
        $this->jsonObj = json_decode($input, true);
        $func = $this->jsonObj['func'];
        $this->log->LogDebug("func" . $func);
    }

    private function json($data) {
        if (is_array($data)) {
            return json_encode($data);
        }
    }

}

$api = new API;
$api->processApi();
?>